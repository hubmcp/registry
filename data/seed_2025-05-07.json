[{
  "_id": {
    "$oid": "68072098a9f0aa360302ab40"
  },
  "name": "io.github.21st-dev/magic-mcp",
  "id": "9006dd4c-6d70-4799-a777-26c92afdf40e",
  "description": "It's like v0 but in your Cursor/WindSurf/Cline. 21st dev Magic MCP server for working with your frontend like Magic",
  "repository": {
    "url": "https://github.com/21st-dev/magic-mcp",
    "name": "21st-dev/magic-mcp",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "21st-dev",
      "packagename": "npm",
      "license": "",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "-y",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          },
          {
            "argument": {
              "name": "@21st-dev/magic@latest",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 2
          }
        ],
        "namedarguments": [
          {
            "argument": {
              "name": "API_KEY",
              "description": "Named argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": "\"your-api-key\""
            },
            "shortflag": "",
            "longflag": "",
            "requiresvalue": true
          }
        ]
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "68072098a9f0aa360302ab41"
  },
  "name": "io.github.adfin-engineering/mcp-server-adfin",
  "id": "8d3b0799-33d7-44b9-a6d1-b043407de90c",
  "description": "A Model Context Protocol Server for connecting with Adfin APIs ",
  "repository": {
    "url": "https://github.com/Adfin-Engineering/mcp-server-adfin",
    "name": "Adfin-Engineering/mcp-server-adfin",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "Adfin-Engineering",
      "packagename": "unknown",
      "license": "",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "--directory",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          },
          {
            "argument": {
              "name": "<absolute_path_to_adfin_mcp_folder>",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 2
          },
          {
            "argument": {
              "name": "run",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 3
          },
          {
            "argument": {
              "name": "main_adfin_mcp.py",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 4
          },
          {
            "argument": {
              "name": "--directory",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 5
          },
          {
            "argument": {
              "name": "<absolute_path_to_adfin_mcp_folder>",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 6
          },
          {
            "argument": {
              "name": "run",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 7
          },
          {
            "argument": {
              "name": "filesystem.py",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 8
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "68072099a9f0aa360302ab42"
  },
  "name": "io.github.tinyfish-io/agentql-mcp",
  "id": "ca39eddb-ce2f-431e-8a1f-66ee6cbe8190",
  "description": "Model Context Protocol server that integrates AgentQL's data extraction capabilities.",
  "repository": {
    "url": "https://github.com/tinyfish-io/agentql-mcp",
    "name": "tinyfish-io/agentql-mcp",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "tinyfish-io",
      "packagename": "unknown",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "68072099a9f0aa360302ab43"
  },
  "name": "io.github.agentrpc/agentrpc",
  "id": "25a1b338-041f-474d-a3e2-4f4499ffc108",
  "description": "A universal RPC layer for AI agents. Connect to any function, any language, any framework, in minutes.",
  "repository": {
    "url": "https://github.com/agentrpc/agentrpc",
    "name": "agentrpc/agentrpc",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "agentrpc",
      "packagename": "npm",
      "license": "Apache License 2.0",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "-y",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          },
          {
            "argument": {
              "name": "agentrpc",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 2
          },
          {
            "argument": {
              "name": "mcp",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 3
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "68072099a9f0aa360302ab44"
  },
  "name": "io.github.aiven-open/mcp-aiven",
  "id": "ea833c23-e232-4667-816b-06144de4ac4b",
  "description": "Model Context Protocol server for Aiven",
  "repository": {
    "url": "https://github.com/Aiven-Open/mcp-aiven",
    "name": "Aiven-Open/mcp-aiven",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "Aiven-Open",
      "packagename": "pypi",
      "license": "Apache License 2.0",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "--directory",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          },
          {
            "argument": {
              "name": "$REPOSITORY_DIRECTORY",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 2
          },
          {
            "argument": {
              "name": "run",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 3
          },
          {
            "argument": {
              "name": "--with-editable",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 4
          },
          {
            "argument": {
              "name": "$REPOSITORY_DIRECTORY",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 5
          },
          {
            "argument": {
              "name": "--python",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 6
          },
          {
            "argument": {
              "name": "3.13",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 7
          },
          {
            "argument": {
              "name": "mcp-aiven",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 8
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "68072099a9f0aa360302ab45"
  },
  "name": "io.github.apache/iotdb-mcp-server",
  "id": "49ae1b81-ff1e-491f-9d07-f33cf4b79868",
  "description": "Apache IoTDB MCP Server",
  "repository": {
    "url": "https://github.com/apache/iotdb-mcp-server",
    "name": "apache/iotdb-mcp-server",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "apache",
      "packagename": "pypi",
      "license": "Apache License 2.0",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "--directory",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          },
          {
            "argument": {
              "name": "YOUR_REPO_PATH/src/iotdb_mcp_server",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 2
          },
          {
            "argument": {
              "name": "run",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 3
          },
          {
            "argument": {
              "name": "server.py",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 4
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "68072099a9f0aa360302ab46"
  },
  "name": "io.github.apache/iotdb",
  "id": "b34aebae-26a8-445c-92a1-bc998e23f904",
  "description": "Apache IoTDB",
  "repository": {
    "url": "https://github.com/apache/iotdb",
    "name": "apache/iotdb",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "apache",
      "packagename": "unknown",
      "license": "Apache License 2.0",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "68072099a9f0aa360302ab47"
  },
  "name": "io.github.apify/actors-mcp-server",
  "id": "8336a895-139a-4b03-95e3-b91ea5f8d006",
  "description": "Model Context Protocol (MCP) Server for Apify's Actors",
  "repository": {
    "url": "https://github.com/apify/actors-mcp-server",
    "name": "apify/actors-mcp-server",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "apify",
      "packagename": "unknown",
      "license": "Apache License 2.0",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "68072099a9f0aa360302ab48"
  },
  "name": "io.github.apimatic/apimatic-validator-mcp",
  "id": "b21f88f4-d74a-4859-af30-35f65fe3c876",
  "description": "APIMatic Validator MCP Server for validating OpenAPI specs via APIMatic's API with MCP",
  "repository": {
    "url": "https://github.com/apimatic/apimatic-validator-mcp",
    "name": "apimatic/apimatic-validator-mcp",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "apimatic",
      "packagename": "unknown",
      "license": "",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "C:\\PATH\\TO\\PARENT\\FOLDER\\build\\index.js",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "68072099a9f0aa360302ab49"
  },
  "name": "io.github.datastax/astra-db-mcp",
  "id": "d2539c7b-71d2-4b1c-a889-0a30003f3a50",
  "description": "An MCP server for Astra DB workloads",
  "repository": {
    "url": "https://github.com/datastax/astra-db-mcp",
    "name": "datastax/astra-db-mcp",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "datastax",
      "packagename": "npm",
      "license": "Apache License 2.0",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "-y",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          },
          {
            "argument": {
              "name": "@datastax/astra-db-mcp",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 2
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "68072099a9f0aa360302ab4a"
  },
  "name": "io.github.atlanhq/agent-toolkit",
  "id": "8015e4ae-6df8-46ed-8dea-46c29df3f039",
  "description": "Atlan AI Agent Toolkit",
  "repository": {
    "url": "https://github.com/atlanhq/agent-toolkit",
    "name": "atlanhq/agent-toolkit",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "atlanhq",
      "packagename": "unknown",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "68072099a9f0aa360302ab4b"
  },
  "name": "io.github.audienseco/mcp-audiense-insights",
  "id": "38a81764-8891-44b7-8424-c20fbaf280be",
  "description": "Audiense Insights MCP Server is a server based on the Model Context Protocol (MCP) that allows Claude and other MCP-compatible clients to interact with your Audiense Insights account",
  "repository": {
    "url": "https://github.com/AudienseCo/mcp-audiense-insights",
    "name": "AudienseCo/mcp-audiense-insights",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "AudienseCo",
      "packagename": "unknown",
      "license": "Apache License 2.0",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "6807209aa9f0aa360302ab4c"
  },
  "name": "io.github.awslabs/mcp",
  "id": "3ff6f28e-5144-4ced-b2e4-11fc22045b26",
  "description": "AWS MCP Servers — specialized MCP servers that bring AWS best practices directly to your development workflow",
  "repository": {
    "url": "https://github.com/awslabs/mcp",
    "name": "awslabs/mcp",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "awslabs",
      "packagename": "unknown",
      "license": "Apache License 2.0",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "6807209aa9f0aa360302ab4d"
  },
  "name": "io.github.axiomhq/mcp-server-axiom",
  "id": "2ea8f32c-2834-48e2-ad99-0870d9a07026",
  "description": "Axiom Model Context Protocol Server",
  "repository": {
    "url": "https://github.com/axiomhq/mcp-server-axiom",
    "name": "axiomhq/mcp-server-axiom",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "axiomhq",
      "packagename": "unknown",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "6807209aa9f0aa360302ab4e"
  },
  "name": "io.github.bankless/onchain-mcp",
  "id": "0e1846cc-a1ae-4411-b146-cdce2c1e08b8",
  "description": "Bringing the bankless onchain API to MCP",
  "repository": {
    "url": "https://github.com/Bankless/onchain-mcp",
    "name": "Bankless/onchain-mcp",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "Bankless",
      "packagename": "npm",
      "license": "",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "@bankless/onchain-mcp",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "6807209aa9f0aa360302ab4f"
  },
  "name": "io.github.ahnlabio/bicscan-mcp",
  "id": "9e821d75-76ba-48ab-96db-dbfb97e985e2",
  "description": "BICScan MCP Server",
  "repository": {
    "url": "https://github.com/ahnlabio/bicscan-mcp",
    "name": "ahnlabio/bicscan-mcp",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "ahnlabio",
      "packagename": "unknown",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "6807209aa9f0aa360302ab50"
  },
  "name": "io.github.bitrise-io/bitrise-mcp",
  "id": "ee2325f6-5d05-4ef3-9cc5-8f89bde1193f",
  "description": "MCP Server for the Bitrise API, enabling app management, build operations, artifact management and more.",
  "repository": {
    "url": "https://github.com/bitrise-io/bitrise-mcp",
    "name": "bitrise-io/bitrise-mcp",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "bitrise-io",
      "packagename": "unknown",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "--from",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          },
          {
            "argument": {
              "name": "git+https://github.com/bitrise-io/bitrise-mcp@v1.1.0",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 2
          },
          {
            "argument": {
              "name": "bitrise-mcp",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 3
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "6807209aa9f0aa360302ab51"
  },
  "name": "io.github.box-community/mcp-server-box",
  "id": "e0765047-0628-44cb-8b7a-4f1b79f61142",
  "description": "An MCP server capable of interacting with the Box API",
  "repository": {
    "url": "https://github.com/box-community/mcp-server-box",
    "name": "box-community/mcp-server-box",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "box-community",
      "packagename": "pypi",
      "license": "",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "--directory",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          },
          {
            "argument": {
              "name": "/Users/anovotny/Desktop/mcp-server-box",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 2
          },
          {
            "argument": {
              "name": "run",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 3
          },
          {
            "argument": {
              "name": "src/mcp_server_box.py",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 4
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "6807209aa9f0aa360302ab52"
  },
  "name": "io.github.browserbase/mcp-server-browserbase",
  "id": "1ce34f72-5853-4e0f-b52a-dc57f634ed4b",
  "description": "Allow LLMs to control a browser with Browserbase and Stagehand",
  "repository": {
    "url": "https://github.com/browserbase/mcp-server-browserbase",
    "name": "browserbase/mcp-server-browserbase",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "browserbase",
      "packagename": "unknown",
      "license": "",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "6807209aa9f0aa360302ab53"
  },
  "name": "io.github.chargebee/agentkit",
  "id": "c9fd8942-d809-43b0-96c7-b24ec49efe79",
  "description": "Seamlessly integrate AI agents with Chargebee using AgentKit for smarter billing and subscription workflows.",
  "repository": {
    "url": "https://github.com/chargebee/agentkit",
    "name": "chargebee/agentkit",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "chargebee",
      "packagename": "unknown",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "6807209aa9f0aa360302ab54"
  },
  "name": "io.github.chroma-core/chroma-mcp",
  "id": "06d4c745-7eb3-4e66-9ca9-4f61a0065e30",
  "description": "A Model Context Protocol (MCP) server implementation that provides database capabilities for Chroma",
  "repository": {
    "url": "https://github.com/chroma-core/chroma-mcp",
    "name": "chroma-core/chroma-mcp",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "chroma-core",
      "packagename": "unknown",
      "license": "Apache License 2.0",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "6807209aa9f0aa360302ab55"
  },
  "name": "io.github.chronulusai/chronulus-mcp",
  "id": "1ca1682c-f9b8-46ce-bbd1-5b2cce0bbdab",
  "description": "MCP Server for Chronulus AI Forecasting and Prediction Agents",
  "repository": {
    "url": "https://github.com/ChronulusAI/chronulus-mcp",
    "name": "ChronulusAI/chronulus-mcp",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "ChronulusAI",
      "packagename": "unknown",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "-m",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          },
          {
            "argument": {
              "name": "chronulus_mcp",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 2
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "6807209ba9f0aa360302ab56"
  },
  "name": "io.github.circleci-public/mcp-server-circleci",
  "id": "2bcc2ca6-a75a-423e-8cab-6bb721f35c8b",
  "description": "A specialized server implementation for the Model Context Protocol (MCP) designed to integrate with CircleCI's development workflow. This project serves as a bridge between CircleCI's infrastructure and the Model Context Protocol, enabling enhanced AI-powered development experiences.",
  "repository": {
    "url": "https://github.com/CircleCI-Public/mcp-server-circleci",
    "name": "CircleCI-Public/mcp-server-circleci",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "CircleCI-Public",
      "packagename": "unknown",
      "license": "Apache License 2.0",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "6807209ba9f0aa360302ab57"
  },
  "name": "io.github.clickhouse/mcp-clickhouse",
  "id": "ae299e36-b2b0-4250-8314-d2223ae8eab7",
  "description": "",
  "repository": {
    "url": "https://github.com/ClickHouse/mcp-clickhouse",
    "name": "ClickHouse/mcp-clickhouse",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "ClickHouse",
      "packagename": "pypi",
      "license": "Apache License 2.0",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "run",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          },
          {
            "argument": {
              "name": "--with",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 2
          },
          {
            "argument": {
              "name": "mcp-clickhouse",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 3
          },
          {
            "argument": {
              "name": "--python",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 4
          },
          {
            "argument": {
              "name": "3.13",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 5
          },
          {
            "argument": {
              "name": "mcp-clickhouse",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 6
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "6807209ba9f0aa360302ab58"
  },
  "name": "io.github.cloudflare/mcp-server-cloudflare",
  "id": "f6779094-73a4-4694-ac67-f90f72e16c6f",
  "description": "",
  "repository": {
    "url": "https://github.com/cloudflare/mcp-server-cloudflare",
    "name": "cloudflare/mcp-server-cloudflare",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "cloudflare",
      "packagename": "unknown",
      "license": "Apache License 2.0",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "6807209ba9f0aa360302ab59"
  },
  "name": "io.github.codacy/codacy-mcp-server",
  "id": "d3caabfa-0972-4d6d-b748-a1ee3d4c2708",
  "description": "Codacy's MCP Server implementation",
  "repository": {
    "url": "https://github.com/codacy/codacy-mcp-server",
    "name": "codacy/codacy-mcp-server",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "codacy",
      "packagename": "npm",
      "license": "Other",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "-y",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          },
          {
            "argument": {
              "name": "@codacy/codacy-mcp",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 2
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "6807209ba9f0aa360302ab5a"
  },
  "name": "io.github.codelogicincengineering/codelogic-mcp-server",
  "id": "03484c20-ff30-49b8-8024-e03aad7f91ec",
  "description": "An MCP Server to utilize Codelogic's rich software dependency data in your AI programming assistant.",
  "repository": {
    "url": "https://github.com/CodeLogicIncEngineering/codelogic-mcp-server",
    "name": "CodeLogicIncEngineering/codelogic-mcp-server",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "CodeLogicIncEngineering",
      "packagename": "unknown",
      "license": "Mozilla Public License 2.0",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "6807209ba9f0aa360302ab5b"
  },
  "name": "io.github.comet-ml/opik-mcp",
  "id": "86cea2ad-ddfe-4fdf-af87-a83fea7ef207",
  "description": "Model Context Protocol (MCP) implementation for Opik enabling seamless IDE integration and unified access to prompts, projects, traces, and metrics. ",
  "repository": {
    "url": "https://github.com/comet-ml/opik-mcp",
    "name": "comet-ml/opik-mcp",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "comet-ml",
      "packagename": "unknown",
      "license": "Apache License 2.0",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "6807209ba9f0aa360302ab5c"
  },
  "name": "io.github.comet-ml/opik",
  "id": "dc20ba7a-8941-400a-90b7-f69658a6ed66",
  "description": "Debug, evaluate, and monitor your LLM applications, RAG systems, and agentic workflows with comprehensive tracing, automated evaluations, and production-ready dashboards.",
  "repository": {
    "url": "https://github.com/comet-ml/opik",
    "name": "comet-ml/opik",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "comet-ml",
      "packagename": "unknown",
      "license": "Apache License 2.0",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "6807209ba9f0aa360302ab5d"
  },
  "name": "io.github.its-dart/dart-mcp-server",
  "id": "d3bf5900-efb2-4866-a9c0-5e0e6346135c",
  "description": "Dart AI Model Context Protocol (MCP) server",
  "repository": {
    "url": "https://github.com/its-dart/dart-mcp-server",
    "name": "its-dart/dart-mcp-server",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "its-dart",
      "packagename": "npm",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "-y",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          },
          {
            "argument": {
              "name": "dart-mcp-server",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 2
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "6807209ba9f0aa360302ab5e"
  },
  "name": "io.github.devhub/devhub-cms-mcp",
  "id": "983747b6-21ae-467d-8a81-fd06f568fc73",
  "description": "DevHub CMS LLM integration through the Model Context Protocol",
  "repository": {
    "url": "https://github.com/devhub/devhub-cms-mcp",
    "name": "devhub/devhub-cms-mcp",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "devhub",
      "packagename": "unknown",
      "license": "",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "6807209ba9f0aa360302ab5f"
  },
  "name": "io.github.e2b-dev/mcp-server",
  "id": "c3f9ba4e-6c79-46b2-a1c5-c34815266f17",
  "description": "Giving Claude ability to run code with E2B via MCP (Model Context Protocol)",
  "repository": {
    "url": "https://github.com/e2b-dev/mcp-server",
    "name": "e2b-dev/mcp-server",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "e2b-dev",
      "packagename": "unknown",
      "license": "Apache License 2.0",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "6807209ca9f0aa360302ab60"
  },
  "name": "io.github.edubase/mcp",
  "id": "cd655f15-196b-467f-8407-dd1514116b47",
  "description": "The EduBase MCP server enables Claude and other LLMs to interact with EduBase's comprehensive e-learning platform through the Model Context Protocol (MCP).",
  "repository": {
    "url": "https://github.com/EduBase/MCP",
    "name": "EduBase/MCP",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "EduBase",
      "packagename": "unknown",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "/path/to/dist/index.js",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "6807209ca9f0aa360302ab61"
  },
  "name": "io.github.elastic/mcp-server-elasticsearch",
  "id": "d5d81e76-6f9e-4fe4-a8a0-6c23884ca6dc",
  "description": "",
  "repository": {
    "url": "https://github.com/elastic/mcp-server-elasticsearch",
    "name": "elastic/mcp-server-elasticsearch",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "elastic",
      "packagename": "npm",
      "license": "Apache License 2.0",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "-y",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          },
          {
            "argument": {
              "name": "@elastic/mcp-server-elasticsearch",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 2
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "6807209ca9f0aa360302ab62"
  },
  "name": "io.github.esignaturescom/mcp-server-esignatures",
  "id": "16de376c-a2c2-4070-b001-738c86247897",
  "description": "MCP server for eSignatures (https://esignatures.com)",
  "repository": {
    "url": "https://github.com/esignaturescom/mcp-server-esignatures",
    "name": "esignaturescom/mcp-server-esignatures",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "esignaturescom",
      "packagename": "unknown",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "6807209ca9f0aa360302ab63"
  },
  "name": "io.github.exa-labs/exa-mcp-server",
  "id": "984b9d27-b7f4-40ac-9cbd-21efe1fdb5b8",
  "description": "Claude can perform Web Search | Exa with MCP (Model Context Protocol)",
  "repository": {
    "url": "https://github.com/exa-labs/exa-mcp-server",
    "name": "exa-labs/exa-mcp-server",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "exa-labs",
      "packagename": "npm",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "/path/to/exa-mcp-server/build/index.js",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "6807209ca9f0aa360302ab64"
  },
  "name": "io.github.fewsats/fewsats-mcp",
  "id": "ba463ada-2e17-4b91-8280-76bdcf9ea652",
  "description": "Fewsats MCP server",
  "repository": {
    "url": "https://github.com/Fewsats/fewsats-mcp",
    "name": "Fewsats/fewsats-mcp",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "Fewsats",
      "packagename": "unknown",
      "license": "",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "6807209ca9f0aa360302ab65"
  },
  "name": "io.github.fibery-inc/fibery-mcp-server",
  "id": "91c2cb28-6c2e-4f96-8b05-c6e11398402d",
  "description": "",
  "repository": {
    "url": "https://github.com/Fibery-inc/fibery-mcp-server",
    "name": "Fibery-inc/fibery-mcp-server",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "Fibery-inc",
      "packagename": "pypi",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "tool",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          },
          {
            "argument": {
              "name": "run",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 2
          },
          {
            "argument": {
              "name": "fibery-mcp-server",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 3
          },
          {
            "argument": {
              "name": "--fibery-host",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 4
          },
          {
            "argument": {
              "name": "your-domain.fibery.io",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 5
          },
          {
            "argument": {
              "name": "--fibery-api-token",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 6
          },
          {
            "argument": {
              "name": "your-api-token",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 7
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "6807209ca9f0aa360302ab66"
  },
  "name": "io.github.financial-datasets/mcp-server",
  "id": "90628476-0f02-417a-b56c-17039238bffa",
  "description": "An MCP server for interacting with the Financial Datasets stock market API.",
  "repository": {
    "url": "https://github.com/financial-datasets/mcp-server",
    "name": "financial-datasets/mcp-server",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "financial-datasets",
      "packagename": "unknown",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "--directory",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          },
          {
            "argument": {
              "name": "/absolute/path/to/financial-datasets-mcp",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 2
          },
          {
            "argument": {
              "name": "run",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 3
          },
          {
            "argument": {
              "name": "server.py",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 4
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "6807209ca9f0aa360302ab67"
  },
  "name": "io.github.mendableai/firecrawl-mcp-server",
  "id": "ab8c7013-74d7-4e41-9dc3-be8b7057c285",
  "description": "Official Firecrawl MCP Server - Adds powerful web scraping to Cursor, Claude and any other LLM clients.",
  "repository": {
    "url": "https://github.com/mendableai/firecrawl-mcp-server",
    "name": "mendableai/firecrawl-mcp-server",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "mendableai",
      "packagename": "npm",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "-y",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          },
          {
            "argument": {
              "name": "firecrawl-mcp",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 2
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "6807209ca9f0aa360302ab68"
  },
  "name": "io.github.fireproof-storage/mcp-database-server",
  "id": "5633a478-f12e-4102-b77a-1ad4053e2e3e",
  "description": "Store and load JSON documents from LLM tool use",
  "repository": {
    "url": "https://github.com/fireproof-storage/mcp-database-server",
    "name": "fireproof-storage/mcp-database-server",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "fireproof-storage",
      "packagename": "unknown",
      "license": "Other",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "6807209ca9f0aa360302ab69"
  },
  "name": "io.github.oschina/mcp-gitee",
  "id": "6774a07c-b7ff-4183-9aa9-3edb42df4f5e",
  "description": "mcp-gitee is a Model Context Protocol (MCP) server implementation for Gitee. It provides a set of tools that interact with Gitee's API, allowing AI assistants to manage repository, issues, pull requests, etc.",
  "repository": {
    "url": "https://github.com/oschina/mcp-gitee",
    "name": "oschina/mcp-gitee",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "oschina",
      "packagename": "unknown",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "6807209da9f0aa360302ab6a"
  },
  "name": "io.github.gotohuman/gotohuman-mcp-server",
  "id": "9b53681e-2e0d-4021-a5ad-00e5a51d6d31",
  "description": "",
  "repository": {
    "url": "https://github.com/gotohuman/gotohuman-mcp-server",
    "name": "gotohuman/gotohuman-mcp-server",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "gotohuman",
      "packagename": "unknown",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "/<absolute-path>/build/index.js",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "6807209da9f0aa360302ab6b"
  },
  "name": "io.github.grafana/mcp-grafana",
  "id": "67f40a8a-f5cb-459c-a723-37cb44b6acd2",
  "description": "MCP server for Grafana",
  "repository": {
    "url": "https://github.com/grafana/mcp-grafana",
    "name": "grafana/mcp-grafana",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "grafana",
      "packagename": "unknown",
      "license": "Apache License 2.0",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "6807209da9f0aa360302ab6c"
  },
  "name": "io.github.graphlit/graphlit-mcp-server",
  "id": "72e68ed1-a75b-41af-894b-1eff76d635a5",
  "description": "Model Context Protocol (MCP) Server for Graphlit Platform",
  "repository": {
    "url": "https://github.com/graphlit/graphlit-mcp-server",
    "name": "graphlit/graphlit-mcp-server",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "graphlit",
      "packagename": "unknown",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "6807209da9f0aa360302ab6d"
  },
  "name": "io.github.greptimeteam/greptimedb-mcp-server",
  "id": "94153f06-8b0b-450d-8b16-5e93175e23e9",
  "description": "A Model Context Protocol (MCP) server implementation for GreptimeDB",
  "repository": {
    "url": "https://github.com/GreptimeTeam/greptimedb-mcp-server",
    "name": "GreptimeTeam/greptimedb-mcp-server",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "GreptimeTeam",
      "packagename": "pypi",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "--directory",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          },
          {
            "argument": {
              "name": "/path/to/greptimedb-mcp-server",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 2
          },
          {
            "argument": {
              "name": "run",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 3
          },
          {
            "argument": {
              "name": "-m",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 4
          },
          {
            "argument": {
              "name": "greptimedb_mcp_server.server",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 5
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "6807209da9f0aa360302ab6e"
  },
  "name": "io.github.greptimeteam/greptimedb",
  "id": "5d279e89-a59c-4424-8865-e07355ae3c74",
  "description": "An open-source, cloud-native, unified observability database for metrics, logs and traces, supporting SQL/PromQL/Streaming. Available on GreptimeCloud.",
  "repository": {
    "url": "https://github.com/GreptimeTeam/greptimedb",
    "name": "GreptimeTeam/greptimedb",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "GreptimeTeam",
      "packagename": "unknown",
      "license": "Apache License 2.0",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "6807209da9f0aa360302ab6f"
  },
  "name": "io.github.heroku/heroku-mcp-server",
  "id": "af12a55e-6dd6-4279-9947-99d58181dd49",
  "description": "Heroku Platform MCP Server",
  "repository": {
    "url": "https://github.com/heroku/heroku-mcp-server",
    "name": "heroku/heroku-mcp-server",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "heroku",
      "packagename": "unknown",
      "license": "Apache License 2.0",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "6807209da9f0aa360302ab70"
  },
  "name": "io.github.aliyun/alibabacloud-hologres-mcp-server",
  "id": "27649556-781d-4c8e-9d31-2d20fcbc12a9",
  "description": "",
  "repository": {
    "url": "https://github.com/aliyun/alibabacloud-hologres-mcp-server",
    "name": "aliyun/alibabacloud-hologres-mcp-server",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "aliyun",
      "packagename": "unknown",
      "license": "Apache License 2.0",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "6807209da9f0aa360302ab71"
  },
  "name": "io.github.hyperbrowserai/mcp",
  "id": "323a9d79-83ab-4f0c-bacd-d6ac7790262d",
  "description": "A MCP server implementation for hyperbrowser",
  "repository": {
    "url": "https://github.com/hyperbrowserai/mcp",
    "name": "hyperbrowserai/mcp",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "hyperbrowserai",
      "packagename": "npm",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "-y",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          },
          {
            "argument": {
              "name": "hyperbrowser-mcp",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 2
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "6807209da9f0aa360302ab72"
  },
  "name": "io.github.ibm/wxflows",
  "id": "de5d1180-9c94-4dbc-bd97-1778f4ccf471",
  "description": "Examples and tutorials for building AI applications with watsonx.ai Flows Engine",
  "repository": {
    "url": "https://github.com/IBM/wxflows",
    "name": "IBM/wxflows",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "IBM",
      "packagename": "unknown",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "6807209da9f0aa360302ab73"
  },
  "name": "io.github.jamsocket/forevervm",
  "id": "341f0a58-01b3-4345-b775-d62244692ed2",
  "description": "Securely run AI-generated code in stateful sandboxes that run forever.",
  "repository": {
    "url": "https://github.com/jamsocket/forevervm",
    "name": "jamsocket/forevervm",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "jamsocket",
      "packagename": "unknown",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "6807209ea9f0aa360302ab74"
  },
  "name": "io.github.elie222/inbox-zero",
  "id": "f7714d12-7c62-4f91-89a9-cf6e4391bb9f",
  "description": "AI personal assistant for email. Open source app to help you reach inbox zero fast.",
  "repository": {
    "url": "https://github.com/elie222/inbox-zero",
    "name": "elie222/inbox-zero",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "elie222",
      "packagename": "unknown",
      "license": "GNU Affero General Public License v3.0",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "6807209ea9f0aa360302ab75"
  },
  "name": "io.github.inkeep/mcp-server-python",
  "id": "2aff2d75-5b8f-4c31-bd2f-8dcc282e74d1",
  "description": "Inkeep MCP Server",
  "repository": {
    "url": "https://github.com/inkeep/mcp-server-python",
    "name": "inkeep/mcp-server-python",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "inkeep",
      "packagename": "unknown",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "6807209ea9f0aa360302ab76"
  },
  "name": "io.github.integration-app/mcp-server",
  "id": "3605a28f-084c-4ed4-91d7-0856e7ece444",
  "description": "",
  "repository": {
    "url": "https://github.com/integration-app/mcp-server",
    "name": "integration-app/mcp-server",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "integration-app",
      "packagename": "npm",
      "license": "",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "-y",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          },
          {
            "argument": {
              "name": "@integration-app/mcp-server",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 2
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "6807209ea9f0aa360302ab77"
  },
  "name": "io.github.jetbrains/mcp-jetbrains",
  "id": "6fe77224-4371-49ac-9afa-b6dd6f9a4ee9",
  "description": "A model context protocol server to work with JetBrains IDEs: IntelliJ, PyCharm, WebStorm, etc. Also, works with Android Studio",
  "repository": {
    "url": "https://github.com/JetBrains/mcp-jetbrains",
    "name": "JetBrains/mcp-jetbrains",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "JetBrains",
      "packagename": "npm",
      "license": "Apache License 2.0",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "-y",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          },
          {
            "argument": {
              "name": "@jetbrains/mcp-proxy",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 2
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "6807209ea9f0aa360302ab78"
  },
  "name": "io.github.kagisearch/kagimcp",
  "id": "bf2a254a-c929-4f42-9756-f47ea306f5d1",
  "description": "A Model Context Protocol (MCP) server for Kagi search & other tools.",
  "repository": {
    "url": "https://github.com/kagisearch/kagimcp",
    "name": "kagisearch/kagimcp",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "kagisearch",
      "packagename": "unknown",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "6807209ea9f0aa360302ab79"
  },
  "name": "io.github.keboola/keboola-mcp-server",
  "id": "0274915f-7988-4a4e-bb48-d3bed6f2e894",
  "description": "",
  "repository": {
    "url": "https://github.com/keboola/keboola-mcp-server",
    "name": "keboola/keboola-mcp-server",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "keboola",
      "packagename": "unknown",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "-m",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          },
          {
            "argument": {
              "name": "keboola_mcp_server",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 2
          },
          {
            "argument": {
              "name": "--api-url",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 3
          },
          {
            "argument": {
              "name": "https://connection.YOUR_REGION.keboola.com",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 4
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "6807209ea9f0aa360302ab7b"
  },
  "name": "io.github.translated/lara-mcp",
  "id": "98bd9dd1-3a94-41fa-a91e-f8ab5974e057",
  "description": "",
  "repository": {
    "url": "https://github.com/translated/lara-mcp",
    "name": "translated/lara-mcp",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "translated",
      "packagename": "npm",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "-y",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          },
          {
            "argument": {
              "name": "@translated/lara-mcp@latest",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 2
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "6807209ea9f0aa360302ab7c"
  },
  "name": "io.github.pydantic/logfire-mcp",
  "id": "9b3b6e2c-eff0-4398-a44e-db0b76c82831",
  "description": "The Logfire MCP Server is here! :tada:",
  "repository": {
    "url": "https://github.com/pydantic/logfire-mcp",
    "name": "pydantic/logfire-mcp",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "pydantic",
      "packagename": "unknown",
      "license": "",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "logfire-mcp",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          }
        ],
        "namedarguments": [
          {
            "argument": {
              "name": "--read-token",
              "description": "Named argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": "YOUR-TOKEN"
            },
            "shortflag": "",
            "longflag": "",
            "requiresvalue": true
          }
        ]
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "6807209ea9f0aa360302ab7d"
  },
  "name": "io.github.langfuse/mcp-server-langfuse",
  "id": "ee1cea7f-4dec-4007-861a-1914b983b730",
  "description": "Model Context Protocol (MCP) Server for Langfuse Prompt Management. This server allows you to access and manage your Langfuse prompts through the Model Context Protocol.",
  "repository": {
    "url": "https://github.com/langfuse/mcp-server-langfuse",
    "name": "langfuse/mcp-server-langfuse",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "langfuse",
      "packagename": "unknown",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "<absolute-path>/build/index.js",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "6807209fa9f0aa360302ab7e"
  },
  "name": "io.github.lingodotdev/lingo.dev",
  "id": "e7246538-2870-473e-a067-d69d871e1052",
  "description": "⚡️ Open-source AI-powered CLI for web & mobile localization. Bring your own LLM or use Lingo.dev-managed localization engine.",
  "repository": {
    "url": "https://github.com/lingodotdev/lingo.dev",
    "name": "lingodotdev/lingo.dev",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "lingodotdev",
      "packagename": "unknown",
      "license": "Apache License 2.0",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "6807209fa9f0aa360302ab7f"
  },
  "name": "io.github.mailgun/mailgun-mcp-server",
  "id": "1fe1d58b-d75c-459d-bcf5-085cf66f74c4",
  "description": "Implementation of Model Context Protocol server for Mailgun APIs",
  "repository": {
    "url": "https://github.com/mailgun/mailgun-mcp-server",
    "name": "mailgun/mailgun-mcp-server",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "mailgun",
      "packagename": "unknown",
      "license": "Apache License 2.0",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "CHANGE/THIS/PATH/TO/mailgun-mcp-server/src/mailgun-mcp.js",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "6807209fa9f0aa360302ab80"
  },
  "name": "io.github.integromat/make-mcp-server",
  "id": "d526fadb-cb43-48a0-b88e-506ec5a74d65",
  "description": "Make MCP Server",
  "repository": {
    "url": "https://github.com/integromat/make-mcp-server",
    "name": "integromat/make-mcp-server",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "integromat",
      "packagename": "npm",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "-y",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          },
          {
            "argument": {
              "name": "@makehq/mcp-server",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 2
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "6807209fa9f0aa360302ab81"
  },
  "name": "io.github.meilisearch/meilisearch-mcp",
  "id": "b47dc170-860c-4a51-aa05-09912c8070a6",
  "description": "A Model Context Protocol (MCP) server for interacting with Meilisearch through LLM interfaces.",
  "repository": {
    "url": "https://github.com/meilisearch/meilisearch-mcp",
    "name": "meilisearch/meilisearch-mcp",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "meilisearch",
      "packagename": "unknown",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "-n",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          },
          {
            "argument": {
              "name": "meilisearch-mcp",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 2
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "6807209fa9f0aa360302ab82"
  },
  "name": "io.github.metoro-io/metoro-mcp-server",
  "id": "cce9e82c-d9af-4ecf-aa0f-cc9dc7a2d8a6",
  "description": "Metoro MCP Server",
  "repository": {
    "url": "https://github.com/metoro-io/metoro-mcp-server",
    "name": "metoro-io/metoro-mcp-server",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "metoro-io",
      "packagename": "unknown",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "6807209fa9f0aa360302ab83"
  },
  "name": "io.github.zilliztech/mcp-server-milvus",
  "id": "3560c139-b9fe-4755-b5f9-3326501cb6dc",
  "description": "Model Context Protocol Servers for Milvus",
  "repository": {
    "url": "https://github.com/zilliztech/mcp-server-milvus",
    "name": "zilliztech/mcp-server-milvus",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "zilliztech",
      "packagename": "unknown",
      "license": "",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "--directory",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          },
          {
            "argument": {
              "name": "/path/to/mcp-server-milvus/src/mcp_server_milvus",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 2
          },
          {
            "argument": {
              "name": "run",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 3
          },
          {
            "argument": {
              "name": "server.py",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 4
          },
          {
            "argument": {
              "name": "--milvus-uri",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 5
          },
          {
            "argument": {
              "name": "http://localhost:19530",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 6
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "6807209fa9f0aa360302ab84"
  },
  "name": "io.github.momentohq/mcp-momento",
  "id": "5014239f-c12d-431b-801b-373c89092678",
  "description": "A model context protocol server for Momento",
  "repository": {
    "url": "https://github.com/momentohq/mcp-momento",
    "name": "momentohq/mcp-momento",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "momentohq",
      "packagename": "npm",
      "license": "Apache License 2.0",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "-y",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          },
          {
            "argument": {
              "name": "@gomomento/mcp-momento",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 2
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720a1a9f0aa360302ab93"
  },
  "name": "io.github.rember/rember-mcp",
  "id": "a00cd244-b45a-45d8-b97d-e9699d6529a6",
  "description": "A Model Context Protocol (MCP) server for Rember.",
  "repository": {
    "url": "https://github.com/rember/rember-mcp",
    "name": "rember/rember-mcp",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "rember",
      "packagename": "npm",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "-y",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          },
          {
            "argument": {
              "name": "@getrember/mcp",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 2
          }
        ],
        "namedarguments": [
          {
            "argument": {
              "name": "--api-key",
              "description": "Named argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": "YOUR_REMBER_API_KEY"
            },
            "shortflag": "",
            "longflag": "",
            "requiresvalue": true
          }
        ]
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "6807209fa9f0aa360302ab85"
  },
  "name": "io.github.motherduckdb/mcp-server-motherduck",
  "id": "c3f2a8f4-912d-4117-b8c9-1fe387264b6b",
  "description": "MCP server for DuckDB and MotherDuck",
  "repository": {
    "url": "https://github.com/motherduckdb/mcp-server-motherduck",
    "name": "motherduckdb/mcp-server-motherduck",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "motherduckdb",
      "packagename": "unknown",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "mcp-server-motherduck",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          },
          {
            "argument": {
              "name": "--db-path",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 2
          },
          {
            "argument": {
              "name": "md:",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 3
          },
          {
            "argument": {
              "name": "--motherduck-token",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 4
          },
          {
            "argument": {
              "name": "<YOUR_MOTHERDUCK_TOKEN_HERE>",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 5
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "6807209fa9f0aa360302ab86"
  },
  "name": "io.github.needle-ai/needle-mcp",
  "id": "a71ab7e4-5c00-4b52-b812-891939c86bc0",
  "description": "Integration of Needle in modelcontextprotocol",
  "repository": {
    "url": "https://github.com/needle-ai/needle-mcp",
    "name": "needle-ai/needle-mcp",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "needle-ai",
      "packagename": "pypi",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "--directory",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          },
          {
            "argument": {
              "name": "/path/to/needle-mcp",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 2
          },
          {
            "argument": {
              "name": "run",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 3
          },
          {
            "argument": {
              "name": "needle-mcp",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 4
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "6807209fa9f0aa360302ab87"
  },
  "name": "io.github.neo4j-contrib/mcp-neo4j",
  "id": "8389a7c0-268f-47e0-ba32-e3fa5de71894",
  "description": "Model Context Protocol with Neo4j",
  "repository": {
    "url": "https://github.com/neo4j-contrib/mcp-neo4j",
    "name": "neo4j-contrib/mcp-neo4j",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "neo4j-contrib",
      "packagename": "unknown",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720a0a9f0aa360302ab88"
  },
  "name": "io.github.neondatabase/mcp-server-neon",
  "id": "8ccfeb83-f177-4d23-948e-9223fd7fedaa",
  "description": "MCP server for interacting with Neon Management API and databases",
  "repository": {
    "url": "https://github.com/neondatabase-labs/mcp-server-neon",
    "name": "neondatabase-labs/mcp-server-neon",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "neondatabase-labs",
      "packagename": "npm",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "-y",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          },
          {
            "argument": {
              "name": "mcp-remote",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 2
          },
          {
            "argument": {
              "name": "https://mcp.neon.tech/sse",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 3
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720a0a9f0aa360302ab89"
  },
  "name": "io.github.oceanbase/mcp-oceanbase",
  "id": "0fcb8b4f-09fa-4e8b-89f5-57dbcf76e068",
  "description": "MCP Server for OceanBase database and its tools",
  "repository": {
    "url": "https://github.com/oceanbase/mcp-oceanbase",
    "name": "oceanbase/mcp-oceanbase",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "oceanbase",
      "packagename": "unknown",
      "license": "Apache License 2.0",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720a0a9f0aa360302ab8a"
  },
  "name": "io.github.octagonai/octagon-mcp-server",
  "id": "de9fba6f-06f2-4c43-86ac-5faa4390d130",
  "description": "A free MCP server to analyze and extract insights from public filings, earnings transcripts, financial metrics, stock market data, private market transactions, and deep web-based research within Claude Desktop and other popular MCP clients.",
  "repository": {
    "url": "https://github.com/OctagonAI/octagon-mcp-server",
    "name": "OctagonAI/octagon-mcp-server",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "OctagonAI",
      "packagename": "unknown",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720a0a9f0aa360302ab8b"
  },
  "name": "io.github.oxylabs/oxylabs-mcp",
  "id": "a0f89d47-6a05-444a-9d32-87c54a5aa846",
  "description": "Official Oxylabs MCP integration",
  "repository": {
    "url": "https://github.com/oxylabs/oxylabs-mcp",
    "name": "oxylabs/oxylabs-mcp",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "oxylabs",
      "packagename": "unknown",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "oxylabs-mcp",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720a1a9f0aa360302ab94"
  },
  "name": "io.github.riza-io/riza-mcp",
  "id": "a5caf174-b132-4997-87e3-5e6beac00fb1",
  "description": "",
  "repository": {
    "url": "https://github.com/riza-io/riza-mcp",
    "name": "riza-io/riza-mcp",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "riza-io",
      "packagename": "npm",
      "license": "",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "@riza-io/riza-mcp",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720a0a9f0aa360302ab8c"
  },
  "name": "io.github.paddlehq/paddle-mcp-server",
  "id": "ae8422e1-867f-478c-8196-c0e2fc513a93",
  "description": "Interact with the Paddle API using AI assistants like Claude, or in AI-powered IDEs like Cursor. Manage product catalog, billing and subscriptions, and reports.",
  "repository": {
    "url": "https://github.com/PaddleHQ/paddle-mcp-server",
    "name": "PaddleHQ/paddle-mcp-server",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "PaddleHQ",
      "packagename": "npm",
      "license": "Apache License 2.0",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "-y",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          },
          {
            "argument": {
              "name": "@paddle/paddle-mcp",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 2
          }
        ],
        "namedarguments": [
          {
            "argument": {
              "name": "--api-key",
              "description": "Named argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": "PADDLE_API_KEY"
            },
            "shortflag": "",
            "longflag": "",
            "requiresvalue": true
          },
          {
            "argument": {
              "name": "--environment",
              "description": "Named argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": "(sandbox|production)"
            },
            "shortflag": "",
            "longflag": "",
            "requiresvalue": true
          }
        ]
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720a0a9f0aa360302ab8d"
  },
  "name": "io.github.ppl-ai/modelcontextprotocol",
  "id": "34b52509-5b62-487a-8225-b44e6b6cef5d",
  "description": "A Model Context Protocol Server connector for Perplexity API, to enable web search without leaving the MCP ecosystem.",
  "repository": {
    "url": "https://github.com/ppl-ai/modelcontextprotocol",
    "name": "ppl-ai/modelcontextprotocol",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "ppl-ai",
      "packagename": "docker",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "run",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          },
          {
            "argument": {
              "name": "-i",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 2
          },
          {
            "argument": {
              "name": "--rm",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 3
          },
          {
            "argument": {
              "name": "-e",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 4
          },
          {
            "argument": {
              "name": "PERPLEXITY_API_KEY",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 5
          },
          {
            "argument": {
              "name": "mcp/perplexity-ask",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 6
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720a0a9f0aa360302ab8e"
  },
  "name": "io.github.redis/mcp-redis",
  "id": "3eb7731d-a0e4-4d6b-840f-c2b7404d9da0",
  "description": "The official Redis MCP Server is a natural language interface designed for agentic applications to manage and search data in Redis efficiently",
  "repository": {
    "url": "https://github.com/redis/mcp-redis",
    "name": "redis/mcp-redis",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "redis",
      "packagename": "unknown",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720a0a9f0aa360302ab8f"
  },
  "name": "io.github.redis/mcp-redis-cloud",
  "id": "12cf3a2a-f42b-4aea-9fbc-92062759a409",
  "description": "",
  "repository": {
    "url": "https://github.com/redis/mcp-redis-cloud",
    "name": "redis/mcp-redis-cloud",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "redis",
      "packagename": "unknown",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "--experimental-fetch",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          },
          {
            "argument": {
              "name": "<absolute_path_to_project_root>/dist/index.js",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 2
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720a0a9f0aa360302ab90"
  },
  "name": "io.github.qdrant/mcp-server-qdrant",
  "id": "0ec956dd-88c8-4dcf-8f80-5b3af6a2f748",
  "description": "An official Qdrant Model Context Protocol (MCP) server implementation",
  "repository": {
    "url": "https://github.com/qdrant/mcp-server-qdrant",
    "name": "qdrant/mcp-server-qdrant",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "qdrant",
      "packagename": "unknown",
      "license": "Apache License 2.0",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720a0a9f0aa360302ab91"
  },
  "name": "io.github.ramp-public/ramp-mcp",
  "id": "5b48ab98-6ef5-494a-a8b6-215eeddd99f7",
  "description": "ramp_mcp",
  "repository": {
    "url": "https://github.com/ramp-public/ramp_mcp",
    "name": "ramp-public/ramp_mcp",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "ramp-public",
      "packagename": "unknown",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720a1a9f0aa360302ab92"
  },
  "name": "io.github.mindscapehq/mcp-server-raygun",
  "id": "227e036c-dab7-4dde-80a2-ae318a050cb2",
  "description": "",
  "repository": {
    "url": "https://github.com/MindscapeHQ/mcp-server-raygun",
    "name": "MindscapeHQ/mcp-server-raygun",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "MindscapeHQ",
      "packagename": "npm",
      "license": "",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "-y",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          },
          {
            "argument": {
              "name": "@raygun.io/mcp-server-raygun",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 2
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720a1a9f0aa360302ab95"
  },
  "name": "io.github.fatwang2/search1api-mcp",
  "id": "236102b9-25f2-422c-82a6-5dac59af2453",
  "description": "",
  "repository": {
    "url": "https://github.com/fatwang2/search1api-mcp",
    "name": "fatwang2/search1api-mcp",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "fatwang2",
      "packagename": "npm",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "-y",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          },
          {
            "argument": {
              "name": "search1api-mcp",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 2
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720a1a9f0aa360302ab96"
  },
  "name": "io.github.screenshotone/mcp",
  "id": "78fa1ac6-b326-4506-97e5-db91f90a4495",
  "description": "A simple implementation of an MCP server for the ScreenshotOne API",
  "repository": {
    "url": "https://github.com/screenshotone/mcp",
    "name": "screenshotone/mcp",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "screenshotone",
      "packagename": "unknown",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "path/to/screenshotone/mcp/build/index.js",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720a1a9f0aa360302ab97"
  },
  "name": "io.github.semgrep/mcp",
  "id": "715dec56-23e6-4237-833f-974a3c9f90bd",
  "description": "A MCP server for using Semgrep to scan code for security vulnerabilities.",
  "repository": {
    "url": "https://github.com/semgrep/mcp",
    "name": "semgrep/mcp",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "semgrep",
      "packagename": "unknown",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "semgrep-mcp",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720a1a9f0aa360302ab98"
  },
  "name": "io.github.singlestore-labs/mcp-server-singlestore",
  "id": "abf6ce22-8853-42a7-afbb-84f24f927605",
  "description": "MCP server for interacting with SingleStore Management API and services",
  "repository": {
    "url": "https://github.com/singlestore-labs/mcp-server-singlestore",
    "name": "singlestore-labs/mcp-server-singlestore",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "singlestore-labs",
      "packagename": "unknown",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "singlestore-mcp-server",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          },
          {
            "argument": {
              "name": "start",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 2
          },
          {
            "argument": {
              "name": "<SINGLESTORE_API_KEY>",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 3
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720a1a9f0aa360302ab99"
  },
  "name": "io.github.starrocks/mcp-server-starrocks",
  "id": "f1e44d83-aab8-4145-b920-9883083f12d0",
  "description": "StarRocks MCP (Model Context Protocol) Server",
  "repository": {
    "url": "https://github.com/StarRocks/mcp-server-starrocks",
    "name": "StarRocks/mcp-server-starrocks",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "StarRocks",
      "packagename": "pypi",
      "license": "Apache License 2.0",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "run",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          },
          {
            "argument": {
              "name": "--with",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 2
          },
          {
            "argument": {
              "name": "mcp-server-starrocks",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 3
          },
          {
            "argument": {
              "name": "mcp-server-starrocks",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 4
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720a1a9f0aa360302ab9a"
  },
  "name": "io.github.stripe/agent-toolkit",
  "id": "f5e37deb-003c-40ef-9d35-c307cda7b962",
  "description": "Python and TypeScript library for integrating the Stripe API into agentic workflows",
  "repository": {
    "url": "https://github.com/stripe/agent-toolkit",
    "name": "stripe/agent-toolkit",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "stripe",
      "packagename": "unknown",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720a1a9f0aa360302ab9b"
  },
  "name": "io.github.tavily-ai/tavily-mcp",
  "id": "68f55e0c-835a-4e62-9c14-2565accc0733",
  "description": "",
  "repository": {
    "url": "https://github.com/tavily-ai/tavily-mcp",
    "name": "tavily-ai/tavily-mcp",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "tavily-ai",
      "packagename": "npm",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "-y",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          },
          {
            "argument": {
              "name": "tavily-mcp@0.1.4",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 2
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720a2a9f0aa360302ab9c"
  },
  "name": "io.github.thirdweb-dev/ai",
  "id": "1e4d71f4-ea5f-46e1-80f2-eed831e70f1a",
  "description": "",
  "repository": {
    "url": "https://github.com/thirdweb-dev/ai",
    "name": "thirdweb-dev/ai",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "thirdweb-dev",
      "packagename": "unknown",
      "license": "Apache License 2.0",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720a2a9f0aa360302ab9d"
  },
  "name": "io.github.tinybirdco/mcp-tinybird",
  "id": "6b62abca-6486-4baa-bf6d-56b208ac1c94",
  "description": "",
  "repository": {
    "url": "https://github.com/tinybirdco/mcp-tinybird",
    "name": "tinybirdco/mcp-tinybird",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "tinybirdco",
      "packagename": "unknown",
      "license": "Apache License 2.0",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "mcp-tinybird",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          },
          {
            "argument": {
              "name": "stdio",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 2
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720a2a9f0aa360302ab9e"
  },
  "name": "io.github.unifai-network/unifai-mcp-server",
  "id": "1013c705-cbc6-4361-9cae-4ad4770c721e",
  "description": "",
  "repository": {
    "url": "https://github.com/unifai-network/unifai-mcp-server",
    "name": "unifai-network/unifai-mcp-server",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "unifai-network",
      "packagename": "unknown",
      "license": "",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720a2a9f0aa360302ab9f"
  },
  "name": "io.github.unstructured-io/uns-mcp",
  "id": "6a6c5ef3-5ebf-4cc3-a61e-30ce1f5f351f",
  "description": "",
  "repository": {
    "url": "https://github.com/Unstructured-IO/UNS-MCP",
    "name": "Unstructured-IO/UNS-MCP",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "Unstructured-IO",
      "packagename": "unknown",
      "license": "",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "uns_mcp",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720a2a9f0aa360302aba0"
  },
  "name": "io.github.vectorize-io/vectorize-mcp-server",
  "id": "e3c38839-d5ab-4102-a5a7-62e3cb2a62cd",
  "description": "Official Vectorize MCP Server",
  "repository": {
    "url": "https://github.com/vectorize-io/vectorize-mcp-server",
    "name": "vectorize-io/vectorize-mcp-server",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "vectorize-io",
      "packagename": "npm",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "-y",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          },
          {
            "argument": {
              "name": "@vectorize-io/vectorize-mcp-server@latest",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 2
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720a2a9f0aa360302aba1"
  },
  "name": "io.github.verodat/verodat-mcp-server",
  "id": "086b269c-37bc-48ec-9372-7f8699f3064e",
  "description": "Verodat MCP Server Implementation",
  "repository": {
    "url": "https://github.com/Verodat/verodat-mcp-server",
    "name": "Verodat/verodat-mcp-server",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "Verodat",
      "packagename": "unknown",
      "license": "Apache License 2.0",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "path/to/verodat-mcp-server/build/src/consume.js",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720a2a9f0aa360302aba2"
  },
  "name": "io.github.veyrax/veyrax-mcp",
  "id": "d5d4508e-5c4d-494c-a587-20abb4db53ab",
  "description": "",
  "repository": {
    "url": "https://github.com/VeyraX/veyrax-mcp",
    "name": "VeyraX/veyrax-mcp",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "VeyraX",
      "packagename": "unknown",
      "license": "",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720a2a9f0aa360302aba3"
  },
  "name": "io.github.xeroapi/xero-mcp-server",
  "id": "25992400-bd8e-4bbf-be13-f9bf3b45bb6a",
  "description": "An MCP server that integrates with the MCP protocol. https://modelcontextprotocol.io/introduction",
  "repository": {
    "url": "https://github.com/XeroAPI/xero-mcp-server",
    "name": "XeroAPI/xero-mcp-server",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "XeroAPI",
      "packagename": "npm",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "-y",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          },
          {
            "argument": {
              "name": "@xeroapi/xero-mcp-server@latest",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 2
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720a2a9f0aa360302aba4"
  },
  "name": "io.github.zenml-io/mcp-zenml",
  "id": "7095e5b7-fd07-4a10-a3e1-e9119880e5eb",
  "description": "MCP server to connect an MCP client (Cursor, Claude Desktop etc) with your ZenML MLOps and LLMOps pipelines",
  "repository": {
    "url": "https://github.com/zenml-io/mcp-zenml",
    "name": "zenml-io/mcp-zenml",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "zenml-io",
      "packagename": "unknown",
      "license": "",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "run",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          },
          {
            "argument": {
              "name": "path/to/zenml_server.py",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 2
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720a2a9f0aa360302aba5"
  },
  "name": "io.github.simon-kansara/ableton-live-mcp-server",
  "id": "b94b8a2f-26f1-4f60-bbc9-1a51be67e570",
  "description": "MCP Server implementation for Ableton Live OSC control",
  "repository": {
    "url": "https://github.com/Simon-Kansara/ableton-live-mcp-server",
    "name": "Simon-Kansara/ableton-live-mcp-server",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "Simon-Kansara",
      "packagename": "unknown",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720a3a9f0aa360302aba6"
  },
  "name": "io.github.openbnb-org/mcp-server-airbnb",
  "id": "0d3259d8-de6c-4395-964b-3578923ffb04",
  "description": "",
  "repository": {
    "url": "https://github.com/openbnb-org/mcp-server-airbnb",
    "name": "openbnb-org/mcp-server-airbnb",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "openbnb-org",
      "packagename": "npm",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "-y",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          },
          {
            "argument": {
              "name": "@openbnb/mcp-server-airbnb",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 2
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720a4a9f0aa360302abb8"
  },
  "name": "io.github.baryhuang/mcp-server-aws-resources-python",
  "id": "596f24f3-ff6d-4060-b6a7-40292241744d",
  "description": "A Python-based MCP server that lets Claude run boto3 code to query and manage AWS resources. Execute powerful AWS operations directly through Claude with proper sandboxing and containerization. No need for complex setups - just pass your AWS credentials and start interacting with all AWS services.",
  "repository": {
    "url": "https://github.com/baryhuang/mcp-server-aws-resources-python",
    "name": "baryhuang/mcp-server-aws-resources-python",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "baryhuang",
      "packagename": "docker",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "run",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          },
          {
            "argument": {
              "name": "-i",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 2
          },
          {
            "argument": {
              "name": "--rm",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 3
          },
          {
            "argument": {
              "name": "-e",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 4
          },
          {
            "argument": {
              "name": "-e",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 5
          },
          {
            "argument": {
              "name": "-e",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 6
          },
          {
            "argument": {
              "name": "buryhuang/mcp-server-aws-resources:latest",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 7
          }
        ],
        "namedarguments": [
          {
            "argument": {
              "name": "AWS_ACCESS_KEY_ID",
              "description": "Named argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": "your_access_key_id_here"
            },
            "shortflag": "",
            "longflag": "",
            "requiresvalue": true
          },
          {
            "argument": {
              "name": "AWS_SECRET_ACCESS_KEY",
              "description": "Named argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": "your_secret_access_key_here"
            },
            "shortflag": "",
            "longflag": "",
            "requiresvalue": true
          },
          {
            "argument": {
              "name": "AWS_DEFAULT_REGION",
              "description": "Named argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": "us-east-1"
            },
            "shortflag": "",
            "longflag": "",
            "requiresvalue": true
          }
        ]
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720a3a9f0aa360302aba7"
  },
  "name": "io.github.ai-agent-hub/ai-agent-marketplace-index-mcp",
  "id": "f629136b-0e7a-4b83-a878-c913a66e2e9a",
  "description": "MCP Server for AI Agent Marketplace Index from DeepNLP",
  "repository": {
    "url": "https://github.com/AI-Agent-Hub/ai-agent-marketplace-index-mcp",
    "name": "AI-Agent-Hub/ai-agent-marketplace-index-mcp",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "AI-Agent-Hub",
      "packagename": "pypi",
      "license": "",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "--directory",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          },
          {
            "argument": {
              "name": "/ABSOLUTE/PATH/TO/PARENT/FOLDER/ai-agent-marketplace-index-mcp/src/ai-agent-marketplace-index",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 2
          },
          {
            "argument": {
              "name": "run",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 3
          },
          {
            "argument": {
              "name": "server.py",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 4
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720a3a9f0aa360302aba8"
  },
  "name": "io.github.goplausible/algorand-mcp",
  "id": "bcd771c3-687d-4921-bf6f-ba21103b0096",
  "description": "Algorand Model Context Protocol (Server & Client)",
  "repository": {
    "url": "https://github.com/GoPlausible/algorand-mcp",
    "name": "GoPlausible/algorand-mcp",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "GoPlausible",
      "packagename": "unknown",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720a3a9f0aa360302aba9"
  },
  "name": "io.github.yangkyeongmo/mcp-server-apache-airflow",
  "id": "309bab4b-c96e-4a4f-97bd-db7c54f77d9e",
  "description": "",
  "repository": {
    "url": "https://github.com/yangkyeongmo/mcp-server-apache-airflow",
    "name": "yangkyeongmo/mcp-server-apache-airflow",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "yangkyeongmo",
      "packagename": "unknown",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "mcp-server-apache-airflow",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720a3a9f0aa360302abaa"
  },
  "name": "io.github.domdomegg/airtable-mcp-server",
  "id": "61acb754-a689-4ccd-a105-4c06c3c2247d",
  "description": "🗂️🤖 Airtable Model Context Protocol Server, for allowing AI systems to interact with your Airtable bases",
  "repository": {
    "url": "https://github.com/domdomegg/airtable-mcp-server",
    "name": "domdomegg/airtable-mcp-server",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "domdomegg",
      "packagename": "npm",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "-y",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          },
          {
            "argument": {
              "name": "airtable-mcp-server",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 2
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720a3a9f0aa360302abab"
  },
  "name": "io.github.felores/airtable-mcp",
  "id": "d916c41b-1e0e-44b9-9aeb-91386dc80d10",
  "description": "Search, create and update Airtable bases, tables, fields, and records using Claude Desktop and MCP (Model Context Protocol) clients",
  "repository": {
    "url": "https://github.com/felores/airtable-mcp",
    "name": "felores/airtable-mcp",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "felores",
      "packagename": "npm",
      "license": "Other",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "@felores/airtable-mcp-server",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720a3a9f0aa360302abac"
  },
  "name": "io.github.calvernaz/alphavantage",
  "id": "da5d6e88-4569-4fed-95e5-cac299d89bf8",
  "description": "A MCP server for the stock market data API, Alphavantage API.",
  "repository": {
    "url": "https://github.com/calvernaz/alphavantage",
    "name": "calvernaz/alphavantage",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "calvernaz",
      "packagename": "unknown",
      "license": "Apache License 2.0",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720a3a9f0aa360302abad"
  },
  "name": "io.github.donghyun-chae/mcp-amadeus",
  "id": "827f14de-0815-4719-beef-9494140601bf",
  "description": "Amadeus MCP(Model Context Protocol) Server",
  "repository": {
    "url": "https://github.com/donghyun-chae/mcp-amadeus",
    "name": "donghyun-chae/mcp-amadeus",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "donghyun-chae",
      "packagename": "unknown",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720a3a9f0aa360302abae"
  },
  "name": "io.github.scorzeth/anki-mcp-server",
  "id": "caa45644-be98-4c88-be46-bf04c21d39ef",
  "description": "An MCP server for Anki",
  "repository": {
    "url": "https://github.com/scorzeth/anki-mcp-server",
    "name": "scorzeth/anki-mcp-server",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "scorzeth",
      "packagename": "unknown",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720a3a9f0aa360302abaf"
  },
  "name": "io.github.pyroprompts/any-chat-completions-mcp",
  "id": "7bab4380-7758-44a0-893e-7a28fd16dbd8",
  "description": "",
  "repository": {
    "url": "https://github.com/pyroprompts/any-chat-completions-mcp",
    "name": "pyroprompts/any-chat-completions-mcp",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "pyroprompts",
      "packagename": "unknown",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "/path/to/any-chat-completions-mcp/build/index.js",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720a4a9f0aa360302abb0"
  },
  "name": "io.github.omar-v2/mcp-ical",
  "id": "6f4bb903-04c1-4045-908e-75eb93df3823",
  "description": "A Model Context Protocol Server that allows you to interact with your MacOS Calendar through natural language.",
  "repository": {
    "url": "https://github.com/Omar-V2/mcp-ical",
    "name": "Omar-V2/mcp-ical",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "Omar-V2",
      "packagename": "pypi",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "--directory",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          },
          {
            "argument": {
              "name": "/ABSOLUTE/PATH/TO/PARENT/FOLDER/mcp-ical",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 2
          },
          {
            "argument": {
              "name": "run",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 3
          },
          {
            "argument": {
              "name": "mcp-ical",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 4
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720a4a9f0aa360302abb1"
  },
  "name": "io.github.ravenwits/mcp-server-arangodb",
  "id": "8820d62a-8755-4136-850f-2cec19b914d0",
  "description": "This is a TypeScript-based MCP server that provides database interaction capabilities through ArangoDB. It implements core database operations and allows seamless integration with ArangoDB through MCP tools. You can use it wih Claude app and also extension for VSCode that works with mcp like Cline!",
  "repository": {
    "url": "https://github.com/ravenwits/mcp-server-arangodb",
    "name": "ravenwits/mcp-server-arangodb",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "ravenwits",
      "packagename": "unknown",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "/path/to/arango-server/build/index.js",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720a4a9f0aa360302abb2"
  },
  "name": "io.github.vishalmysore/choturobo",
  "id": "af33a2a0-c71f-485a-af7c-322e72d1a6a8",
  "description": "Integrate Arduino-based robotics (using the NodeMCU ESP32 or Arduino Nano 368 board) with AI using the MCP (Model Context Protocol) framework from Claude Anthropic",
  "repository": {
    "url": "https://github.com/vishalmysore/choturobo",
    "name": "vishalmysore/choturobo",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "vishalmysore",
      "packagename": "unknown",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720a4a9f0aa360302abb3"
  },
  "name": "io.github.sooperset/mcp-atlassian",
  "id": "b6667128-18be-47a7-8805-e6dfc2f6e4aa",
  "description": "MCP server for Atlassian tools (Confluence, Jira)",
  "repository": {
    "url": "https://github.com/sooperset/mcp-atlassian",
    "name": "sooperset/mcp-atlassian",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "sooperset",
      "packagename": "docker",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "run",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          },
          {
            "argument": {
              "name": "-i",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 2
          },
          {
            "argument": {
              "name": "--rm",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 3
          },
          {
            "argument": {
              "name": "-e",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 4
          },
          {
            "argument": {
              "name": "CONFLUENCE_URL",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 5
          },
          {
            "argument": {
              "name": "-e",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 6
          },
          {
            "argument": {
              "name": "CONFLUENCE_USERNAME",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 7
          },
          {
            "argument": {
              "name": "-e",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 8
          },
          {
            "argument": {
              "name": "CONFLUENCE_API_TOKEN",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 9
          },
          {
            "argument": {
              "name": "-e",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 10
          },
          {
            "argument": {
              "name": "JIRA_URL",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 11
          },
          {
            "argument": {
              "name": "-e",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 12
          },
          {
            "argument": {
              "name": "JIRA_USERNAME",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 13
          },
          {
            "argument": {
              "name": "-e",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 14
          },
          {
            "argument": {
              "name": "JIRA_API_TOKEN",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 15
          },
          {
            "argument": {
              "name": "ghcr.io/sooperset/mcp-atlassian:latest",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 16
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720a4a9f0aa360302abb4"
  },
  "name": "io.github.co-browser/attestable-mcp-server",
  "id": "bff224cd-7324-480b-88ac-c769f559289c",
  "description": "Verify that any MCP server is running the intended and untampered code via hardware attestation.",
  "repository": {
    "url": "https://github.com/co-browser/attestable-mcp-server",
    "name": "co-browser/attestable-mcp-server",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "co-browser",
      "packagename": "unknown",
      "license": "",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720a4a9f0aa360302abb5"
  },
  "name": "io.github.rishikavikondala/mcp-server-aws",
  "id": "3f830c01-b64a-4d63-88d1-ef6e8c1b8acb",
  "description": "A Model Context Protocol server implementation for operations on AWS resources",
  "repository": {
    "url": "https://github.com/rishikavikondala/mcp-server-aws",
    "name": "rishikavikondala/mcp-server-aws",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "rishikavikondala",
      "packagename": "unknown",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720a4a9f0aa360302abb6"
  },
  "name": "io.github.lishenxydlgzs/aws-athena-mcp",
  "id": "9e201fd1-798f-4f16-b275-303dc07c0dd0",
  "description": "MCP server to run AWS Athena queries",
  "repository": {
    "url": "https://github.com/lishenxydlgzs/aws-athena-mcp",
    "name": "lishenxydlgzs/aws-athena-mcp",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "lishenxydlgzs",
      "packagename": "unknown",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720a4a9f0aa360302abb7"
  },
  "name": "io.github.aarora79/aws-cost-explorer-mcp-server",
  "id": "570d8e60-c892-48ec-8908-aad0ef54d45a",
  "description": "MCP server for understanding AWS spend",
  "repository": {
    "url": "https://github.com/aarora79/aws-cost-explorer-mcp-server",
    "name": "aarora79/aws-cost-explorer-mcp-server",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "aarora79",
      "packagename": "docker",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "run",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          },
          {
            "argument": {
              "name": "-i",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 2
          },
          {
            "argument": {
              "name": "--rm",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 3
          },
          {
            "argument": {
              "name": "-e",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 4
          },
          {
            "argument": {
              "name": "AWS_ACCESS_KEY_ID",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 5
          },
          {
            "argument": {
              "name": "-e",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 6
          },
          {
            "argument": {
              "name": "AWS_SECRET_ACCESS_KEY",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 7
          },
          {
            "argument": {
              "name": "-e",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 8
          },
          {
            "argument": {
              "name": "AWS_REGION",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 9
          },
          {
            "argument": {
              "name": "-e",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 10
          },
          {
            "argument": {
              "name": "BEDROCK_LOG_GROUP_NAME",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 11
          },
          {
            "argument": {
              "name": "-e",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 12
          },
          {
            "argument": {
              "name": "MCP_TRANSPORT",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 13
          },
          {
            "argument": {
              "name": "-e",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 14
          },
          {
            "argument": {
              "name": "CROSS_ACCOUNT_ROLE_NAME",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 15
          },
          {
            "argument": {
              "name": "aws-cost-explorer-mcp:latest",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 16
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720aaa9f0aa360302abec"
  },
  "name": "io.github.whataboutyou-ai/eunomia-mcp-server",
  "id": "00f7b14c-c1b1-49be-be8c-d6bc8606302a",
  "description": "",
  "repository": {
    "url": "https://github.com/whataboutyou-ai/eunomia-mcp-server",
    "name": "whataboutyou-ai/eunomia-mcp-server",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "whataboutyou-ai",
      "packagename": "unknown",
      "license": "Apache License 2.0",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720a5a9f0aa360302abb9"
  },
  "name": "io.github.aws-samples/sample-mcp-server-s3",
  "id": "189768c0-85a6-409e-9e48-7cca732153cf",
  "description": "",
  "repository": {
    "url": "https://github.com/aws-samples/sample-mcp-server-s3",
    "name": "aws-samples/sample-mcp-server-s3",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "aws-samples",
      "packagename": "pypi",
      "license": "MIT No Attribution",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "--directory",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          },
          {
            "argument": {
              "name": "/Users/user/generative_ai/model_context_protocol/s3-mcp-server",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 2
          },
          {
            "argument": {
              "name": "run",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 3
          },
          {
            "argument": {
              "name": "s3-mcp-server",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 4
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720a5a9f0aa360302abba"
  },
  "name": "io.github.pab1it0/adx-mcp-server",
  "id": "25eaa9d4-9775-415c-8f98-aabfc225070f",
  "description": "A Model Context Protocol (MCP) server that enables AI assistants to query and analyze Azure Data Explorer databases through standardized interfaces.",
  "repository": {
    "url": "https://github.com/pab1it0/adx-mcp-server",
    "name": "pab1it0/adx-mcp-server",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "pab1it0",
      "packagename": "pypi",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "--directory",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          },
          {
            "argument": {
              "name": "<full path to adx-mcp-server directory>",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 2
          },
          {
            "argument": {
              "name": "run",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 3
          },
          {
            "argument": {
              "name": "src/adx_mcp_server/main.py",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 4
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720a5a9f0aa360302abbb"
  },
  "name": "io.github.vortiago/mcp-azure-devops",
  "id": "60881ad2-62e8-4717-8ef4-2515d1e99f0c",
  "description": "A Model Context Protocol (MCP) server enabling AI assistants to interact with Azure DevOps services via Python SDK.",
  "repository": {
    "url": "https://github.com/Vortiago/mcp-azure-devops",
    "name": "Vortiago/mcp-azure-devops",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "Vortiago",
      "packagename": "unknown",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720a5a9f0aa360302abbc"
  },
  "name": "io.github.baidubce/app-builder",
  "id": "d6a22d8f-7274-4992-8424-6270024fb338",
  "description": "appbuilder-sdk, 千帆AppBuilder-SDK帮助开发者灵活、快速的搭建AI原生应用",
  "repository": {
    "url": "https://github.com/baidubce/app-builder",
    "name": "baidubce/app-builder",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "baidubce",
      "packagename": "unknown",
      "license": "Apache License 2.0",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720a5a9f0aa360302abbd"
  },
  "name": "io.github.magnetai/mcp-free-usdc-transfer",
  "id": "ebe4c356-e358-4898-b56b-cf83d2337e9b",
  "description": "MCP (Model Context Protocol) server - free usdc transfer powered by Coinbase CDP",
  "repository": {
    "url": "https://github.com/magnetai/mcp-free-usdc-transfer",
    "name": "magnetai/mcp-free-usdc-transfer",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "magnetai",
      "packagename": "npm",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "-y",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          },
          {
            "argument": {
              "name": "@magnetai/free-usdc-transfer",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 2
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720a5a9f0aa360302abbe"
  },
  "name": "io.github.basicmachines-co/basic-memory",
  "id": "9ba873d0-1ff1-4d87-aec4-a2368fdd5074",
  "description": "Basic Memory is a knowledge management system that allows you to build a persistent semantic graph from conversations with AI assistants. All knowledge is stored in standard Markdown files on your computer, giving you full control and ownership of your data. Integrates directly with Obsidan.md",
  "repository": {
    "url": "https://github.com/basicmachines-co/basic-memory",
    "name": "basicmachines-co/basic-memory",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "basicmachines-co",
      "packagename": "unknown",
      "license": "GNU Affero General Public License v3.0",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "basic-memory",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          },
          {
            "argument": {
              "name": "mcp",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 2
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720a5a9f0aa360302abbf"
  },
  "name": "io.github.lucashild/mcp-server-bigquery",
  "id": "0755a840-b9ed-4831-abd6-6cb342ceca20",
  "description": "A Model Context Protocol server that provides access to BigQuery",
  "repository": {
    "url": "https://github.com/LucasHild/mcp-server-bigquery",
    "name": "LucasHild/mcp-server-bigquery",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "LucasHild",
      "packagename": "unknown",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720a7a9f0aa360302abcf"
  },
  "name": "io.github.bazinga012/mcp_code_executor",
  "id": "1d6140ea-1dc4-4ca7-b2e7-c200945207bf",
  "description": "The MCP Code Executor is an MCP server that allows LLMs to execute Python code within a specified Conda environment.",
  "repository": {
    "url": "https://github.com/bazinga012/mcp_code_executor",
    "name": "bazinga012/mcp_code_executor",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "bazinga012",
      "packagename": "unknown",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "/path/to/mcp_code_executor/build/index.js",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720a5a9f0aa360302abc0"
  },
  "name": "io.github.ergut/mcp-bigquery-server",
  "id": "bde3affa-0e35-4d96-8970-8742a309a744",
  "description": "A Model Context Protocol (MCP) server that provides secure, read-only access to BigQuery datasets. Enables Large Language Models (LLMs) to safely query and analyze data through a standardized interface.",
  "repository": {
    "url": "https://github.com/ergut/mcp-bigquery-server",
    "name": "ergut/mcp-bigquery-server",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "ergut",
      "packagename": "npm",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "-y",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          },
          {
            "argument": {
              "name": "@ergut/mcp-bigquery-server",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 2
          },
          {
            "argument": {
              "name": "--project-id",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 3
          },
          {
            "argument": {
              "name": "your-project-id",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 4
          },
          {
            "argument": {
              "name": "--location",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 5
          },
          {
            "argument": {
              "name": "us-central1",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 6
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720a5a9f0aa360302abc1"
  },
  "name": "io.github.leehanchung/bing-search-mcp",
  "id": "90bdba42-1723-4328-a57d-338f6d27cb30",
  "description": "MCP Server for Bing Search API",
  "repository": {
    "url": "https://github.com/leehanchung/bing-search-mcp",
    "name": "leehanchung/bing-search-mcp",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "leehanchung",
      "packagename": "unknown",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "/path/to/your/bing-search-mcp",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720a5a9f0aa360302abc2"
  },
  "name": "io.github.lloydzhou/bitable-mcp",
  "id": "6ddf4e7e-b54e-45d0-a1fd-bf84d9e8b5f3",
  "description": "This MCP server provides access to Lark Bitable through the Model Context Protocol. It allows users to interact with Bitable tables using predefined tools.",
  "repository": {
    "url": "https://github.com/lloydzhou/bitable-mcp",
    "name": "lloydzhou/bitable-mcp",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "lloydzhou",
      "packagename": "unknown",
      "license": "",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720a6a9f0aa360302abc3"
  },
  "name": "io.github.ahujasid/blender-mcp",
  "id": "168fb1bf-9cc4-4e06-bb5b-66299a19bbaf",
  "description": "",
  "repository": {
    "url": "https://github.com/ahujasid/blender-mcp",
    "name": "ahujasid/blender-mcp",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "ahujasid",
      "packagename": "unknown",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "blender-mcp",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720a6a9f0aa360302abc4"
  },
  "name": "io.github.co-browser/browser-use-mcp-server",
  "id": "eb55553d-2e9d-40f1-9e4b-5a264ecf0274",
  "description": "Browse the web, directly from Cursor etc.",
  "repository": {
    "url": "https://github.com/co-browser/browser-use-mcp-server",
    "name": "co-browser/browser-use-mcp-server",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "co-browser",
      "packagename": "unknown",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720a6a9f0aa360302abc5"
  },
  "name": "io.github.termix-official/bsc-mcp",
  "id": "6f133030-a5c7-4a8e-9b69-55af571a57ea",
  "description": "",
  "repository": {
    "url": "https://github.com/TermiX-official/bsc-mcp",
    "name": "TermiX-official/bsc-mcp",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "TermiX-official",
      "packagename": "unknown",
      "license": "",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720a6a9f0aa360302abc6"
  },
  "name": "io.github.githejie/mcp-server-calculator",
  "id": "4822149d-adf7-40db-b20c-219c8c6249a9",
  "description": "A Model Context Protocol server for calculating.",
  "repository": {
    "url": "https://github.com/githejie/mcp-server-calculator",
    "name": "githejie/mcp-server-calculator",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "githejie",
      "packagename": "unknown",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720a6a9f0aa360302abc7"
  },
  "name": "io.github.lenwood/cfbd-mcp-server",
  "id": "6d77d244-d0ac-4684-8b8a-40a487f48a28",
  "description": "An MCP server enabling CFBD API queries within Claude Desktop.",
  "repository": {
    "url": "https://github.com/lenwood/cfbd-mcp-server",
    "name": "lenwood/cfbd-mcp-server",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "lenwood",
      "packagename": "pypi",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "--directory",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          },
          {
            "argument": {
              "name": "/full/path/to/cfbd-mcp-server",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 2
          },
          {
            "argument": {
              "name": "run",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 3
          },
          {
            "argument": {
              "name": "cfbd-mcp-server",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 4
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720a8a9f0aa360302abd9"
  },
  "name": "io.github.reading-plus-ai/mcp-server-data-exploration",
  "id": "4d142c08-4e50-4ab0-afd8-2192c2b69088",
  "description": "",
  "repository": {
    "url": "https://github.com/reading-plus-ai/mcp-server-data-exploration",
    "name": "reading-plus-ai/mcp-server-data-exploration",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "reading-plus-ai",
      "packagename": "unknown",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720a6a9f0aa360302abc8"
  },
  "name": "io.github.ai-ql/chat-mcp",
  "id": "62ed520f-60fc-4153-867a-7709473d93c8",
  "description": "A Desktop Chat App that leverages MCP(Model Context Protocol) to interface with other LLMs.",
  "repository": {
    "url": "https://github.com/AI-QL/chat-mcp",
    "name": "AI-QL/chat-mcp",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "AI-QL",
      "packagename": "unknown",
      "license": "Apache License 2.0",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "node_modules/@modelcontextprotocol/server-filesystem/dist/index.js",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          },
          {
            "argument": {
              "name": "D:/Github/mcp-test",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 2
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720a6a9f0aa360302abc9"
  },
  "name": "io.github.mcpso/mcp-server-chatsum",
  "id": "f1b12627-004e-47af-b716-e0315eb40507",
  "description": "Query and Summarize your chat messages.",
  "repository": {
    "url": "https://github.com/chatmcp/mcp-server-chatsum",
    "name": "chatmcp/mcp-server-chatsum",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "chatmcp",
      "packagename": "unknown",
      "license": "",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "path-to/mcp-server-chatsum/build/index.js",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720a6a9f0aa360302abca"
  },
  "name": "io.github.pab1it0/chess-mcp",
  "id": "73d81e0a-1855-4132-8084-163d218a0e88",
  "description": "A Model Context Protocol server for Chess.com's Published Data API.  This provides access to Chess.com player data, game records, and other public information through standardized MCP interfaces, allowing AI assistants to search and analyze chess information.",
  "repository": {
    "url": "https://github.com/pab1it0/chess-mcp",
    "name": "pab1it0/chess-mcp",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "pab1it0",
      "packagename": "docker",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "run",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          },
          {
            "argument": {
              "name": "--rm",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 2
          },
          {
            "argument": {
              "name": "-i",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 3
          },
          {
            "argument": {
              "name": "pab1it0/chess-mcp",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 4
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720a6a9f0aa360302abcb"
  },
  "name": "io.github.privetin/chroma",
  "id": "752a27fb-bb6e-4aa3-8e4e-80fe4897c113",
  "description": "MCP server for Chroma",
  "repository": {
    "url": "https://github.com/privetin/chroma",
    "name": "privetin/chroma",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "privetin",
      "packagename": "pypi",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "--directory",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          },
          {
            "argument": {
              "name": "C:/MCP/server/community/chroma",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 2
          },
          {
            "argument": {
              "name": "run",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 3
          },
          {
            "argument": {
              "name": "chroma",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 4
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720a7a9f0aa360302abcc"
  },
  "name": "io.github.zilongxue/claude-post",
  "id": "43aa11ec-3c4a-4927-974a-3ffb504a023d",
  "description": "ClaudePost enables seamless email management through natural language conversations with Claude, offering secure features like email search, reading, and sending.",
  "repository": {
    "url": "https://github.com/ZilongXue/claude-post",
    "name": "ZilongXue/claude-post",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "ZilongXue",
      "packagename": "unknown",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "--directory",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          },
          {
            "argument": {
              "name": "/path/to/claude-post/src/email_client",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 2
          },
          {
            "argument": {
              "name": "run",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 3
          },
          {
            "argument": {
              "name": "email-client",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 4
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720a7a9f0aa360302abcd"
  },
  "name": "io.github.felores/cloudinary-mcp-server",
  "id": "df001aa4-a26e-4e1e-896b-97c6b70dc003",
  "description": "MCP (Model Context Protocol) server for uploading media to Cloudinary using Claude Desktop",
  "repository": {
    "url": "https://github.com/felores/cloudinary-mcp-server",
    "name": "felores/cloudinary-mcp-server",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "felores",
      "packagename": "npm",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "@felores/cloudinary-mcp-server@latest",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720a7a9f0aa360302abce"
  },
  "name": "io.github.stippi/code-assistant",
  "id": "31387ec2-3c6e-4153-a5ed-968004e33d99",
  "description": "An LLM-powered, autonomous coding assistant. Also offers an MCP mode.",
  "repository": {
    "url": "https://github.com/stippi/code-assistant",
    "name": "stippi/code-assistant",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "stippi",
      "packagename": "unknown",
      "license": "GNU General Public License v3.0",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720a7a9f0aa360302abd0"
  },
  "name": "io.github.automata-labs-team/code-sandbox-mcp",
  "id": "e98e9f8d-d9af-4505-808a-21888c22410d",
  "description": "An MCP server to create secure code sandbox environment for executing code within Docker containers. This MCP server provides AI applications with a safe and isolated environment for running code while maintaining security through containerization.",
  "repository": {
    "url": "https://github.com/Automata-Labs-team/code-sandbox-mcp",
    "name": "Automata-Labs-team/code-sandbox-mcp",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "Automata-Labs-team",
      "packagename": "unknown",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720a7a9f0aa360302abd1"
  },
  "name": "io.github.topoteretes/cognee",
  "id": "38a9fa43-6ddc-4f5a-af22-865b9590a6fc",
  "description": "Memory for AI Agents in 5 lines of code",
  "repository": {
    "url": "https://github.com/topoteretes/cognee",
    "name": "topoteretes/cognee",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "topoteretes",
      "packagename": "unknown",
      "license": "Apache License 2.0",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720a7a9f0aa360302abd2"
  },
  "name": "io.github.longmans/coin_api_mcp",
  "id": "0d12d4e2-79eb-4def-9dae-48c4cad47d86",
  "description": "A Model Context Protocol server that provides access to CoinMarketCap's cryptocurrency data. This server enables AI-powered applications to retrieve cryptocurrency listings, quotes, and detailed information about various coins.",
  "repository": {
    "url": "https://github.com/longmans/coin_api_mcp",
    "name": "longmans/coin_api_mcp",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "longmans",
      "packagename": "unknown",
      "license": "",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720a7a9f0aa360302abd3"
  },
  "name": "io.github.ivo-toby/contentful-mcp",
  "id": "d9412a80-625c-40b6-b04d-1b1c784ee2ed",
  "description": "MCP (Model Context Protocol) server for the Contentful Management API",
  "repository": {
    "url": "https://github.com/ivo-toby/contentful-mcp",
    "name": "ivo-toby/contentful-mcp",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "ivo-toby",
      "packagename": "npm",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "-y",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          },
          {
            "argument": {
              "name": "@ivotoby/contentful-management-mcp-server",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 2
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720a7a9f0aa360302abd4"
  },
  "name": "io.github.kukapay/crypto-feargreed-mcp",
  "id": "939b860e-7808-405f-a129-ba9b1a40ba86",
  "description": "Providing real-time and historical Crypto Fear & Greed Index data",
  "repository": {
    "url": "https://github.com/kukapay/crypto-feargreed-mcp",
    "name": "kukapay/crypto-feargreed-mcp",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "kukapay",
      "packagename": "unknown",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720a7a9f0aa360302abd5"
  },
  "name": "io.github.kukapay/cryptopanic-mcp-server",
  "id": "bfca7ad5-1572-454f-9e6f-16f207da744c",
  "description": "Provide latest cryptocurrency news to AI agents.",
  "repository": {
    "url": "https://github.com/kukapay/cryptopanic-mcp-server",
    "name": "kukapay/cryptopanic-mcp-server",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "kukapay",
      "packagename": "unknown",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720a8a9f0aa360302abd6"
  },
  "name": "io.github.dappierai/dappier-mcp",
  "id": "84c111b2-68f0-4ffc-ad58-7765339c5cd3",
  "description": "Dappier MCP server connects any AI to proprietary, real-time data — including web search, news, sports, stock market data, and premium publisher content.",
  "repository": {
    "url": "https://github.com/DappierAI/dappier-mcp",
    "name": "DappierAI/dappier-mcp",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "DappierAI",
      "packagename": "unknown",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "dappier-mcp",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720a8a9f0aa360302abd7"
  },
  "name": "io.github.jordineil/mcp-databricks-server",
  "id": "f21ecac6-0d09-41e3-bd31-27a537508cdf",
  "description": "MCP Server for Databricks",
  "repository": {
    "url": "https://github.com/JordiNeil/mcp-databricks-server",
    "name": "JordiNeil/mcp-databricks-server",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "JordiNeil",
      "packagename": "unknown",
      "license": "",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720a8a9f0aa360302abd8"
  },
  "name": "io.github.geli2001/datadog-mcp-server",
  "id": "998b633f-0ece-415f-aa26-be1a27ebcfc4",
  "description": "MCP server interacts with the official Datadog API",
  "repository": {
    "url": "https://github.com/GeLi2001/datadog-mcp-server",
    "name": "GeLi2001/datadog-mcp-server",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "GeLi2001",
      "packagename": "npm",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "datadog-mcp-server",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          },
          {
            "argument": {
              "name": "--apiKey",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 2
          },
          {
            "argument": {
              "name": "<YOUR_API_KEY>",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 3
          },
          {
            "argument": {
              "name": "--appKey",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 4
          },
          {
            "argument": {
              "name": "<YOUR_APP_KEY>",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 5
          },
          {
            "argument": {
              "name": "--site",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 6
          },
          {
            "argument": {
              "name": "<YOUR_DD_SITE>(e.g us5.datadoghq.com)",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 7
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720a8a9f0aa360302abda"
  },
  "name": "io.github.privetin/dataset-viewer",
  "id": "6c7e6fbb-f8a4-4194-b651-cf0a7f877343",
  "description": "MCP server for Hugging Face dataset viewer",
  "repository": {
    "url": "https://github.com/privetin/dataset-viewer",
    "name": "privetin/dataset-viewer",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "privetin",
      "packagename": "pypi",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "run",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          },
          {
            "argument": {
              "name": "dataset-viewer",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 2
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720a8a9f0aa360302abdb"
  },
  "name": "io.github.bytebase/dbhub",
  "id": "d7ecc9ec-018d-469e-b0e6-86d5c1be2fa9",
  "description": "Universal database MCP server connecting to MySQL, PostgreSQL, SQL Server, MariaDB, SQLite.",
  "repository": {
    "url": "https://github.com/bytebase/dbhub",
    "name": "bytebase/dbhub",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "bytebase",
      "packagename": "unknown",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720a8a9f0aa360302abdc"
  },
  "name": "io.github.dmontgomery40/deepseek-mcp-server",
  "id": "61bd5bd9-cae1-4fe9-9868-b81cbf8ed627",
  "description": "Model Context Protocol server for DeepSeek's advanced language models",
  "repository": {
    "url": "https://github.com/DMontgomery40/deepseek-mcp-server",
    "name": "DMontgomery40/deepseek-mcp-server",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "DMontgomery40",
      "packagename": "npm",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "-y",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          },
          {
            "argument": {
              "name": "deepseek-mcp-server",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 2
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720a8a9f0aa360302abdd"
  },
  "name": "io.github.66julienmartin/mcp-server-deepseek_r1",
  "id": "7825e0db-d8a0-472f-ab37-c9c45aa72d28",
  "description": "A Model Context Protocol (MCP) server implementation connecting Claude Desktop with DeepSeek's language models (R1/V3)",
  "repository": {
    "url": "https://github.com/66julienmartin/MCP-server-Deepseek_R1",
    "name": "66julienmartin/MCP-server-Deepseek_R1",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "66julienmartin",
      "packagename": "unknown",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "/path/to/deepseek-r1-mcp/build/index.js",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720a8a9f0aa360302abde"
  },
  "name": "io.github.ruixingshi/deepseek-thinker-mcp",
  "id": "8f3bd1bc-499c-4650-bf77-ac6e2a69851b",
  "description": "A MCP provider Deepseek reasoning content to MCP-enabled AI Clients, like Claude Desktop. Supports access to Deepseek's CoT from the Deepseek API service or a local Ollama server.",
  "repository": {
    "url": "https://github.com/ruixingshi/deepseek-thinker-mcp",
    "name": "ruixingshi/deepseek-thinker-mcp",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "ruixingshi",
      "packagename": "npm",
      "license": "",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "-y",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          },
          {
            "argument": {
              "name": "deepseek-thinker-mcp",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 2
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720a8a9f0aa360302abdf"
  },
  "name": "io.github.descope-sample-apps/descope-mcp-server",
  "id": "5d56e5de-0fe3-429d-8fe5-902ea26d3b2b",
  "description": "",
  "repository": {
    "url": "https://github.com/descope-sample-apps/descope-mcp-server-stdio",
    "name": "descope-sample-apps/descope-mcp-server-stdio",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "descope-sample-apps",
      "packagename": "unknown",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "/path/to/descope-mcp-server/build/index.js",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720a9a9f0aa360302abe0"
  },
  "name": "io.github.kpsunil97/devrev-mcp-server",
  "id": "0a73e41b-5c14-4e7a-ad10-2059ab30bc87",
  "description": "",
  "repository": {
    "url": "https://github.com/kpsunil97/devrev-mcp-server",
    "name": "kpsunil97/devrev-mcp-server",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "kpsunil97",
      "packagename": "unknown",
      "license": "",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720a9a9f0aa360302abe1"
  },
  "name": "io.github.christianhinge/dicom-mcp",
  "id": "739d8972-1b4b-43a4-95b4-b4fd9d41930c",
  "description": "Model Context Protocol (MCP) for interacting with dicom servers (PACS etc.)",
  "repository": {
    "url": "https://github.com/ChristianHinge/dicom-mcp",
    "name": "ChristianHinge/dicom-mcp",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "ChristianHinge",
      "packagename": "unknown",
      "license": "",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720a9a9f0aa360302abe2"
  },
  "name": "io.github.yanxingliu/dify-mcp-server",
  "id": "0d927b21-0158-47ee-be06-ecd3379abeef",
  "description": "Model Context Protocol (MCP) Server for dify workflows",
  "repository": {
    "url": "https://github.com/YanxingLiu/dify-mcp-server",
    "name": "YanxingLiu/dify-mcp-server",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "YanxingLiu",
      "packagename": "unknown",
      "license": "",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "--from",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          },
          {
            "argument": {
              "name": "git+https://github.com/YanxingLiu/dify-mcp-server",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 2
          },
          {
            "argument": {
              "name": "dify_mcp_server",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 3
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720a9a9f0aa360302abe3"
  },
  "name": "io.github.v-3/discordmcp",
  "id": "e3545462-6091-4f56-8339-53ee74ea93db",
  "description": "Discord MCP Server for Claude Integration",
  "repository": {
    "url": "https://github.com/v-3/discordmcp",
    "name": "v-3/discordmcp",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "v-3",
      "packagename": "unknown",
      "license": "",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "path/to/discordmcp/build/index.js",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720a9a9f0aa360302abe4"
  },
  "name": "io.github.saseq/discord-mcp",
  "id": "c9fda579-2310-4670-b678-712824e535f9",
  "description": "A Model Context Protocol (MCP) server for the Discord integration with MCP-compatible applications like Claude Desktop.",
  "repository": {
    "url": "https://github.com/SaseQ/discord-mcp",
    "name": "SaseQ/discord-mcp",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "SaseQ",
      "packagename": "unknown",
      "license": "",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720a9a9f0aa360302abe5"
  },
  "name": "io.github.ashdevfr/discourse-mcp-server",
  "id": "8095d8be-4d61-4652-b868-e1d6cf48c474",
  "description": "",
  "repository": {
    "url": "https://github.com/AshDevFr/discourse-mcp-server",
    "name": "AshDevFr/discourse-mcp-server",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "AshDevFr",
      "packagename": "docker",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "run",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          },
          {
            "argument": {
              "name": "-i",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 2
          },
          {
            "argument": {
              "name": "--rm",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 3
          },
          {
            "argument": {
              "name": "-e",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 4
          },
          {
            "argument": {
              "name": "-e",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 5
          },
          {
            "argument": {
              "name": "-e",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 6
          },
          {
            "argument": {
              "name": "ashdev/discourse-mcp-server",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 7
          }
        ],
        "namedarguments": [
          {
            "argument": {
              "name": "DISCOURSE_API_URL",
              "description": "Named argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": "https://try.discourse.org"
            },
            "shortflag": "",
            "longflag": "",
            "requiresvalue": true
          },
          {
            "argument": {
              "name": "DISCOURSE_API_KEY",
              "description": "Named argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": "1234"
            },
            "shortflag": "",
            "longflag": "",
            "requiresvalue": true
          },
          {
            "argument": {
              "name": "DISCOURSE_API_USERNAME",
              "description": "Named argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": "ash"
            },
            "shortflag": "",
            "longflag": "",
            "requiresvalue": true
          }
        ]
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720a9a9f0aa360302abe6"
  },
  "name": "io.github.ckreiling/mcp-server-docker",
  "id": "533ea520-a166-4652-80d7-a8a094c9387f",
  "description": "MCP server for Docker",
  "repository": {
    "url": "https://github.com/ckreiling/mcp-server-docker",
    "name": "ckreiling/mcp-server-docker",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "ckreiling",
      "packagename": "unknown",
      "license": "GNU General Public License v3.0",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720a9a9f0aa360302abe7"
  },
  "name": "io.github.omedia/mcp-server-drupal",
  "id": "cef8c6f4-6ce6-4080-a6f3-62d428afdd76",
  "description": "TS based companion MCP server for the Drupal MCP module that works with the STDIO transport.",
  "repository": {
    "url": "https://github.com/Omedia/mcp-server-drupal",
    "name": "Omedia/mcp-server-drupal",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "Omedia",
      "packagename": "unknown",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "--drupal-url",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          },
          {
            "argument": {
              "name": "__DRUPAL_BASE_URL__",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 2
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720a9a9f0aa360302abe8"
  },
  "name": "io.github.kukapay/dune-analytics-mcp",
  "id": "a57d043a-da48-4092-9eb0-30b1c9561318",
  "description": "A mcp server that bridges Dune Analytics data to AI agents.",
  "repository": {
    "url": "https://github.com/kukapay/dune-analytics-mcp",
    "name": "kukapay/dune-analytics-mcp",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "kukapay",
      "packagename": "unknown",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720aaa9f0aa360302abe9"
  },
  "name": "io.github.tencentedgeone/edgeone-pages-mcp",
  "id": "5f55397d-a8d7-43e6-93ee-8b8d251f1c38",
  "description": "An MCP service designed for deploying HTML content to EdgeOne Pages and obtaining an accessible public URL.",
  "repository": {
    "url": "https://github.com/TencentEdgeOne/edgeone-pages-mcp",
    "name": "TencentEdgeOne/edgeone-pages-mcp",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "TencentEdgeOne",
      "packagename": "npm",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "edgeone-pages-mcp",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720aaa9f0aa360302abea"
  },
  "name": "io.github.cr7258/elasticsearch-mcp-server",
  "id": "d0d41a6b-f9af-431f-9a1f-419bc034ae29",
  "description": "A Model Context Protocol (MCP) server implementation that provides Elasticsearch and OpenSearch interaction.",
  "repository": {
    "url": "https://github.com/cr7258/elasticsearch-mcp-server",
    "name": "cr7258/elasticsearch-mcp-server",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "cr7258",
      "packagename": "unknown",
      "license": "Apache License 2.0",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720aaa9f0aa360302abeb"
  },
  "name": "io.github.mamertofabian/elevenlabs-mcp-server",
  "id": "ef3d94f1-0324-4ccb-9a9c-44460445b7e2",
  "description": "",
  "repository": {
    "url": "https://github.com/mamertofabian/elevenlabs-mcp-server",
    "name": "mamertofabian/elevenlabs-mcp-server",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "mamertofabian",
      "packagename": "unknown",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "elevenlabs-mcp-server",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720aaa9f0aa360302abed"
  },
  "name": "io.github.mcpdotdirect/evm-mcp-server",
  "id": "273a11f8-6576-4833-9ab1-05d55386d7f2",
  "description": "MCP server that provides LLM with tools for interacting with EVM networks",
  "repository": {
    "url": "https://github.com/mcpdotdirect/evm-mcp-server",
    "name": "mcpdotdirect/evm-mcp-server",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "mcpdotdirect",
      "packagename": "npm",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "-y",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          },
          {
            "argument": {
              "name": "@mcpdotdirect/evm-mcp-server",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 2
          },
          {
            "argument": {
              "name": "-y",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 3
          },
          {
            "argument": {
              "name": "@mcpdotdirect/evm-mcp-server",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 4
          },
          {
            "argument": {
              "name": "--http",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 5
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720aaa9f0aa360302abee"
  },
  "name": "io.github.mamertofabian/mcp-everything-search",
  "id": "ff3c61ab-33b8-4b93-8d26-4fb4507b023b",
  "description": "",
  "repository": {
    "url": "https://github.com/mamertofabian/mcp-everything-search",
    "name": "mamertofabian/mcp-everything-search",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "mamertofabian",
      "packagename": "unknown",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720aaa9f0aa360302abef"
  },
  "name": "io.github.haris-musa/excel-mcp-server",
  "id": "760ca9d5-a24a-4647-ab5f-da0362e943b9",
  "description": "A Model Context Protocol server for Excel file manipulation",
  "repository": {
    "url": "https://github.com/haris-musa/excel-mcp-server",
    "name": "haris-musa/excel-mcp-server",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "haris-musa",
      "packagename": "unknown",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720aaa9f0aa360302abf0"
  },
  "name": "io.github.rishijatia/fantasy-pl-mcp",
  "id": "07bbf31a-d1ca-4d57-b9d9-6e539ec304a3",
  "description": "Fantasy Premier League MCP Server",
  "repository": {
    "url": "https://github.com/rishijatia/fantasy-pl-mcp",
    "name": "rishijatia/fantasy-pl-mcp",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "rishijatia",
      "packagename": "unknown",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "-m",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          },
          {
            "argument": {
              "name": "fpl_mcp",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 2
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720aaa9f0aa360302abf1"
  },
  "name": "io.github.fastnai/mcp-fastn",
  "id": "251d11a3-394d-40bf-b9a0-0b001b7e9278",
  "description": "",
  "repository": {
    "url": "https://github.com/fastnai/mcp-fastn",
    "name": "fastnai/mcp-fastn",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "fastnai",
      "packagename": "unknown",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "--api_key",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          },
          {
            "argument": {
              "name": "YOUR_API_KEY",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 2
          },
          {
            "argument": {
              "name": "--space_id",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 3
          },
          {
            "argument": {
              "name": "YOUR_WORKSPACE_ID",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 4
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720aba9f0aa360302abf2"
  },
  "name": "io.github.zcaceres/fetch-mcp",
  "id": "73473d83-7153-4855-a09e-77f81b4020cf",
  "description": "A flexible HTTP fetching Model Context Protocol server.",
  "repository": {
    "url": "https://github.com/zcaceres/fetch-mcp",
    "name": "zcaceres/fetch-mcp",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "zcaceres",
      "packagename": "unknown",
      "license": "",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "{ABSOLUTE PATH TO FILE HERE}/dist/index.js",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720aba9f0aa360302abf3"
  },
  "name": "io.github.glips/figma-context-mcp",
  "id": "e0bfad34-c231-4428-af18-db81d27d447a",
  "description": "MCP server to provide Figma layout information to AI coding agents like Cursor",
  "repository": {
    "url": "https://github.com/GLips/Figma-Context-MCP",
    "name": "GLips/Figma-Context-MCP",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "GLips",
      "packagename": "npm",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "-y",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          },
          {
            "argument": {
              "name": "figma-developer-mcp",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 2
          },
          {
            "argument": {
              "name": "--stdio",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 3
          }
        ],
        "namedarguments": [
          {
            "argument": {
              "name": "--figma-api-key",
              "description": "Named argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": "YOUR-KEY"
            },
            "shortflag": "",
            "longflag": "",
            "requiresvalue": true
          }
        ]
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720aba9f0aa360302abf4"
  },
  "name": "io.github.gannonh/firebase-mcp",
  "id": "21aafce7-8273-4dcb-9d05-0e267765e57c",
  "description": "🔥 Model Context Protocol (MCP) server for Firebase.",
  "repository": {
    "url": "https://github.com/gannonh/firebase-mcp",
    "name": "gannonh/firebase-mcp",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "gannonh",
      "packagename": "unknown",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720aba9f0aa360302abf5"
  },
  "name": "io.github.vrknetha/mcp-server-firecrawl",
  "id": "80d27ced-9041-4248-8e6f-52a020d2db80",
  "description": "Official Firecrawl MCP Server - Adds powerful web scraping to Cursor, Claude and any other LLM clients.",
  "repository": {
    "url": "https://github.com/mendableai/firecrawl-mcp-server",
    "name": "mendableai/firecrawl-mcp-server",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "mendableai",
      "packagename": "npm",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "-y",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          },
          {
            "argument": {
              "name": "firecrawl-mcp",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 2
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720aba9f0aa360302abf6"
  },
  "name": "io.github.sunsetcoder/flightradar24-mcp-server",
  "id": "334eacf9-3f53-4cd2-89ef-3b243f7b4411",
  "description": "Model Context Protocol server for Flight Tracking",
  "repository": {
    "url": "https://github.com/sunsetcoder/flightradar24-mcp-server",
    "name": "sunsetcoder/flightradar24-mcp-server",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "sunsetcoder",
      "packagename": "unknown",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "/Users/<username>/<FULL_PATH...>/flightradar24-mcp-server/dist/index.js",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720aba9f0aa360302abf7"
  },
  "name": "io.github.mfydev/ghost-mcp",
  "id": "db1cd4f8-cdad-4beb-bd30-43f84b653625",
  "description": "A Model Context Protocol (MCP) server for interacting with Ghost CMS through LLM interfaces like Claude. Allow you to control your Ghost blog by simply asking Claude etc.",
  "repository": {
    "url": "https://github.com/MFYDev/ghost-mcp",
    "name": "MFYDev/ghost-mcp",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "MFYDev",
      "packagename": "npm",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "-y",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          },
          {
            "argument": {
              "name": "@fanyangmeng/ghost-mcp",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 2
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720aba9f0aa360302abf8"
  },
  "name": "io.github.ko1ynnky/github-actions-mcp-server",
  "id": "68f6fc2e-c6f1-4e9e-97b5-1d61e75c9236",
  "description": "GitHub Actions Model Context Protocol Server",
  "repository": {
    "url": "https://github.com/ko1ynnky/github-actions-mcp-server",
    "name": "ko1ynnky/github-actions-mcp-server",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "ko1ynnky",
      "packagename": "unknown",
      "license": "",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "<path-to-mcp-server>/dist/index.js",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720aba9f0aa360302abf9"
  },
  "name": "io.github.longyi1207/glean-mcp-server",
  "id": "ffb0ae8b-ae2c-43ca-9a3d-300191c66723",
  "description": "",
  "repository": {
    "url": "https://github.com/longyi1207/glean-mcp-server",
    "name": "longyi1207/glean-mcp-server",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "longyi1207",
      "packagename": "unknown",
      "license": "",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720aba9f0aa360302abfa"
  },
  "name": "io.github.gongrzhe/gmail-mcp-server",
  "id": "20b98922-c1e0-4cd9-b03d-eefc4aa7da70",
  "description": "A Model Context Protocol (MCP) server for Gmail integration in Claude Desktop with auto authentication support. This server enables AI assistants to manage Gmail through natural language interactions.",
  "repository": {
    "url": "https://github.com/GongRzhe/Gmail-MCP-Server",
    "name": "GongRzhe/Gmail-MCP-Server",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "GongRzhe",
      "packagename": "npm",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "@gongrzhe/server-gmail-autoauth-mcp",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720aba9f0aa360302abfb"
  },
  "name": "io.github.baryhuang/mcp-headless-gmail",
  "id": "28a3dc58-c698-47a0-80cf-eaa417742f77",
  "description": "A MCP (Model Context Protocol) server that provides get, send Gmails without local credential or token setup.",
  "repository": {
    "url": "https://github.com/baryhuang/mcp-headless-gmail",
    "name": "baryhuang/mcp-headless-gmail",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "baryhuang",
      "packagename": "docker",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "run",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          },
          {
            "argument": {
              "name": "-i",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 2
          },
          {
            "argument": {
              "name": "--rm",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 3
          },
          {
            "argument": {
              "name": "buryhuang/mcp-headless-gmail:latest",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 4
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720aca9f0aa360302abfc"
  },
  "name": "io.github.hichana/goalstory-mcp",
  "id": "e6a9ee3c-f676-42ba-9abb-1c7e1e14dfe6",
  "description": "",
  "repository": {
    "url": "https://github.com/hichana/goalstory-mcp",
    "name": "hichana/goalstory-mcp",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "hichana",
      "packagename": "unknown",
      "license": "",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720aca9f0aa360302abfd"
  },
  "name": "io.github.goat-sdk/goat",
  "id": "a673f8f0-d8cc-4442-8210-ea5726c74d5d",
  "description": "The leading agentic finance toolkit for AI agents",
  "repository": {
    "url": "https://github.com/goat-sdk/goat",
    "name": "goat-sdk/goat",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "goat-sdk",
      "packagename": "unknown",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720aca9f0aa360302abfe"
  },
  "name": "io.github.coding-solo/godot-mcp",
  "id": "bfb7a2cc-56fa-4102-bb9d-94a33228cc87",
  "description": "MCP server for interfacing with Godot game engine. Provides tools for launching the editor, running projects, and capturing debug output.",
  "repository": {
    "url": "https://github.com/Coding-Solo/godot-mcp",
    "name": "Coding-Solo/godot-mcp",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "Coding-Solo",
      "packagename": "unknown",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720aca9f0aa360302abff"
  },
  "name": "io.github.mark3labs/mcp-filesystem-server",
  "id": "28dc272b-79a1-413a-b953-6284ce3b5f51",
  "description": "Go server implementing Model Context Protocol (MCP) for filesystem operations.",
  "repository": {
    "url": "https://github.com/mark3labs/mcp-filesystem-server",
    "name": "mark3labs/mcp-filesystem-server",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "mark3labs",
      "packagename": "unknown",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "/Users/username/Desktop",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          },
          {
            "argument": {
              "name": "/path/to/other/allowed/dir",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 2
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720aca9f0aa360302ac00"
  },
  "name": "io.github.vectorinstitute/mcp-goodnews",
  "id": "607fe85b-677b-49d1-826a-2263f732a0cf",
  "description": "A simple MCP application that delivers curated positive and uplifting news stories.",
  "repository": {
    "url": "https://github.com/VectorInstitute/mcp-goodnews",
    "name": "VectorInstitute/mcp-goodnews",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "VectorInstitute",
      "packagename": "unknown",
      "license": "Apache License 2.0",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "--directory",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          },
          {
            "argument": {
              "name": "<absolute-path-to-cloned-repo>/mcp-goodnews/src/mcp_goodnews",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 2
          },
          {
            "argument": {
              "name": "run",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 3
          },
          {
            "argument": {
              "name": "server.py",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 4
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720aca9f0aa360302ac01"
  },
  "name": "io.github.v-3/google-calendar",
  "id": "6d968f18-439d-44ef-89b6-6de24125f0c7",
  "description": "",
  "repository": {
    "url": "https://github.com/v-3/google-calendar",
    "name": "v-3/google-calendar",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "v-3",
      "packagename": "unknown",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "/ABSOLUTE/PATH/TO/YOUR/build/index.js",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720aca9f0aa360302ac02"
  },
  "name": "io.github.nspady/google-calendar-mcp",
  "id": "cf8667ab-d93b-4d7e-91e9-095d5dc240fd",
  "description": "MCP integration for Google Calendar to manage events.",
  "repository": {
    "url": "https://github.com/nspady/google-calendar-mcp",
    "name": "nspady/google-calendar-mcp",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "nspady",
      "packagename": "unknown",
      "license": "",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "<absolute-path-to-project-folder>/build/index.js",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720aca9f0aa360302ac03"
  },
  "name": "io.github.adenot/mcp-google-search",
  "id": "05f943ae-3b86-4ad7-8cc3-08d97e460919",
  "description": "",
  "repository": {
    "url": "https://github.com/adenot/mcp-google-search",
    "name": "adenot/mcp-google-search",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "adenot",
      "packagename": "npm",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "-y",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          },
          {
            "argument": {
              "name": "@adenot/mcp-google-search",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 2
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720aca9f0aa360302ac04"
  },
  "name": "io.github.zcaceres/gtasks-mcp",
  "id": "28d69e91-749c-4014-b012-4a81ff39c389",
  "description": "A Google Tasks Model Context Protocol Server for Claude",
  "repository": {
    "url": "https://github.com/zcaceres/gtasks-mcp",
    "name": "zcaceres/gtasks-mcp",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "zcaceres",
      "packagename": "unknown",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "{ABSOLUTE PATH TO FILE HERE}/dist/index.js",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720aca9f0aa360302ac05"
  },
  "name": "io.github.hannesj/mcp-graphql-schema",
  "id": "9f3fd033-ac41-485e-841d-6d3460aaec7d",
  "description": "GraphQL Schema Model Context Protocol Server",
  "repository": {
    "url": "https://github.com/hannesj/mcp-graphql-schema",
    "name": "hannesj/mcp-graphql-schema",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "hannesj",
      "packagename": "npm",
      "license": "",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "-y",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          },
          {
            "argument": {
              "name": "mcp-graphql-schema",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 2
          },
          {
            "argument": {
              "name": "/ABSOLUTE/PATH/TO/schema.graphqls",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 3
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720ada9f0aa360302ac06"
  },
  "name": "io.github.horizondatawave/hdw-mcp-server",
  "id": "72ed5375-66d8-4d98-a095-b3be2be075f2",
  "description": "A Model Context Protocol (MCP) server that provides comprehensive access to LinkedIn data and functionalities using the HorizonDataWave API, enabling not only data retrieval but also robust management of user accounts.",
  "repository": {
    "url": "https://github.com/horizondatawave/hdw-mcp-server",
    "name": "horizondatawave/hdw-mcp-server",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "horizondatawave",
      "packagename": "npm",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "@horizondatawave/mcp",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720ada9f0aa360302ac07"
  },
  "name": "io.github.heurist-network/heurist-mesh-mcp-server",
  "id": "bf346c68-96e1-4b22-bacf-55a88f491d08",
  "description": "",
  "repository": {
    "url": "https://github.com/heurist-network/heurist-mesh-mcp-server",
    "name": "heurist-network/heurist-mesh-mcp-server",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "heurist-network",
      "packagename": "unknown",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720ada9f0aa360302ac08"
  },
  "name": "io.github.heurist-network/heurist-agent-framework",
  "id": "0da0b386-ed52-4810-9eec-e28aa9b776e6",
  "description": "",
  "repository": {
    "url": "https://github.com/heurist-network/heurist-agent-framework",
    "name": "heurist-network/heurist-agent-framework",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "heurist-network",
      "packagename": "unknown",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720ada9f0aa360302ac09"
  },
  "name": "io.github.syucream/holaspirit-mcp-server",
  "id": "3f418541-5ff7-4b70-b658-759fbe1269b2",
  "description": "A MCP server that accesses to Holaspirit",
  "repository": {
    "url": "https://github.com/syucream/holaspirit-mcp-server",
    "name": "syucream/holaspirit-mcp-server",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "syucream",
      "packagename": "unknown",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720ada9f0aa360302ac0a"
  },
  "name": "io.github.tevonsb/homeassistant-mcp",
  "id": "bb1b0d0e-965a-46eb-bb11-c5ba05a56d9f",
  "description": "A MCP server for Home Assistant",
  "repository": {
    "url": "https://github.com/tevonsb/homeassistant-mcp",
    "name": "tevonsb/homeassistant-mcp",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "tevonsb",
      "packagename": "unknown",
      "license": "Apache License 2.0",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720ada9f0aa360302ac0b"
  },
  "name": "io.github.voska/hass-mcp",
  "id": "d8eacfcb-82c7-4cb8-8c5f-681581ef4b0d",
  "description": "Home Assistant MCP Server",
  "repository": {
    "url": "https://github.com/voska/hass-mcp",
    "name": "voska/hass-mcp",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "voska",
      "packagename": "docker",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "run",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          },
          {
            "argument": {
              "name": "-i",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 2
          },
          {
            "argument": {
              "name": "--rm",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 3
          },
          {
            "argument": {
              "name": "-e",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 4
          },
          {
            "argument": {
              "name": "HA_URL",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 5
          },
          {
            "argument": {
              "name": "-e",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 6
          },
          {
            "argument": {
              "name": "HA_TOKEN",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 7
          },
          {
            "argument": {
              "name": "voska/hass-mcp",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 8
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720ada9f0aa360302ac0c"
  },
  "name": "io.github.buryhuang/mcp-hubspot",
  "id": "517d4db4-858c-459f-b9d9-a1d38c6414e2",
  "description": "A Model Context Protocol (MCP) server that enables AI assistants to interact with HubSpot CRM data, providing built-in vector storage and caching mechanisms help overcome HubSpot API limitations while improving response times.",
  "repository": {
    "url": "https://github.com/peakmojo/mcp-hubspot",
    "name": "peakmojo/mcp-hubspot",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "peakmojo",
      "packagename": "unknown",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720ada9f0aa360302ac0d"
  },
  "name": "io.github.evalstate/mcp-hfspace",
  "id": "2104d0f8-7eff-4894-945e-1ab179916cef",
  "description": "MCP Server to Use HuggingFace spaces, easy configuration and Claude Desktop mode. ",
  "repository": {
    "url": "https://github.com/evalstate/mcp-hfspace",
    "name": "evalstate/mcp-hfspace",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "evalstate",
      "packagename": "unknown",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720ada9f0aa360302ac0e"
  },
  "name": "io.github.mektigboy/server-hyperliquid",
  "id": "e6733632-ee10-4f2d-9399-41e17d595da4",
  "description": "MCP Hyperliquid (https://app.hyperliquid.xyz) server",
  "repository": {
    "url": "https://github.com/mektigboy/server-hyperliquid",
    "name": "mektigboy/server-hyperliquid",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "mektigboy",
      "packagename": "npm",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "-y",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          },
          {
            "argument": {
              "name": "@mektigboy/server-hyperliquid",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 2
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720aea9f0aa360302ac0f"
  },
  "name": "io.github.iflytek/ifly-workflow-mcp-server",
  "id": "17898f92-b493-4bd6-979c-1aeebf5bc2f7",
  "description": "This a simple implementation of an MCP server using iFlytek. It enables calling iFlytek workflows through MCP tools.",
  "repository": {
    "url": "https://github.com/iflytek/ifly-workflow-mcp-server",
    "name": "iflytek/ifly-workflow-mcp-server",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "iflytek",
      "packagename": "unknown",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "--from",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          },
          {
            "argument": {
              "name": "git+https://github.com/iflytek/ifly-workflow-mcp-server",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 2
          },
          {
            "argument": {
              "name": "ifly_workflow_mcp_server",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 3
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720aea9f0aa360302ac10"
  },
  "name": "io.github.gongrzhe/image-generation-mcp-server",
  "id": "ada98726-e130-4373-8fdc-e070285dd1d0",
  "description": "This MCP server provides image generation capabilities using the Replicate Flux model.",
  "repository": {
    "url": "https://github.com/GongRzhe/Image-Generation-MCP-Server",
    "name": "GongRzhe/Image-Generation-MCP-Server",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "GongRzhe",
      "packagename": "npm",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "@gongrzhe/image-gen-server",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720aea9f0aa360302ac11"
  },
  "name": "io.github.idoru/influxdb-mcp-server",
  "id": "88ca09fc-4e11-49f0-abd4-f7bfc2efb4bf",
  "description": "An MCP Server for querying InfluxDB",
  "repository": {
    "url": "https://github.com/idoru/influxdb-mcp-server",
    "name": "idoru/influxdb-mcp-server",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "idoru",
      "packagename": "npm",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "influxdb-mcp-server",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720aea9f0aa360302ac12"
  },
  "name": "io.github.sergehuber/inoyu-mcp-unomi-server",
  "id": "196b75ce-567a-4c75-9e12-f943ee5df71d",
  "description": "An implementation of Anthropic's Model Context Protocol for the Apache Unomi CDP",
  "repository": {
    "url": "https://github.com/sergehuber/inoyu-mcp-unomi-server",
    "name": "sergehuber/inoyu-mcp-unomi-server",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "sergehuber",
      "packagename": "npm",
      "license": "Apache License 2.0",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "@inoyu/mcp-unomi-server",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720aea9f0aa360302ac13"
  },
  "name": "io.github.raoulbia-ai/mcp-server-for-intercom",
  "id": "620a0c53-cc4d-4396-9f10-8859600e992d",
  "description": "",
  "repository": {
    "url": "https://github.com/raoulbia-ai/mcp-server-for-intercom",
    "name": "raoulbia-ai/mcp-server-for-intercom",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "raoulbia-ai",
      "packagename": "unknown",
      "license": "Apache License 2.0",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720aea9f0aa360302ac14"
  },
  "name": "io.github.inditextech/mcp-server-simulator-ios-idb",
  "id": "7511f2b9-0be3-455a-9b14-47d6de4b9f8c",
  "description": "A Model Context Protocol (MCP) server that enables LLMs to interact with iOS simulators through natural language commands.",
  "repository": {
    "url": "https://github.com/InditexTech/mcp-server-simulator-ios-idb",
    "name": "InditexTech/mcp-server-simulator-ios-idb",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "InditexTech",
      "packagename": "unknown",
      "license": "Apache License 2.0",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "/path/to/mcp-server-simulator-ios-idb/dist/index.js",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720aea9f0aa360302ac15"
  },
  "name": "io.github.ferrislucas/iterm-mcp",
  "id": "1d4f02a1-2228-4d6b-84af-97b83a14d7d8",
  "description": "A Model Context Protocol server that executes commands in the current iTerm session - useful for REPL and CLI assistance",
  "repository": {
    "url": "https://github.com/ferrislucas/iterm-mcp",
    "name": "ferrislucas/iterm-mcp",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "ferrislucas",
      "packagename": "npm",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "-y",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          },
          {
            "argument": {
              "name": "iterm-mcp",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 2
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720aea9f0aa360302ac16"
  },
  "name": "io.github.quarkiverse/quarkus-mcp-servers",
  "id": "32280e35-b5bf-42a8-a8f6-2696e65f31ce",
  "description": "Model Context Protocol Servers in Quarkus",
  "repository": {
    "url": "https://github.com/quarkiverse/quarkus-mcp-servers",
    "name": "quarkiverse/quarkus-mcp-servers",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "quarkiverse",
      "packagename": "unknown",
      "license": "Apache License 2.0",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720aea9f0aa360302ac17"
  },
  "name": "io.github.gongrzhe/json-mcp-server",
  "id": "9e7a3361-6321-4ba0-b238-558528b2196a",
  "description": "JSON handling and processing mcp server",
  "repository": {
    "url": "https://github.com/GongRzhe/JSON-MCP-Server",
    "name": "GongRzhe/JSON-MCP-Server",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "GongRzhe",
      "packagename": "unknown",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720aea9f0aa360302ac18"
  },
  "name": "io.github.lamaalrajih/kicad-mcp",
  "id": "b0109d89-dcc3-41d4-be3a-cb496f98558f",
  "description": "Model Context Protocol server for KiCad on Mac, Windows, and Linux",
  "repository": {
    "url": "https://github.com/lamaalrajih/kicad-mcp",
    "name": "lamaalrajih/kicad-mcp",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "lamaalrajih",
      "packagename": "unknown",
      "license": "",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "/ABSOLUTE/PATH/TO/YOUR/PROJECT/kicad-mcp/main.py",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720afa9f0aa360302ac19"
  },
  "name": "io.github.christophenglisch/keycloak-model-context-protocol",
  "id": "e27f4314-48ec-4228-b636-667739aed6fe",
  "description": "MCP server implementation for Keycloak user management. Enables AI-powered administration of Keycloak users and realms through the Model Context Protocol (MCP). Seamlessly integrates with Claude Desktop and other MCP clients for automated user operations.",
  "repository": {
    "url": "https://github.com/ChristophEnglisch/keycloak-model-context-protocol",
    "name": "ChristophEnglisch/keycloak-model-context-protocol",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "ChristophEnglisch",
      "packagename": "npm",
      "license": "",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "-y",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          },
          {
            "argument": {
              "name": "keycloak-model-context-protocol",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 2
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720afa9f0aa360302ac1a"
  },
  "name": "io.github.kiwamizamurai/mcp-kibela-server",
  "id": "37f468e7-e958-4c5e-aeba-34e5b63d84de",
  "description": "MCP server implementation for Kibela API integration",
  "repository": {
    "url": "https://github.com/kiwamizamurai/mcp-kibela-server",
    "name": "kiwamizamurai/mcp-kibela-server",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "kiwamizamurai",
      "packagename": "npm",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "-y",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          },
          {
            "argument": {
              "name": "@kiwamizamurai/mcp-kibela-server",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 2
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720afa9f0aa360302ac1b"
  },
  "name": "io.github.macrat/mcp-server-kintone",
  "id": "ad36c0eb-ec93-485b-917e-11ea95996d1e",
  "description": "MCP server for kintone",
  "repository": {
    "url": "https://github.com/macrat/mcp-server-kintone",
    "name": "macrat/mcp-server-kintone",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "macrat",
      "packagename": "unknown",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720afa9f0aa360302ac1c"
  },
  "name": "io.github.kong/mcp-konnect",
  "id": "b4da1238-4931-4b1c-b2ef-8a9bdcf8e9b4",
  "description": "A Model Context Protocol (MCP) server for interacting with Kong Konnect APIs, allowing AI assistants to query and analyze Kong Gateway configurations, traffic, and analytics.",
  "repository": {
    "url": "https://github.com/Kong/mcp-konnect",
    "name": "Kong/mcp-konnect",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "Kong",
      "packagename": "unknown",
      "license": "Apache License 2.0",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "/absolute/path/to/mcp-konnect/build/index.js",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720afa9f0aa360302ac1d"
  },
  "name": "io.github.flux159/mcp-server-kubernetes",
  "id": "5cb3d538-700c-4a87-a86a-f1c29232b390",
  "description": "MCP Server for kubernetes management commands",
  "repository": {
    "url": "https://github.com/Flux159/mcp-server-kubernetes",
    "name": "Flux159/mcp-server-kubernetes",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "Flux159",
      "packagename": "npm",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "mcp-server-kubernetes",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720afa9f0aa360302ac1e"
  },
  "name": "io.github.manusa/kubernetes-mcp-server",
  "id": "4a7e282c-6693-4b9f-b6af-4aed0b2494c0",
  "description": "Model Context Protocol (MCP) server for Kubernetes and OpenShift",
  "repository": {
    "url": "https://github.com/manusa/kubernetes-mcp-server",
    "name": "manusa/kubernetes-mcp-server",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "manusa",
      "packagename": "unknown",
      "license": "Apache License 2.0",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720afa9f0aa360302ac1f"
  },
  "name": "io.github.gongrzhe/langflow-doc-qa-server",
  "id": "8d80d3a8-dd77-4ace-8458-ed4a20e625cd",
  "description": "A Model Context Protocol server for document Q&A powered by Langflow . It demonstrates core MCP concepts by providing a simple interface to query documents through a Langflow backend.",
  "repository": {
    "url": "https://github.com/GongRzhe/Langflow-DOC-QA-SERVER",
    "name": "GongRzhe/Langflow-DOC-QA-SERVER",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "GongRzhe",
      "packagename": "unknown",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "/path/to/doc-qa-server/build/index.js",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720afa9f0aa360302ac20"
  },
  "name": "io.github.syucream/lightdash-mcp-server",
  "id": "c0510d18-cf04-4e91-88fa-f31d25085b06",
  "description": "A MCP(Model Context Protocol) server that accesses to Lightdash",
  "repository": {
    "url": "https://github.com/syucream/lightdash-mcp-server",
    "name": "syucream/lightdash-mcp-server",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "syucream",
      "packagename": "unknown",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720afa9f0aa360302ac21"
  },
  "name": "io.github.jerhadf/linear-mcp-server",
  "id": "1e163e87-305a-4f89-8a06-7eafeadf9f4d",
  "description": "A server that integrates Linear's project management system with the Model Context Protocol (MCP) to allow LLMs to interact with Linear.",
  "repository": {
    "url": "https://github.com/jerhadf/linear-mcp-server",
    "name": "jerhadf/linear-mcp-server",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "jerhadf",
      "packagename": "npm",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "-y",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          },
          {
            "argument": {
              "name": "linear-mcp-server",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 2
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720b0a9f0aa360302ac22"
  },
  "name": "io.github.geropl/linear-mcp-go",
  "id": "348832d9-5d36-48fb-8937-b8cb2170025c",
  "description": "linear MCP server based on mcp-go",
  "repository": {
    "url": "https://github.com/geropl/linear-mcp-go",
    "name": "geropl/linear-mcp-go",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "geropl",
      "packagename": "unknown",
      "license": "",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720b0a9f0aa360302ac23"
  },
  "name": "io.github.amornpan/py-mcp-line",
  "id": "c543a406-cc3d-400f-a28c-b3f1eb9d9e42",
  "description": "python mcp LINE",
  "repository": {
    "url": "https://github.com/amornpan/py-mcp-line",
    "name": "amornpan/py-mcp-line",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "amornpan",
      "packagename": "unknown",
      "license": "",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "server.py",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720b0a9f0aa360302ac24"
  },
  "name": "io.github.run-llama/mcp-server-llamacloud",
  "id": "65b5b928-fabb-49b0-b8e1-cd089c2e7a6f",
  "description": "A MCP server connecting to managed indexes on LlamaCloud",
  "repository": {
    "url": "https://github.com/run-llama/mcp-server-llamacloud",
    "name": "run-llama/mcp-server-llamacloud",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "run-llama",
      "packagename": "npm",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "-y",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          },
          {
            "argument": {
              "name": "@llamaindex/mcp-server-llamacloud",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 2
          },
          {
            "argument": {
              "name": "--index",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 3
          },
          {
            "argument": {
              "name": "10k-SEC-Tesla",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 4
          },
          {
            "argument": {
              "name": "--description",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 5
          },
          {
            "argument": {
              "name": "10k SEC documents from 2023 for Tesla",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 6
          },
          {
            "argument": {
              "name": "--index",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 7
          },
          {
            "argument": {
              "name": "10k-SEC-Apple",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 8
          },
          {
            "argument": {
              "name": "--description",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 9
          },
          {
            "argument": {
              "name": "10k SEC documents from 2023 for Apple",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 10
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720b0a9f0aa360302ac25"
  },
  "name": "io.github.cyberchitta/llm-context.py",
  "id": "bf875c33-7754-4774-9dc9-5b1665692256",
  "description": "Share code with LLMs via Model Context Protocol or clipboard. Rule-based customization enables easy switching between different tasks (like code review and documentation). Includes smart code outlining.",
  "repository": {
    "url": "https://github.com/cyberchitta/llm-context.py",
    "name": "cyberchitta/llm-context.py",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "cyberchitta",
      "packagename": "unknown",
      "license": "Apache License 2.0",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720b0a9f0aa360302ac26"
  },
  "name": "io.github.carterlasalle/mac_messages_mcp",
  "id": "9dfc09d4-25ad-4f94-b0fd-d48c6ca000ce",
  "description": "An MCP server that securely interfaces with your iMessage database via the Model Context Protocol (MCP), allowing LLMs to query and analyze iMessage conversations. It includes robust phone number validation, attachment processing, contact management, group chat handling, and full support for sending and receiving messages.",
  "repository": {
    "url": "https://github.com/carterlasalle/mac_messages_mcp",
    "name": "carterlasalle/mac_messages_mcp",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "carterlasalle",
      "packagename": "unknown",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "mac-messages-mcp",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720b0a9f0aa360302ac27"
  },
  "name": "io.github.abel9851/mcp-server-mariadb",
  "id": "0ebea656-d924-4615-b9db-c0403c869aa4",
  "description": "An mcp server that provides read-only access to MariaDB.",
  "repository": {
    "url": "https://github.com/abel9851/mcp-server-mariadb",
    "name": "abel9851/mcp-server-mariadb",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "abel9851",
      "packagename": "unknown",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "--directory",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          },
          {
            "argument": {
              "name": "/YOUR/SOURCE/PATH/mcp-server-mariadb/src/mcp_server_mariadb",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 2
          },
          {
            "argument": {
              "name": "run",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 3
          },
          {
            "argument": {
              "name": "server.py",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 4
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720b0a9f0aa360302ac28"
  },
  "name": "io.github.maton-ai/agent-toolkit",
  "id": "92b66c28-be49-461f-9592-c8bd5ce2710a",
  "description": "",
  "repository": {
    "url": "https://github.com/maton-ai/agent-toolkit",
    "name": "maton-ai/agent-toolkit",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "maton-ai",
      "packagename": "unknown",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720b0a9f0aa360302ac29"
  },
  "name": "io.github.liuyoshio/mcp-compass",
  "id": "5e57b74b-f54b-4c30-9f78-911983c210e5",
  "description": "MCP Discovery & Recommendation Service - Find the right MCP server for your needs",
  "repository": {
    "url": "https://github.com/liuyoshio/mcp-compass",
    "name": "liuyoshio/mcp-compass",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "liuyoshio",
      "packagename": "unknown",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720b1a9f0aa360302ac2a"
  },
  "name": "io.github.tesla0225/mcp-create",
  "id": "29c39a53-eaef-4194-acb5-6a62d186230a",
  "description": "",
  "repository": {
    "url": "https://github.com/tesla0225/mcp-create",
    "name": "tesla0225/mcp-create",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "tesla0225",
      "packagename": "docker",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "run",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          },
          {
            "argument": {
              "name": "-i",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 2
          },
          {
            "argument": {
              "name": "--rm",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 3
          },
          {
            "argument": {
              "name": "mcp-create",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 4
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720b1a9f0aa360302ac2b"
  },
  "name": "io.github.anaisbetts/mcp-installer",
  "id": "23059ef5-be50-429e-b753-db0bfafbe7a9",
  "description": "An MCP server that installs other MCP servers for you",
  "repository": {
    "url": "https://github.com/anaisbetts/mcp-installer",
    "name": "anaisbetts/mcp-installer",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "anaisbetts",
      "packagename": "unknown",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720b1a9f0aa360302ac2c"
  },
  "name": "io.github.strowk/mcp-k8s-go",
  "id": "0abaded7-f1c4-4753-ac79-05d3ca2b0533",
  "description": "MCP server connecting to Kubernetes",
  "repository": {
    "url": "https://github.com/strowk/mcp-k8s-go",
    "name": "strowk/mcp-k8s-go",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "strowk",
      "packagename": "unknown",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720b1a9f0aa360302ac2d"
  },
  "name": "io.github.nkapila6/mcp-local-rag",
  "id": "fcdf52a6-7bf3-4d4a-adee-9d26f9786f26",
  "description": "\"primitive\" RAG-like web search model context protocol (MCP) server that runs locally. ✨ no APIs ✨",
  "repository": {
    "url": "https://github.com/nkapila6/mcp-local-rag",
    "name": "nkapila6/mcp-local-rag",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "nkapila6",
      "packagename": "unknown",
      "license": "",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "--from",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          },
          {
            "argument": {
              "name": "git+https://github.com/nkapila6/mcp-local-rag",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 2
          },
          {
            "argument": {
              "name": "mcp-local-rag",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 3
          }
        ],
        "namedarguments": [
          {
            "argument": {
              "name": "--python",
              "description": "Named argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": "3.10"
            },
            "shortflag": "",
            "longflag": "",
            "requiresvalue": true
          }
        ]
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720b1a9f0aa360302ac2e"
  },
  "name": "io.github.sparfenyuk/mcp-proxy",
  "id": "95b1404b-4242-48f2-bf5e-0aad06f6eec8",
  "description": "Connect to MCP servers that run on SSE transport, or expose stdio servers as an SSE server using the MCP Proxy server.",
  "repository": {
    "url": "https://github.com/sparfenyuk/mcp-proxy",
    "name": "sparfenyuk/mcp-proxy",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "sparfenyuk",
      "packagename": "unknown",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "http://example.io/sse",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720b1a9f0aa360302ac2f"
  },
  "name": "io.github.mem0ai/mem0-mcp",
  "id": "239909a9-368c-4c01-a72d-fd5c4b71c634",
  "description": "",
  "repository": {
    "url": "https://github.com/mem0ai/mem0-mcp",
    "name": "mem0ai/mem0-mcp",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "mem0ai",
      "packagename": "unknown",
      "license": "",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720b1a9f0aa360302ac30"
  },
  "name": "io.github.unibaseio/membase-mcp",
  "id": "3e69ae45-1e41-4faf-9c46-f0a4d80ebc0c",
  "description": "A Model Context Protocol (MCP) server that enables secure interaction with Membase",
  "repository": {
    "url": "https://github.com/unibaseio/membase-mcp",
    "name": "unibaseio/membase-mcp",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "unibaseio",
      "packagename": "pypi",
      "license": "",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "--directory",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          },
          {
            "argument": {
              "name": "path/to/membase-mcp",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 2
          },
          {
            "argument": {
              "name": "run",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 3
          },
          {
            "argument": {
              "name": "src/membase_mcp/server.py",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 4
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720b4a9f0aa360302ac4b"
  },
  "name": "io.github.calclavia/mcp-obsidian",
  "id": "ef7e2a56-a18d-436e-b2fe-400481cbbada",
  "description": "A connector for Claude Desktop to read and search an Obsidian vault.",
  "repository": {
    "url": "https://github.com/smithery-ai/mcp-obsidian",
    "name": "smithery-ai/mcp-obsidian",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "smithery-ai",
      "packagename": "unknown",
      "license": "GNU Affero General Public License v3.0",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720b1a9f0aa360302ac31"
  },
  "name": "io.github.jexinsam/mssql_mcp_server",
  "id": "8834a098-dd52-4987-92ea-3c5786e91c3c",
  "description": "A Model Context Protocol (MCP) server facilitating secure interactions with MSSQL databases.",
  "repository": {
    "url": "https://github.com/JexinSam/mssql_mcp_server",
    "name": "JexinSam/mssql_mcp_server",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "JexinSam",
      "packagename": "pypi",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "--directory",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          },
          {
            "argument": {
              "name": "path/to/mssql_mcp_server",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 2
          },
          {
            "argument": {
              "name": "run",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 3
          },
          {
            "argument": {
              "name": "mssql_mcp_server",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 4
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720b1a9f0aa360302ac32"
  },
  "name": "io.github.amornpan/py-mcp-mssql",
  "id": "505d89ad-ded5-4035-baa0-b589d83c8c0c",
  "description": "py-mcp-mssql",
  "repository": {
    "url": "https://github.com/amornpan/py-mcp-mssql",
    "name": "amornpan/py-mcp-mssql",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "amornpan",
      "packagename": "unknown",
      "license": "",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "server.py",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720b1a9f0aa360302ac33"
  },
  "name": "io.github.daobataotie/mssql-mcp",
  "id": "4a18d914-917c-4152-bb34-fc43e008a113",
  "description": "mssql mcp server",
  "repository": {
    "url": "https://github.com/daobataotie/mssql-mcp",
    "name": "daobataotie/mssql-mcp",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "daobataotie",
      "packagename": "unknown",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720b2a9f0aa360302ac34"
  },
  "name": "io.github.zcaceres/mcp-markdownify-server",
  "id": "ae40a12c-0d4c-4954-81a1-2f501f2e2a86",
  "description": "A Model Context Protocol server for converting almost anything to Markdown",
  "repository": {
    "url": "https://github.com/zcaceres/markdownify-mcp",
    "name": "zcaceres/markdownify-mcp",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "zcaceres",
      "packagename": "unknown",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720b2a9f0aa360302ac35"
  },
  "name": "io.github.inditextech/mcp-teams-server",
  "id": "92d05586-1870-4005-b871-f68ac68320fc",
  "description": "An MCP (Model Context Protocol) server implementation for Microsoft Teams integration, providing capabilities to read messages, create messages, reply to messages, mention members.",
  "repository": {
    "url": "https://github.com/InditexTech/mcp-teams-server",
    "name": "InditexTech/mcp-teams-server",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "InditexTech",
      "packagename": "unknown",
      "license": "Apache License 2.0",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720b2a9f0aa360302ac36"
  },
  "name": "io.github.yuchenssr/mindmap-mcp-server",
  "id": "fa79c80d-05b0-43af-9b00-27a39210d085",
  "description": "mindmap, mcp server, artifact",
  "repository": {
    "url": "https://github.com/YuChenSSR/mindmap-mcp-server",
    "name": "YuChenSSR/mindmap-mcp-server",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "YuChenSSR",
      "packagename": "unknown",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "mindmap-mcp-server",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          },
          {
            "argument": {
              "name": "--return-type",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 2
          },
          {
            "argument": {
              "name": "html",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 3
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720b2a9f0aa360302ac37"
  },
  "name": "io.github.dmayboroda/minima",
  "id": "a81c029c-6013-4d90-97af-1bf3f22fdc7b",
  "description": "On-premises conversational RAG with configurable containers",
  "repository": {
    "url": "https://github.com/dmayboroda/minima",
    "name": "dmayboroda/minima",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "dmayboroda",
      "packagename": "unknown",
      "license": "Mozilla Public License 2.0",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720b2a9f0aa360302ac38"
  },
  "name": "io.github.mobile-next/mobile-mcp",
  "id": "e79d116a-f246-4b3f-acf2-5db78e857ec3",
  "description": "Model Context Protocol Server for Mobile Automation and Scraping (iOS, Android, Emulators, Simulators and Physical Devices)",
  "repository": {
    "url": "https://github.com/mobile-next/mobile-mcp",
    "name": "mobile-next/mobile-mcp",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "mobile-next",
      "packagename": "npm",
      "license": "Apache License 2.0",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "-y",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          },
          {
            "argument": {
              "name": "@mobilenext/mobile-mcp@latest",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 2
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720b2a9f0aa360302ac39"
  },
  "name": "io.github.kiliczsh/mcp-mongo-server",
  "id": "d4eba3c2-eab4-49c8-bfc9-f2c1fcadaf84",
  "description": "A Model Context Protocol Server for MongoDB",
  "repository": {
    "url": "https://github.com/kiliczsh/mcp-mongo-server",
    "name": "kiliczsh/mcp-mongo-server",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "kiliczsh",
      "packagename": "npm",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "-y",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          },
          {
            "argument": {
              "name": "mcp-mongo-server",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 2
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720b2a9f0aa360302ac3a"
  },
  "name": "io.github.furey/mongodb-lens",
  "id": "1579d9bd-23c3-4bf3-a8d3-42f03ec70ebe",
  "description": "🍃🔎 MongoDB Lens: Full Featured MCP Server for MongoDB Databases",
  "repository": {
    "url": "https://github.com/furey/mongodb-lens",
    "name": "furey/mongodb-lens",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "furey",
      "packagename": "unknown",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "-y",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          },
          {
            "argument": {
              "name": "mongodb-lens@latest",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 2
          },
          {
            "argument": {
              "name": "mongodb://your-connection-string",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 3
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720b2a9f0aa360302ac3b"
  },
  "name": "io.github.sakce/mcp-server-monday",
  "id": "b4df5861-6b1e-42d2-aa9d-df38f0f73a41",
  "description": "MCP Server to interact with Monday.com boards and items",
  "repository": {
    "url": "https://github.com/sakce/mcp-server-monday",
    "name": "sakce/mcp-server-monday",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "sakce",
      "packagename": "unknown",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720b2a9f0aa360302ac3c"
  },
  "name": "io.github.yanmxa/multicluster-mcp-server",
  "id": "7872362e-45f7-4c57-b581-26ee52680b81",
  "description": "The gateway for GenAI systems to interact with multiple Kubernetes clusters through the MCP",
  "repository": {
    "url": "https://github.com/yanmxa/multicluster-mcp-server",
    "name": "yanmxa/multicluster-mcp-server",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "yanmxa",
      "packagename": "unknown",
      "license": "",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720b2a9f0aa360302ac3d"
  },
  "name": "io.github.benborla/mcp-server-mysql",
  "id": "8b809eef-0f3b-487c-9560-4824ab42122b",
  "description": "A Model Context Protocol server that provides read-only access to MySQL databases. This server enables LLMs to inspect database schemas and execute read-only queries.",
  "repository": {
    "url": "https://github.com/benborla/mcp-server-mysql",
    "name": "benborla/mcp-server-mysql",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "benborla",
      "packagename": "npm",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "mcprunner",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          },
          {
            "argument": {
              "name": "--",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 2
          },
          {
            "argument": {
              "name": "npx",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 3
          },
          {
            "argument": {
              "name": "-y",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 4
          },
          {
            "argument": {
              "name": "@benborla29/mcp-server-mysql",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 5
          }
        ],
        "namedarguments": [
          {
            "argument": {
              "name": "MYSQL_HOST",
              "description": "Named argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": "127.0.0.1"
            },
            "shortflag": "",
            "longflag": "",
            "requiresvalue": true
          },
          {
            "argument": {
              "name": "MYSQL_PORT",
              "description": "Named argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": "3306"
            },
            "shortflag": "",
            "longflag": "",
            "requiresvalue": true
          },
          {
            "argument": {
              "name": "MYSQL_USER",
              "description": "Named argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": "root"
            },
            "shortflag": "",
            "longflag": "",
            "requiresvalue": true
          },
          {
            "argument": {
              "name": "MYSQL_PASS",
              "description": "Named argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": "root"
            },
            "shortflag": "",
            "longflag": "",
            "requiresvalue": true
          },
          {
            "argument": {
              "name": "MYSQL_DB",
              "description": "Named argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": "demostore"
            },
            "shortflag": "",
            "longflag": "",
            "requiresvalue": true
          },
          {
            "argument": {
              "name": "ALLOW_INSERT_OPERATION",
              "description": "Named argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": "true"
            },
            "shortflag": "",
            "longflag": "",
            "requiresvalue": true
          },
          {
            "argument": {
              "name": "ALLOW_UPDATE_OPERATION",
              "description": "Named argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": "true"
            },
            "shortflag": "",
            "longflag": "",
            "requiresvalue": true
          },
          {
            "argument": {
              "name": "ALLOW_DELETE_OPERATION",
              "description": "Named argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": "false"
            },
            "shortflag": "",
            "longflag": "",
            "requiresvalue": true
          }
        ]
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720b3a9f0aa360302ac3e"
  },
  "name": "io.github.designcomputer/mysql_mcp_server",
  "id": "0064bc73-daf4-4d57-b79f-3a8065708c67",
  "description": "A Model Context Protocol (MCP) server that enables secure interaction with MySQL databases",
  "repository": {
    "url": "https://github.com/designcomputer/mysql_mcp_server",
    "name": "designcomputer/mysql_mcp_server",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "designcomputer",
      "packagename": "pypi",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "--directory",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          },
          {
            "argument": {
              "name": "path/to/mysql_mcp_server",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 2
          },
          {
            "argument": {
              "name": "run",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 3
          },
          {
            "argument": {
              "name": "mysql_mcp_server",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 4
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720b3a9f0aa360302ac3f"
  },
  "name": "io.github.leonardsellem/n8n-mcp-server",
  "id": "334c0ea1-71c5-4ec8-a945-bec3cfe1dc13",
  "description": "MCP server that provides tools and resources for interacting with n8n API",
  "repository": {
    "url": "https://github.com/leonardsellem/n8n-mcp-server",
    "name": "leonardsellem/n8n-mcp-server",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "leonardsellem",
      "packagename": "unknown",
      "license": "",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720b3a9f0aa360302ac40"
  },
  "name": "io.github.programcomputer/nasa-mcp-server",
  "id": "602b7513-4c6e-4f21-ae57-f51c2b96a425",
  "description": "A Model Context Protocol (MCP) server for NASA APIs, providing a standardized interface for AI models to interact with NASA's vast array of data sources.",
  "repository": {
    "url": "https://github.com/ProgramComputer/NASA-MCP-server",
    "name": "ProgramComputer/NASA-MCP-server",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "ProgramComputer",
      "packagename": "npm",
      "license": "ISC License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "-y",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          },
          {
            "argument": {
              "name": "@programcomputer/nasa-mcp-server@latest",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 2
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720b3a9f0aa360302ac41"
  },
  "name": "io.github.stefanoamorelli/nasdaq-data-link-mcp",
  "id": "173c74a7-c6d6-4374-bb1c-3ff8a1fbf08d",
  "description": "A Nasdaq Data Link MCP (Model Context Protocol) Server",
  "repository": {
    "url": "https://github.com/stefanoamorelli/nasdaq-data-link-mcp",
    "name": "stefanoamorelli/nasdaq-data-link-mcp",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "stefanoamorelli",
      "packagename": "unknown",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720b3a9f0aa360302ac42"
  },
  "name": "io.github.kyrietangsheng/mcp-server-nationalparks",
  "id": "75952d46-72a2-4c7c-92fb-e38f0aa87248",
  "description": "",
  "repository": {
    "url": "https://github.com/KyrieTangSheng/mcp-server-nationalparks",
    "name": "KyrieTangSheng/mcp-server-nationalparks",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "KyrieTangSheng",
      "packagename": "npm",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "-y",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          },
          {
            "argument": {
              "name": "mcp-server-nationalparks",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 2
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720b3a9f0aa360302ac43"
  },
  "name": "io.github.pfldy2850/py-mcp-naver",
  "id": "fa343441-95c7-432a-add2-7c0c41b5d6eb",
  "description": "python MCP NAVER",
  "repository": {
    "url": "https://github.com/pfldy2850/py-mcp-naver",
    "name": "pfldy2850/py-mcp-naver",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "pfldy2850",
      "packagename": "unknown",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720b3a9f0aa360302ac44"
  },
  "name": "io.github.r-huijts/ns-mcp-server",
  "id": "fb3e7955-5ea7-42ae-ae63-725bd4a9f04d",
  "description": "A Model Context Protocol (MCP) server that provides access to NS (Dutch Railways) travel information through Claude AI. This server enables Claude to fetch real-time train travel information and disruptions using the official Dutch NS API.",
  "repository": {
    "url": "https://github.com/r-huijts/ns-mcp-server",
    "name": "r-huijts/ns-mcp-server",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "r-huijts",
      "packagename": "npm",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "-y",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          },
          {
            "argument": {
              "name": "ns-mcp-server",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 2
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720b3a9f0aa360302ac45"
  },
  "name": "io.github.da-okazaki/mcp-neo4j-server",
  "id": "9bce2e09-9c69-4097-9d36-090075bee1c9",
  "description": "mcp-neo4j-server",
  "repository": {
    "url": "https://github.com/da-okazaki/mcp-neo4j-server",
    "name": "da-okazaki/mcp-neo4j-server",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "da-okazaki",
      "packagename": "npm",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "@alanse/mcp-neo4j-server",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720b3a9f0aa360302ac46"
  },
  "name": "io.github.bigcodegen/mcp-neovim-server",
  "id": "3af245ab-4e21-4c06-afa7-7345e311ca53",
  "description": "Control Neovim using Model Context Protocol (MCP) and the official neovim/node-client JavaScript library",
  "repository": {
    "url": "https://github.com/bigcodegen/mcp-neovim-server",
    "name": "bigcodegen/mcp-neovim-server",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "bigcodegen",
      "packagename": "npm",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "-y",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          },
          {
            "argument": {
              "name": "mcp-neovim-server",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 2
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720b3a9f0aa360302ac47"
  },
  "name": "io.github.suekou/mcp-notion-server",
  "id": "c5d8528c-cbf4-4ce3-8011-3b4f79a0cc30",
  "description": "",
  "repository": {
    "url": "https://github.com/suekou/mcp-notion-server",
    "name": "suekou/mcp-notion-server",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "suekou",
      "packagename": "npm",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "-y",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          },
          {
            "argument": {
              "name": "@suekou/mcp-notion-server",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 2
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720b4a9f0aa360302ac48"
  },
  "name": "io.github.v-3/notion-server",
  "id": "e4a5b44f-6908-41cc-9510-c920709ca8ec",
  "description": "",
  "repository": {
    "url": "https://github.com/v-3/notion-server",
    "name": "v-3/notion-server",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "v-3",
      "packagename": "unknown",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "/absolute/path/to/notion-server/build/index.js",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720b4a9f0aa360302ac49"
  },
  "name": "io.github.teddyzxcv/ntfy-mcp",
  "id": "8b7b4a39-f0d2-4ba3-ad41-f146ebb6b72f",
  "description": "",
  "repository": {
    "url": "https://github.com/teddyzxcv/ntfy-mcp",
    "name": "teddyzxcv/ntfy-mcp",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "teddyzxcv",
      "packagename": "unknown",
      "license": "Apache License 2.0",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720b4a9f0aa360302ac4a"
  },
  "name": "io.github.oatpp/oatpp-mcp",
  "id": "8ef3cd4c-313d-434c-bf47-05a4adc1f724",
  "description": "Anthropic’s Model Context Protocol implementation for Oat++",
  "repository": {
    "url": "https://github.com/oatpp/oatpp-mcp",
    "name": "oatpp/oatpp-mcp",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "oatpp",
      "packagename": "unknown",
      "license": "Apache License 2.0",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720b4a9f0aa360302ac4c"
  },
  "name": "io.github.stevenstavrakis/obsidian-mcp",
  "id": "3452ec9f-e282-4b86-b902-0c445ae4d80d",
  "description": "A simple MCP server for Obsidian",
  "repository": {
    "url": "https://github.com/StevenStavrakis/obsidian-mcp",
    "name": "StevenStavrakis/obsidian-mcp",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "StevenStavrakis",
      "packagename": "npm",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "-y",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          },
          {
            "argument": {
              "name": "obsidian-mcp",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 2
          },
          {
            "argument": {
              "name": "/path/to/your/vault",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 3
          },
          {
            "argument": {
              "name": "/path/to/your/vault2",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 4
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720b4a9f0aa360302ac4d"
  },
  "name": "io.github.yuanooo/oceanbase_mcp_server",
  "id": "8bb57100-b4c1-404d-874f-910a3fc8777f",
  "description": "A Model Context Protocol (MCP) server that enables secure interaction with OceanBase databases. This server allows AI assistants to list tables, read data, and execute SQL queries through a controlled interface, making database exploration and analysis safer and more structured.",
  "repository": {
    "url": "https://github.com/yuanoOo/oceanbase_mcp_server",
    "name": "yuanoOo/oceanbase_mcp_server",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "yuanoOo",
      "packagename": "pypi",
      "license": "Apache License 2.0",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "--directory",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          },
          {
            "argument": {
              "name": "path/to/oceanbase_mcp_server",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 2
          },
          {
            "argument": {
              "name": "run",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 3
          },
          {
            "argument": {
              "name": "oceanbase_mcp_server",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 4
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720b4a9f0aa360302ac4e"
  },
  "name": "io.github.kapilduraphe/okta-mcp-server",
  "id": "272ddc49-358a-4e1c-b750-1e96236b4865",
  "description": "Okta MCP Server",
  "repository": {
    "url": "https://github.com/kapilduraphe/okta-mcp-server",
    "name": "kapilduraphe/okta-mcp-server",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "kapilduraphe",
      "packagename": "unknown",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "PATH_TO_PROJECT_DIRECTORY/dist/index.js",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720b4a9f0aa360302ac4f"
  },
  "name": "io.github.rajvirtual/mcp-servers",
  "id": "9e2b34ba-9e1c-4b5a-bcd9-4b7d27931afa",
  "description": "A Model Context Protocol (MCP) server that provides AI assistants with access to Microsoft OneNote. This server enables AI models to read from and write to OneNote notebooks, sections, and pages.",
  "repository": {
    "url": "https://github.com/rajvirtual/MCP-Servers",
    "name": "rajvirtual/MCP-Servers",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "rajvirtual",
      "packagename": "unknown",
      "license": "",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720b4a9f0aa360302ac50"
  },
  "name": "io.github.conechoai/openai-websearch-mcp",
  "id": "e1514916-7cc8-4e91-920b-8ff4404cae32",
  "description": "openai websearch tool as mcp server",
  "repository": {
    "url": "https://github.com/ConechoAI/openai-websearch-mcp",
    "name": "ConechoAI/openai-websearch-mcp",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "ConechoAI",
      "packagename": "unknown",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720b4a9f0aa360302ac51"
  },
  "name": "io.github.snaggle-ai/openapi-mcp-server",
  "id": "b28bfbc8-d404-464b-9844-86c8505bcb88",
  "description": "Allow AI to wade through complex OpenAPIs using Simple Language",
  "repository": {
    "url": "https://github.com/janwilmake/openapi-mcp-server",
    "name": "janwilmake/openapi-mcp-server",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "janwilmake",
      "packagename": "unknown",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720b5a9f0aa360302ac52"
  },
  "name": "io.github.baryhuang/mcp-server-any-openapi",
  "id": "3d540a86-939c-4edc-8386-8c5143ea4e6d",
  "description": "A MCP server that enables Claude to discover and call any API endpoint through semantic search. Intelligently chunks OpenAPI specifications to handle large API documentation, with built-in request execution capabilities. Perfect for integrating private APIs with Claude Desktop.",
  "repository": {
    "url": "https://github.com/baryhuang/mcp-server-any-openapi",
    "name": "baryhuang/mcp-server-any-openapi",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "baryhuang",
      "packagename": "docker",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "run",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          },
          {
            "argument": {
              "name": "-i",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 2
          },
          {
            "argument": {
              "name": "--rm",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 3
          },
          {
            "argument": {
              "name": "-e",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 4
          },
          {
            "argument": {
              "name": "-e",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 5
          },
          {
            "argument": {
              "name": "-e",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 6
          },
          {
            "argument": {
              "name": "buryhuang/mcp-server-any-openapi:latest",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 7
          },
          {
            "argument": {
              "name": "run",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 8
          },
          {
            "argument": {
              "name": "-i",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 9
          },
          {
            "argument": {
              "name": "--rm",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 10
          },
          {
            "argument": {
              "name": "-e",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 11
          },
          {
            "argument": {
              "name": "-e",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 12
          },
          {
            "argument": {
              "name": "-e",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 13
          },
          {
            "argument": {
              "name": "buryhuang/mcp-server-any-openapi:latest",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 14
          }
        ],
        "namedarguments": [
          {
            "argument": {
              "name": "OPENAPI_JSON_DOCS_URL",
              "description": "Named argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": "https://api.finance.com/openapi.json"
            },
            "shortflag": "",
            "longflag": "",
            "requiresvalue": true
          },
          {
            "argument": {
              "name": "MCP_API_PREFIX",
              "description": "Named argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": "finance"
            },
            "shortflag": "",
            "longflag": "",
            "requiresvalue": true
          },
          {
            "argument": {
              "name": "GLOBAL_TOOL_PROMPT",
              "description": "Named argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": "'Access to insights apis for ACME Financial Services abc.com .'"
            },
            "shortflag": "",
            "longflag": "",
            "requiresvalue": true
          },
          {
            "argument": {
              "name": "OPENAPI_JSON_DOCS_URL",
              "description": "Named argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": "https://api.healthcare.com/openapi.json"
            },
            "shortflag": "",
            "longflag": "",
            "requiresvalue": true
          },
          {
            "argument": {
              "name": "MCP_API_PREFIX",
              "description": "Named argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": "healthcare"
            },
            "shortflag": "",
            "longflag": "",
            "requiresvalue": true
          },
          {
            "argument": {
              "name": "GLOBAL_TOOL_PROMPT",
              "description": "Named argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": "'Access to insights apis for Healthcare API services efg.com ."
            },
            "shortflag": "",
            "longflag": "",
            "requiresvalue": true
          }
        ]
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720b7a9f0aa360302ac6b"
  },
  "name": "io.github.deepfates/mcp-replicate",
  "id": "46265093-f640-4374-8a0f-0543a6261920",
  "description": "Model Context Protocol server for Replicate's API",
  "repository": {
    "url": "https://github.com/deepfates/mcp-replicate",
    "name": "deepfates/mcp-replicate",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "deepfates",
      "packagename": "unknown",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720b5a9f0aa360302ac53"
  },
  "name": "io.github.hannesj/mcp-openapi-schema",
  "id": "cd4b13e7-a949-412c-ad6d-578a6b43bcd2",
  "description": "OpenAPI Schema Model Context Protocol Server",
  "repository": {
    "url": "https://github.com/hannesj/mcp-openapi-schema",
    "name": "hannesj/mcp-openapi-schema",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "hannesj",
      "packagename": "npm",
      "license": "",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "-y",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          },
          {
            "argument": {
              "name": "mcp-openapi-schema",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 2
          },
          {
            "argument": {
              "name": "/ABSOLUTE/PATH/TO/openapi.yaml",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 3
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720b5a9f0aa360302ac54"
  },
  "name": "io.github.spathodea-network/opencti-mcp",
  "id": "b32a0e35-5829-43b5-a000-5114cd3075cf",
  "description": "",
  "repository": {
    "url": "https://github.com/Spathodea-Network/opencti-mcp",
    "name": "Spathodea-Network/opencti-mcp",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "Spathodea-Network",
      "packagename": "unknown",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720b5a9f0aa360302ac55"
  },
  "name": "io.github.asusevski/opendota-mcp-server",
  "id": "d56adfb0-ca4c-429c-90ea-fae4981718fe",
  "description": "",
  "repository": {
    "url": "https://github.com/asusevski/opendota-mcp-server",
    "name": "asusevski/opendota-mcp-server",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "asusevski",
      "packagename": "unknown",
      "license": "",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "--",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          },
          {
            "argument": {
              "name": "bash",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 2
          },
          {
            "argument": {
              "name": "-c",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 3
          },
          {
            "argument": {
              "name": "cd ~/opendota-mcp-server && source .venv/bin/activate && python src/opendota_server/server.py",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 4
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720b5a9f0aa360302ac56"
  },
  "name": "io.github.shanejonas/openrpc-mpc-server",
  "id": "ee6dc41f-0c0d-46c3-a8e2-a3a3db8c574a",
  "description": "A Model Context Protocol (MCP) server that provides JSON-RPC functionality through OpenRPC.",
  "repository": {
    "url": "https://github.com/shanejonas/openrpc-mpc-server",
    "name": "shanejonas/openrpc-mpc-server",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "shanejonas",
      "packagename": "npm",
      "license": "",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "-y",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          },
          {
            "argument": {
              "name": "openrpc-mcp-server",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 2
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720b5a9f0aa360302ac57"
  },
  "name": "io.github.open-strategy-partners/osp_marketing_tools",
  "id": "fe1031dd-730f-4b89-81ea-03c48208e731",
  "description": "A Model Context Protocol (MCP) server that empowers LLMs to use some of Open Srategy Partners' core writing and product marketing techniques.",
  "repository": {
    "url": "https://github.com/open-strategy-partners/osp_marketing_tools",
    "name": "open-strategy-partners/osp_marketing_tools",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "open-strategy-partners",
      "packagename": "unknown",
      "license": "Creative Commons Attribution Share Alike 4.0 International",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "--from",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          },
          {
            "argument": {
              "name": "git+https://github.com/open-strategy-partners/osp_marketing_tools@main",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 2
          },
          {
            "argument": {
              "name": "osp_marketing_tools",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 3
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720b5a9f0aa360302ac58"
  },
  "name": "io.github.vivekvells/mcp-pandoc",
  "id": "9f499106-bccb-4ac6-a1ee-7e8bcd39f1be",
  "description": "MCP server for document format conversion using pandoc.",
  "repository": {
    "url": "https://github.com/vivekVells/mcp-pandoc",
    "name": "vivekVells/mcp-pandoc",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "vivekVells",
      "packagename": "unknown",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720b5a9f0aa360302ac59"
  },
  "name": "io.github.hungryrobot1/mcp-pif",
  "id": "53cc9872-53bf-4a3a-b5df-629b41745a67",
  "description": "A MCP implementation of the personal intelligence framework (PIF)",
  "repository": {
    "url": "https://github.com/hungryrobot1/MCP-PIF",
    "name": "hungryrobot1/MCP-PIF",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "hungryrobot1",
      "packagename": "unknown",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "path/to/your/mcp-pif/build/index.js",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720b5a9f0aa360302ac5a"
  },
  "name": "io.github.sirmews/mcp-pinecone",
  "id": "d0e5efb9-2921-4b5e-9caf-77a27f5fcd52",
  "description": "Model Context Protocol server to allow for reading and writing from Pinecone. Rudimentary RAG",
  "repository": {
    "url": "https://github.com/sirmews/mcp-pinecone",
    "name": "sirmews/mcp-pinecone",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "sirmews",
      "packagename": "unknown",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720b6a9f0aa360302ac5b"
  },
  "name": "io.github.felores/placid-mcp-server",
  "id": "f501b753-a41a-4367-ba71-24aca1a96b0b",
  "description": "Generate image and video creatives using Placid.app templates in MCP compatible hosts",
  "repository": {
    "url": "https://github.com/felores/placid-mcp-server",
    "name": "felores/placid-mcp-server",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "felores",
      "packagename": "npm",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "@felores/placid-mcp-server",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720b6a9f0aa360302ac5c"
  },
  "name": "io.github.executeautomation/mcp-playwright",
  "id": "477f9410-a384-4f4e-9a7e-77cdb4d462ee",
  "description": "Playwright Model Context Protocol Server - Tool to automate Browsers and APIs in Claude Desktop, Cline, Cursor IDE and More 🔌",
  "repository": {
    "url": "https://github.com/executeautomation/mcp-playwright",
    "name": "executeautomation/mcp-playwright",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "executeautomation",
      "packagename": "npm",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "-y",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          },
          {
            "argument": {
              "name": "@executeautomation/playwright-mcp-server",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 2
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720b6a9f0aa360302ac5d"
  },
  "name": "io.github.shannonlal/mcp-postman",
  "id": "8c572145-88da-48e2-bd77-23369aac8141",
  "description": "MCP Server for running Postman Collections with Newman",
  "repository": {
    "url": "https://github.com/shannonlal/mcp-postman",
    "name": "shannonlal/mcp-postman",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "shannonlal",
      "packagename": "unknown",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "/absolute/path/to/mcp-postman/build/index.js",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720b6a9f0aa360302ac5e"
  },
  "name": "io.github.kenjihikmatullah/productboard-mcp",
  "id": "3e92fb04-cd56-410f-ab74-33401079a301",
  "description": "Integrate the Productboard API into agentic workflows via MCP",
  "repository": {
    "url": "https://github.com/kenjihikmatullah/productboard-mcp",
    "name": "kenjihikmatullah/productboard-mcp",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "kenjihikmatullah",
      "packagename": "npm",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "-y",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          },
          {
            "argument": {
              "name": "productboard-mcp",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 2
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720b6a9f0aa360302ac5f"
  },
  "name": "io.github.pab1it0/prometheus-mcp-server",
  "id": "9750e89b-1a57-4d00-a8c2-b1c80d4e3f07",
  "description": "A Model Context Protocol (MCP) server that enables AI assistants to query and analyze Prometheus metrics through standardized interfaces.",
  "repository": {
    "url": "https://github.com/pab1it0/prometheus-mcp-server",
    "name": "pab1it0/prometheus-mcp-server",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "pab1it0",
      "packagename": "pypi",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "--directory",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          },
          {
            "argument": {
              "name": "<full path to prometheus-mcp-server directory>",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 2
          },
          {
            "argument": {
              "name": "run",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 3
          },
          {
            "argument": {
              "name": "src/prometheus_mcp_server/main.py",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 4
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720b6a9f0aa360302ac60"
  },
  "name": "io.github.dogukanakkaya/pulumi-mcp-server",
  "id": "cc037ee4-822b-46c9-ada8-8667ea6724fe",
  "description": "",
  "repository": {
    "url": "https://github.com/dogukanakkaya/pulumi-mcp-server",
    "name": "dogukanakkaya/pulumi-mcp-server",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "dogukanakkaya",
      "packagename": "unknown",
      "license": "",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720b6a9f0aa360302ac61"
  },
  "name": "io.github.ashiknesin/pushover-mcp",
  "id": "d3f68e24-49cb-467b-b58b-c8eca82d08d4",
  "description": "A MCP implementation for sending notifications via Pushover",
  "repository": {
    "url": "https://github.com/AshikNesin/pushover-mcp",
    "name": "AshikNesin/pushover-mcp",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "AshikNesin",
      "packagename": "npm",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "-y",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          },
          {
            "argument": {
              "name": "pushover-mcp@latest",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 2
          },
          {
            "argument": {
              "name": "start",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 3
          },
          {
            "argument": {
              "name": "--token",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 4
          },
          {
            "argument": {
              "name": "YOUR_TOKEN",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 5
          },
          {
            "argument": {
              "name": "--user",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 6
          },
          {
            "argument": {
              "name": "YOUR_USER",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 7
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720b6a9f0aa360302ac62"
  },
  "name": "io.github.jjsantos01/qgis_mcp",
  "id": "f8663cb0-e236-4853-ab55-231cd44961ed",
  "description": "Model Context Protocol (MCP) that allows LLMs to use QGIS Desktop",
  "repository": {
    "url": "https://github.com/jjsantos01/qgis_mcp",
    "name": "jjsantos01/qgis_mcp",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "jjsantos01",
      "packagename": "pypi",
      "license": "",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "--directory",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          },
          {
            "argument": {
              "name": "/ABSOLUTE/PATH/TO/PARENT/REPO/FOLDER/qgis_mcp/src/qgis_mcp",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 2
          },
          {
            "argument": {
              "name": "run",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 3
          },
          {
            "argument": {
              "name": "qgis_mcp_server.py",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 4
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720b6a9f0aa360302ac63"
  },
  "name": "io.github.gongrzhe/quickchart-mcp-server",
  "id": "f85c658a-76ae-4b96-be12-1004514d687e",
  "description": "A Model Context Protocol server for generating charts using QuickChart.io  . It allows you to create various types of charts through MCP tools.",
  "repository": {
    "url": "https://github.com/GongRzhe/Quickchart-MCP-Server",
    "name": "GongRzhe/Quickchart-MCP-Server",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "GongRzhe",
      "packagename": "unknown",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "/path/to/quickchart-server/build/index.js",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720b6a9f0aa360302ac64"
  },
  "name": "io.github.66julienmartin/mcp-server-qwen_max",
  "id": "12b9de71-a815-40c6-93a3-44769978b285",
  "description": "MCP server for Qwen Max model",
  "repository": {
    "url": "https://github.com/66julienmartin/MCP-server-Qwen_Max",
    "name": "66julienmartin/MCP-server-Qwen_Max",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "66julienmartin",
      "packagename": "unknown",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "/path/to/Qwen_Max/build/index.js",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720b7a9f0aa360302ac65"
  },
  "name": "io.github.kenliao94/mcp-server-rabbitmq",
  "id": "02aef12a-28e0-4ba2-9b39-a3d9dcbb7dc2",
  "description": "MCP server for interacting with RabbitMQ",
  "repository": {
    "url": "https://github.com/kenliao94/mcp-server-rabbitmq",
    "name": "kenliao94/mcp-server-rabbitmq",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "kenliao94",
      "packagename": "unknown",
      "license": "Apache License 2.0",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720b7a9f0aa360302ac66"
  },
  "name": "io.github.apify/mcp-server-rag-web-browser",
  "id": "ca077bd0-5959-4eae-973b-f2d41915603e",
  "description": "A MCP Server for the RAG Web Browser Actor",
  "repository": {
    "url": "https://github.com/apify/mcp-server-rag-web-browser",
    "name": "apify/mcp-server-rag-web-browser",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "apify",
      "packagename": "unknown",
      "license": "Apache License 2.0",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720b7a9f0aa360302ac67"
  },
  "name": "io.github.dschuler36/reaper-mcp-server",
  "id": "c26b21c0-8a40-4cc0-96ec-03edda44e89e",
  "description": "An MCP Server for interacting with Reaper projects.",
  "repository": {
    "url": "https://github.com/dschuler36/reaper-mcp-server",
    "name": "dschuler36/reaper-mcp-server",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "dschuler36",
      "packagename": "unknown",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720b7a9f0aa360302ac68"
  },
  "name": "io.github.gongrzhe/redis-mcp-server",
  "id": "a72ef041-068b-44e8-b36e-0d0f1b1b21c0",
  "description": "A Redis MCP server (pushed to https://github.com/modelcontextprotocol/servers/tree/main/src/redis) implementation for interacting with Redis databases. This server enables LLMs to interact with Redis key-value stores through a set of standardized tools.",
  "repository": {
    "url": "https://github.com/GongRzhe/REDIS-MCP-Server",
    "name": "GongRzhe/REDIS-MCP-Server",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "GongRzhe",
      "packagename": "npm",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "@gongrzhe/server-redis-mcp@1.0.0",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          },
          {
            "argument": {
              "name": "redis://localhost:6379",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 2
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720b7a9f0aa360302ac69"
  },
  "name": "io.github.prajwalnayak7/mcp-server-redis",
  "id": "ca8a2520-6556-4a93-886c-5fbc8a852191",
  "description": "MCP server to interact with Redis Server, AWS Memory DB, etc for caching or other use-cases where in-memory and key-value based storage is appropriate",
  "repository": {
    "url": "https://github.com/prajwalnayak7/mcp-server-redis",
    "name": "prajwalnayak7/mcp-server-redis",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "prajwalnayak7",
      "packagename": "unknown",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720b7a9f0aa360302ac6a"
  },
  "name": "io.github.skydeckai/mcp-server-rememberizer",
  "id": "db02bc53-3a37-4148-a874-d1db2149fdee",
  "description": "An MCP Server to enable global access to Rememberizer",
  "repository": {
    "url": "https://github.com/skydeckai/mcp-server-rememberizer",
    "name": "skydeckai/mcp-server-rememberizer",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "skydeckai",
      "packagename": "unknown",
      "license": "Apache License 2.0",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720b7a9f0aa360302ac6c"
  },
  "name": "io.github.xxxbrian/mcp-rquest",
  "id": "11e3eb6d-d9a1-4b19-a5b1-27f719f4e131",
  "description": "A MCP server providing realistic browser-like HTTP request capabilities with accurate TLS/JA3/JA4 fingerprints for bypassing anti-bot measures. It also supports converting PDF and HTML documents to Markdown for easier processing by LLMs.",
  "repository": {
    "url": "https://github.com/xxxbrian/mcp-rquest",
    "name": "xxxbrian/mcp-rquest",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "xxxbrian",
      "packagename": "unknown",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "mcp-rquest",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720b7a9f0aa360302ac6d"
  },
  "name": "io.github.r-huijts/rijksmuseum-mcp",
  "id": "08404815-9c36-4fdf-9211-6ba715523ddc",
  "description": "Rijksmuseum MCP integration for artwork exploration and analysis",
  "repository": {
    "url": "https://github.com/r-huijts/rijksmuseum-mcp",
    "name": "r-huijts/rijksmuseum-mcp",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "r-huijts",
      "packagename": "npm",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "-y",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          },
          {
            "argument": {
              "name": "mcp-server-rijksmuseum",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 2
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720b8a9f0aa360302ac6e"
  },
  "name": "io.github.jifrozen0110/mcp-riot",
  "id": "3921c6cb-070b-4510-863f-5c837c6e7e6e",
  "description": "League of Legends MCP Server",
  "repository": {
    "url": "https://github.com/jifrozen0110/mcp-riot",
    "name": "jifrozen0110/mcp-riot",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "jifrozen0110",
      "packagename": "unknown",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720b8a9f0aa360302ac6f"
  },
  "name": "io.github.smn2gnt/mcp-salesforce",
  "id": "757d590b-8c8d-4d5d-8871-c3cf1c3dc537",
  "description": "MCP Salesforce connector",
  "repository": {
    "url": "https://github.com/smn2gnt/MCP-Salesforce",
    "name": "smn2gnt/MCP-Salesforce",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "smn2gnt",
      "packagename": "unknown",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720b8a9f0aa360302ac70"
  },
  "name": "io.github.adityak74/mcp-scholarly",
  "id": "16d99ab0-9403-4b7c-8828-23263da7069d",
  "description": "A MCP server to search for accurate academic articles.",
  "repository": {
    "url": "https://github.com/adityak74/mcp-scholarly",
    "name": "adityak74/mcp-scholarly",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "adityak74",
      "packagename": "unknown",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720b8a9f0aa360302ac71"
  },
  "name": "io.github.cyberchitta/scrapling-fetch-mcp",
  "id": "150b0bf5-9bcf-45b6-a410-943ce0b3e85a",
  "description": "Helps AI assistants access text content from bot-protected websites. MCP server that fetches HTML/markdown from sites with anti-automation measures using Scrapling.",
  "repository": {
    "url": "https://github.com/cyberchitta/scrapling-fetch-mcp",
    "name": "cyberchitta/scrapling-fetch-mcp",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "cyberchitta",
      "packagename": "unknown",
      "license": "Apache License 2.0",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "scrapling-fetch-mcp",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720b8a9f0aa360302ac72"
  },
  "name": "io.github.ihor-sokoliuk/mcp-searxng",
  "id": "978dcd47-d9b8-42ce-91c5-e7db96607200",
  "description": "MCP Server for SearXNG",
  "repository": {
    "url": "https://github.com/ihor-sokoliuk/mcp-searxng",
    "name": "ihor-sokoliuk/mcp-searxng",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "ihor-sokoliuk",
      "packagename": "npm",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "-y",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          },
          {
            "argument": {
              "name": "mcp-searxng",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 2
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720b8a9f0aa360302ac73"
  },
  "name": "io.github.stefanoamorelli/sec-edgar-mcp",
  "id": "6bb0c545-9350-4692-ad83-8ee00858dd47",
  "description": "A Model Context Protocol (MCP) Server for SEC EDGAR",
  "repository": {
    "url": "https://github.com/stefanoamorelli/sec-edgar-mcp",
    "name": "stefanoamorelli/sec-edgar-mcp",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "stefanoamorelli",
      "packagename": "unknown",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720b8a9f0aa360302ac74"
  },
  "name": "io.github.osomai/servicenow-mcp",
  "id": "401e96c8-009d-4d97-baf8-9b2ffb275811",
  "description": "MCP Server for ServiceNow",
  "repository": {
    "url": "https://github.com/osomai/servicenow-mcp",
    "name": "osomai/servicenow-mcp",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "osomai",
      "packagename": "unknown",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "-m",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          },
          {
            "argument": {
              "name": "servicenow_mcp.cli",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 2
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720b8a9f0aa360302ac75"
  },
  "name": "io.github.geli2001/shopify-mcp",
  "id": "14714994-64c2-4c08-9dfa-6995bb04424b",
  "description": "MCP server for Shopify api, usable on mcp clients such as Anthropic's Claude and Cursor IDE",
  "repository": {
    "url": "https://github.com/GeLi2001/shopify-mcp",
    "name": "GeLi2001/shopify-mcp",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "GeLi2001",
      "packagename": "npm",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "shopify-mcp",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          },
          {
            "argument": {
              "name": "--accessToken",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 2
          },
          {
            "argument": {
              "name": "<YOUR_ACCESS_TOKEN>",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 3
          },
          {
            "argument": {
              "name": "--domain",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 4
          },
          {
            "argument": {
              "name": "<YOUR_SHOP>.myshopify.com",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 5
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720b8a9f0aa360302ac76"
  },
  "name": "io.github.dvcrn/mcp-server-siri-shortcuts",
  "id": "92bc33d6-b9be-4b59-8cd1-5f834fc26270",
  "description": "MCP for calling Siri Shorcuts from LLMs",
  "repository": {
    "url": "https://github.com/dvcrn/mcp-server-siri-shortcuts",
    "name": "dvcrn/mcp-server-siri-shortcuts",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "dvcrn",
      "packagename": "npm",
      "license": "",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "mcp-server-siri-shortcuts",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720b9a9f0aa360302ac77"
  },
  "name": "io.github.isaacwasserman/mcp-snowflake-server",
  "id": "102ad7fa-735c-4938-858b-29feac41be42",
  "description": "",
  "repository": {
    "url": "https://github.com/isaacwasserman/mcp-snowflake-server",
    "name": "isaacwasserman/mcp-snowflake-server",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "isaacwasserman",
      "packagename": "unknown",
      "license": "GNU General Public License v3.0",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720b9a9f0aa360302ac78"
  },
  "name": "io.github.yeonupark/mcp-soccer-data",
  "id": "10b09de7-6a9e-4de8-8c93-b09d74705c24",
  "description": "An MCP server that provides real-time football data based on the SoccerDataAPI.",
  "repository": {
    "url": "https://github.com/yeonupark/mcp-soccer-data",
    "name": "yeonupark/mcp-soccer-data",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "yeonupark",
      "packagename": "unknown",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720b9a9f0aa360302ac79"
  },
  "name": "io.github.sendaifun/solana-agent-kit",
  "id": "a2faa15e-a8d4-49f4-ab32-f037231044da",
  "description": "connect any ai agents to solana protocols",
  "repository": {
    "url": "https://github.com/sendaifun/solana-agent-kit",
    "name": "sendaifun/solana-agent-kit",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "sendaifun",
      "packagename": "unknown",
      "license": "Apache License 2.0",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720b9a9f0aa360302ac7a"
  },
  "name": "io.github.varunneal/spotify-mcp",
  "id": "1516745d-f5ed-4fa6-b29e-1c3f7b6b1a54",
  "description": "MCP to connect your LLM with Spotify.",
  "repository": {
    "url": "https://github.com/varunneal/spotify-mcp",
    "name": "varunneal/spotify-mcp",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "varunneal",
      "packagename": "unknown",
      "license": "",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720b9a9f0aa360302ac7b"
  },
  "name": "io.github.boston343/starwind-ui-mcp",
  "id": "d721e0a0-c75c-485c-ac40-116a3bfd377f",
  "description": "Local MCP server implementation for Starwind UI that you can use with Cursor, Windsurf, and other AI tools",
  "repository": {
    "url": "https://github.com/starwind-ui/starwind-ui-mcp",
    "name": "starwind-ui/starwind-ui-mcp",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "starwind-ui",
      "packagename": "unknown",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720b9a9f0aa360302ac7c"
  },
  "name": "io.github.atharvagupta2003/mcp-stripe",
  "id": "2ce753f5-badb-4ba4-b999-c191629fc5c0",
  "description": "",
  "repository": {
    "url": "https://github.com/atharvagupta2003/mcp-stripe",
    "name": "atharvagupta2003/mcp-stripe",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "atharvagupta2003",
      "packagename": "unknown",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720b9a9f0aa360302ac7d"
  },
  "name": "io.github.wilsonchenghy/shadertoy-mcp",
  "id": "8f942a32-3462-446d-a4eb-87b0b51e02f5",
  "description": "",
  "repository": {
    "url": "https://github.com/wilsonchenghy/ShaderToy-MCP",
    "name": "wilsonchenghy/ShaderToy-MCP",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "wilsonchenghy",
      "packagename": "unknown",
      "license": "",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720b9a9f0aa360302ac7e"
  },
  "name": "io.github.laksh-star/mcp-server-tmdb",
  "id": "1f306add-9165-428e-bc7b-d37446b67b22",
  "description": "MCP Server with TMDB",
  "repository": {
    "url": "https://github.com/Laksh-star/mcp-server-tmdb",
    "name": "Laksh-star/mcp-server-tmdb",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "Laksh-star",
      "packagename": "unknown",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720b9a9f0aa360302ac7f"
  },
  "name": "io.github.ramxx/mcp-tavily",
  "id": "e2256665-a661-4623-ad8e-924ef08996f1",
  "description": "An MCP server for Tavily's search API",
  "repository": {
    "url": "https://github.com/RamXX/mcp-tavily",
    "name": "RamXX/mcp-tavily",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "RamXX",
      "packagename": "unknown",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720b9a9f0aa360302ac80"
  },
  "name": "io.github.chigwell/telegram-mcp",
  "id": "3b439eb7-78d5-4012-b6c4-fb60f47d47db",
  "description": "",
  "repository": {
    "url": "https://github.com/chigwell/telegram-mcp",
    "name": "chigwell/telegram-mcp",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "chigwell",
      "packagename": "pypi",
      "license": "Apache License 2.0",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "--directory",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          },
          {
            "argument": {
              "name": "/full/path/to/telegram-mcp-server",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 2
          },
          {
            "argument": {
              "name": "run",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 3
          },
          {
            "argument": {
              "name": "main.py",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 4
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720baa9f0aa360302ac81"
  },
  "name": "io.github.chaindead/telegram-mcp",
  "id": "0842af12-5e35-4a94-a2e9-a9b3aa18f2fc",
  "description": "Telegram MCP for managing dialogs, messages, drafts, read statuses, and more.",
  "repository": {
    "url": "https://github.com/chaindead/telegram-mcp",
    "name": "chaindead/telegram-mcp",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "chaindead",
      "packagename": "npm",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "-y",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          },
          {
            "argument": {
              "name": "@chaindead/telegram-mcp",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 2
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720baa9f0aa360302ac82"
  },
  "name": "io.github.gongrzhe/terminal-controller-mcp",
  "id": "6af3aae9-3d57-4b35-ae6c-c5735da12f05",
  "description": "A Model Context Protocol (MCP) server that enables secure terminal command execution, directory navigation, and file system operations through a standardized interface.",
  "repository": {
    "url": "https://github.com/GongRzhe/terminal-controller-mcp",
    "name": "GongRzhe/terminal-controller-mcp",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "GongRzhe",
      "packagename": "unknown",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720baa9f0aa360302ac83"
  },
  "name": "io.github.geli2001/tft-mcp-server",
  "id": "97233b40-5b5b-4fcd-beb6-4604782c3785",
  "description": "",
  "repository": {
    "url": "https://github.com/GeLi2001/tft-mcp-server",
    "name": "GeLi2001/tft-mcp-server",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "GeLi2001",
      "packagename": "npm",
      "license": "",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "mcp-server-tft",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          },
          {
            "argument": {
              "name": "--apiKey",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 2
          },
          {
            "argument": {
              "name": "<YOUR_RIOT_API_KEY>",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 3
          },
          {
            "argument": {
              "name": "--gameName",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 4
          },
          {
            "argument": {
              "name": "<YOUR_GAME_NAME>",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 5
          },
          {
            "argument": {
              "name": "--tagLine",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 6
          },
          {
            "argument": {
              "name": "<YOUR_TAG_LINE>",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 7
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720baa9f0aa360302ac84"
  },
  "name": "io.github.delorenj/mcp-server-ticketmaster",
  "id": "f10d8d01-0465-41c5-8f97-36a586e12d94",
  "description": "A Ticketmaster MCP server that provides query capabilites from the Discovery API",
  "repository": {
    "url": "https://github.com/delorenj/mcp-server-ticketmaster",
    "name": "delorenj/mcp-server-ticketmaster",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "delorenj",
      "packagename": "npm",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "-y",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          },
          {
            "argument": {
              "name": "@delorenj/mcp-server-ticketmaster",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 2
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720baa9f0aa360302ac85"
  },
  "name": "io.github.alexarevalo9/ticktick-mcp-server",
  "id": "9d298c48-b706-433d-a709-60ced13e8c3e",
  "description": "A Model Context Protocol (MCP) server designed to integrate with the TickTick task management platform, enabling intelligent context-aware task operations and automation.",
  "repository": {
    "url": "https://github.com/alexarevalo9/ticktick-mcp-server",
    "name": "alexarevalo9/ticktick-mcp-server",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "alexarevalo9",
      "packagename": "npm",
      "license": "",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "-y",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          },
          {
            "argument": {
              "name": "@alexarevalo.ai/mcp-server-ticktick",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 2
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720baa9f0aa360302ac86"
  },
  "name": "io.github.abhiz123/todoist-mcp-server",
  "id": "1f29d2cc-8a67-44d9-9107-5b706e6c7013",
  "description": "MCP server for Todoist integration enabling natural language task management with Claude",
  "repository": {
    "url": "https://github.com/abhiz123/todoist-mcp-server",
    "name": "abhiz123/todoist-mcp-server",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "abhiz123",
      "packagename": "npm",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "-y",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          },
          {
            "argument": {
              "name": "@abhiz123/todoist-mcp-server",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 2
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720baa9f0aa360302ac87"
  },
  "name": "io.github.suhail-ak-s/mcp-typesense-server",
  "id": "68a2a023-135c-43eb-abba-df01d338209a",
  "description": "",
  "repository": {
    "url": "https://github.com/suhail-ak-s/mcp-typesense-server",
    "name": "suhail-ak-s/mcp-typesense-server",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "suhail-ak-s",
      "packagename": "npm",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "-y",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          },
          {
            "argument": {
              "name": "typesense-mcp-server",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 2
          },
          {
            "argument": {
              "name": "--host",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 3
          },
          {
            "argument": {
              "name": "your-typesense-host",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 4
          },
          {
            "argument": {
              "name": "--port",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 5
          },
          {
            "argument": {
              "name": "8108",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 6
          },
          {
            "argument": {
              "name": "--protocol",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 7
          },
          {
            "argument": {
              "name": "http",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 8
          },
          {
            "argument": {
              "name": "--api-key",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 9
          },
          {
            "argument": {
              "name": "your-api-key",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 10
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720baa9f0aa360302ac88"
  },
  "name": "io.github.gongrzhe/travel-planner-mcp-server",
  "id": "0e086417-1066-456f-8e47-d3eeae2ccf23",
  "description": "",
  "repository": {
    "url": "https://github.com/GongRzhe/TRAVEL-PLANNER-MCP-Server",
    "name": "GongRzhe/TRAVEL-PLANNER-MCP-Server",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "GongRzhe",
      "packagename": "npm",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "@gongrzhe/server-travelplanner-mcp",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720baa9f0aa360302ac89"
  },
  "name": "io.github.ognis1205/mcp-server-unitycatalog",
  "id": "f2bbd615-3c1e-4828-82ef-a6ba76599418",
  "description": "Unity Catalog AI Model Context Protocol Server",
  "repository": {
    "url": "https://github.com/ognis1205/mcp-server-unitycatalog",
    "name": "ognis1205/mcp-server-unitycatalog",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "ognis1205",
      "packagename": "pypi",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "--directory",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          },
          {
            "argument": {
              "name": "/<path to your local git repository>/mcp-server-unitycatalog",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 2
          },
          {
            "argument": {
              "name": "run",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 3
          },
          {
            "argument": {
              "name": "mcp-server-unitycatalog",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 4
          },
          {
            "argument": {
              "name": "--uc_server",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 5
          },
          {
            "argument": {
              "name": "<your unity catalog url>",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 6
          },
          {
            "argument": {
              "name": "--uc_catalog",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 7
          },
          {
            "argument": {
              "name": "<your catalog name>",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 8
          },
          {
            "argument": {
              "name": "--uc_schema",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 9
          },
          {
            "argument": {
              "name": "<your schema name>",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 10
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720baa9f0aa360302ac8a"
  },
  "name": "io.github.codergamester/mcp-unity",
  "id": "1ecc9826-70db-4d7b-9fb3-4fda59ba9dad",
  "description": "MCP Server to integrate Unity Editor game engine with different AI Model clients (e.g. Claude Desktop, Windsurf, Cursor)",
  "repository": {
    "url": "https://github.com/CoderGamester/mcp-unity",
    "name": "CoderGamester/mcp-unity",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "CoderGamester",
      "packagename": "unknown",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "ABSOLUTE/PATH/TO/mcp-unity/Server/build/index.js",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720bba9f0aa360302ac8b"
  },
  "name": "io.github.quazaai/unitymcpintegration",
  "id": "2adfbb89-a233-4703-aec9-5aabec54d793",
  "description": "Enable AI Agents to Control Unity",
  "repository": {
    "url": "https://github.com/quazaai/UnityMCPIntegration",
    "name": "quazaai/UnityMCPIntegration",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "quazaai",
      "packagename": "unknown",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "path-to-project>\\Library\\PackageCache\\com.quaza.unitymcp@d2b8f1260bca\\mcpServer\\mcpServer\\build\\index.js",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720bba9f0aa360302ac8c"
  },
  "name": "io.github.isaacwasserman/mcp-vegalite-server",
  "id": "781716f0-1165-4ee0-8d4f-62cf32316846",
  "description": "",
  "repository": {
    "url": "https://github.com/isaacwasserman/mcp-vegalite-server",
    "name": "isaacwasserman/mcp-vegalite-server",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "isaacwasserman",
      "packagename": "unknown",
      "license": "",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720bba9f0aa360302ac8d"
  },
  "name": "io.github.burningion/video-editing-mcp",
  "id": "c5333b45-f544-4da4-84e0-31f56b118b41",
  "description": "MCP Interface for Video Jungle",
  "repository": {
    "url": "https://github.com/burningion/video-editing-mcp",
    "name": "burningion/video-editing-mcp",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "burningion",
      "packagename": "unknown",
      "license": "",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720bba9f0aa360302ac8e"
  },
  "name": "io.github.mfukushim/map-traveler-mcp",
  "id": "fa44cfde-1980-4d35-a78e-031fc3d90f36",
  "description": "Virtual traveler library for MCP",
  "repository": {
    "url": "https://github.com/mfukushim/map-traveler-mcp",
    "name": "mfukushim/map-traveler-mcp",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "mfukushim",
      "packagename": "npm",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "-y",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          },
          {
            "argument": {
              "name": "@mfukushim/map-traveler-mcp",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 2
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720bba9f0aa360302ac8f"
  },
  "name": "io.github.dinghuazhou/sample-mcp-server-tos",
  "id": "c6c3708e-16c4-4208-89c4-9bd27c34115e",
  "description": "",
  "repository": {
    "url": "https://github.com/dinghuazhou/sample-mcp-server-tos",
    "name": "dinghuazhou/sample-mcp-server-tos",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "dinghuazhou",
      "packagename": "pypi",
      "license": "",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "--directory",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          },
          {
            "argument": {
              "name": "/ABSOLUTE/PATH/TO/PARENT/FOLDER/src/mcp_server_tos",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 2
          },
          {
            "argument": {
              "name": "run",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 3
          },
          {
            "argument": {
              "name": "main.py",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 4
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720bba9f0aa360302ac90"
  },
  "name": "io.github.wanaku-ai/wanaku",
  "id": "0b5ad82f-d31b-4a6a-892c-04b08ba43c68",
  "description": "Wanaku MCP Router",
  "repository": {
    "url": "https://github.com/wanaku-ai/wanaku",
    "name": "wanaku-ai/wanaku",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "wanaku-ai",
      "packagename": "unknown",
      "license": "Apache License 2.0",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720bba9f0aa360302ac91"
  },
  "name": "io.github.kapilduraphe/webflow-mcp-server",
  "id": "cd815989-941e-488b-8bbd-913a33cb74e3",
  "description": "Webflow MCP server",
  "repository": {
    "url": "https://github.com/kapilduraphe/webflow-mcp-server",
    "name": "kapilduraphe/webflow-mcp-server",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "kapilduraphe",
      "packagename": "unknown",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "/ABSOLUTE/PATH/TO/YOUR/build/index.js",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720bba9f0aa360302ac92"
  },
  "name": "io.github.kukapay/whale-tracker-mcp",
  "id": "c71c5f05-b8ab-44f4-8711-ae6fd78754d1",
  "description": "A mcp server for tracking cryptocurrency whale transactions.",
  "repository": {
    "url": "https://github.com/kukapay/whale-tracker-mcp",
    "name": "kukapay/whale-tracker-mcp",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "kukapay",
      "packagename": "unknown",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720bba9f0aa360302ac93"
  },
  "name": "io.github.bharathvaj-ganesan/whois-mcp",
  "id": "d31901fe-a6a8-465f-b53e-45a801774520",
  "description": "MCP Server for whois lookups.",
  "repository": {
    "url": "https://github.com/bharathvaj-ganesan/whois-mcp",
    "name": "bharathvaj-ganesan/whois-mcp",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "bharathvaj-ganesan",
      "packagename": "npm",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "-y",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          },
          {
            "argument": {
              "name": "@bharathvaj/whois-mcp@latest",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 2
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720bca9f0aa360302ac94"
  },
  "name": "io.github.zzaebok/mcp-wikidata",
  "id": "7a9f30a3-74fb-425d-823b-7aa957ebe3d3",
  "description": "A server implementation for Wikidata API using the Model Context Protocol (MCP).",
  "repository": {
    "url": "https://github.com/zzaebok/mcp-wikidata",
    "name": "zzaebok/mcp-wikidata",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "zzaebok",
      "packagename": "unknown",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720bca9f0aa360302ac95"
  },
  "name": "io.github.wildfly-extras/wildfly-mcp",
  "id": "6cd28121-b0fe-4e6b-84eb-0292e35d9332",
  "description": "WildFly MCP server and other tooling to integrate WildFly in AI space",
  "repository": {
    "url": "https://github.com/wildfly-extras/wildfly-mcp",
    "name": "wildfly-extras/wildfly-mcp",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "wildfly-extras",
      "packagename": "unknown",
      "license": "Apache License 2.0",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720bca9f0aa360302ac96"
  },
  "name": "io.github.simonb97/win-cli-mcp-server",
  "id": "2ce3062e-a9d7-4ae3-a85f-c1aee93965d2",
  "description": "Model Context Protocol server for secure command-line interactions on Windows systems",
  "repository": {
    "url": "https://github.com/SimonB97/win-cli-mcp-server",
    "name": "SimonB97/win-cli-mcp-server",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "SimonB97",
      "packagename": "npm",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "-y",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          },
          {
            "argument": {
              "name": "@simonb97/server-win-cli",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 2
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720bda9f0aa360302ac9e"
  },
  "name": "io.github.zubeidhendricks/youtube-mcp-server",
  "id": "184fb07d-d8ca-43f2-8870-28f3ce9037a5",
  "description": "MCP Server for YouTube API, enabling video management, Shorts creation, and advanced analytics",
  "repository": {
    "url": "https://github.com/ZubeidHendricks/youtube-mcp-server",
    "name": "ZubeidHendricks/youtube-mcp-server",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "ZubeidHendricks",
      "packagename": "npm",
      "license": "",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "-y",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          },
          {
            "argument": {
              "name": "@modelcontextprotocol/server-youtube",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 2
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720bca9f0aa360302ac97"
  },
  "name": "io.github.anshumax/world_bank_mcp_server",
  "id": "2603c10d-52d9-4220-9184-56403cb42c84",
  "description": "An implementation of the Model Context Protocol for the World Bank open data API",
  "repository": {
    "url": "https://github.com/anshumax/world_bank_mcp_server",
    "name": "anshumax/world_bank_mcp_server",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "anshumax",
      "packagename": "pypi",
      "license": "",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "--directory",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          },
          {
            "argument": {
              "name": "path/to/world_bank_mcp_server",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 2
          },
          {
            "argument": {
              "name": "run",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 3
          },
          {
            "argument": {
              "name": "world_bank_mcp_server",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 4
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720bca9f0aa360302ac98"
  },
  "name": "io.github.enescinr/twitter-mcp",
  "id": "9daff94f-dc1d-4f30-ab06-45d5528ec80f",
  "description": "A Model Context Protocol server allows to interact with Twitter, enabling posting tweets and searching Twitter.",
  "repository": {
    "url": "https://github.com/EnesCinr/twitter-mcp",
    "name": "EnesCinr/twitter-mcp",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "EnesCinr",
      "packagename": "npm",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "-y",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          },
          {
            "argument": {
              "name": "@enescinar/twitter-mcp",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 2
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720bca9f0aa360302ac99"
  },
  "name": "io.github.vidhupv/x-mcp",
  "id": "33eb174b-1f8e-4e99-acab-b59963ee2072",
  "description": "",
  "repository": {
    "url": "https://github.com/vidhupv/x-mcp",
    "name": "vidhupv/x-mcp",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "vidhupv",
      "packagename": "pypi",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "--directory",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          },
          {
            "argument": {
              "name": "/path/to/x-mcp",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 2
          },
          {
            "argument": {
              "name": "run",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 3
          },
          {
            "argument": {
              "name": "x-mcp",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 4
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720bca9f0aa360302ac9a"
  },
  "name": "io.github.shenghaiwang/xcodebuild",
  "id": "fe776ae1-3ea4-414f-a40d-c86a39b8eaf4",
  "description": "MCP tool for building Xcode iOS workspace/project and feeding back error to LLMs.",
  "repository": {
    "url": "https://github.com/ShenghaiWang/xcodebuild",
    "name": "ShenghaiWang/xcodebuild",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "ShenghaiWang",
      "packagename": "unknown",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720bca9f0aa360302ac9b"
  },
  "name": "io.github.john-zhang-dev/xero-mcp",
  "id": "879fd1d0-d03c-41bf-9821-3ba9995cfd82",
  "description": "A Model Context Protocol server allows Clients to interact with Xero",
  "repository": {
    "url": "https://github.com/john-zhang-dev/xero-mcp",
    "name": "john-zhang-dev/xero-mcp",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "john-zhang-dev",
      "packagename": "npm",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "-y",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          },
          {
            "argument": {
              "name": "xero-mcp@latest",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 2
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720bca9f0aa360302ac9c"
  },
  "name": "io.github.xgenerationlab/xiyan_mcp_server",
  "id": "be50229a-1543-4393-975d-a8751308897e",
  "description": "A Model Context Protocol (MCP) server that enables natural language queries to databases",
  "repository": {
    "url": "https://github.com/XGenerationLab/xiyan_mcp_server",
    "name": "XGenerationLab/xiyan_mcp_server",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "XGenerationLab",
      "packagename": "unknown",
      "license": "Apache License 2.0",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "-m",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          },
          {
            "argument": {
              "name": "xiyan_mcp_server",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 2
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720bca9f0aa360302ac9d"
  },
  "name": "io.github.apeyroux/mcp-xmind",
  "id": "63ef669e-1249-4ad5-8ac0-21334c44118d",
  "description": "",
  "repository": {
    "url": "https://github.com/apeyroux/mcp-xmind",
    "name": "apeyroux/mcp-xmind",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "apeyroux",
      "packagename": "unknown",
      "license": "",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "6807209ea9f0aa360302ab7a"
  },
  "name": "io.github.klavis-ai/klavis",
  "id": "944f3e6f-cad0-4b97-a8fe-99a527b19e7e",
  "description": "Klavis AI (YC X25):  Open Source, easy to use MCPs on Slack, Discord and Web",
  "repository": {
    "url": "https://github.com/Klavis-AI/klavis",
    "name": "Klavis-AI/klavis",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "Klavis-AI",
      "packagename": "unknown",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720bda9f0aa360302ac9f"
  },
  "name": "io.github.isdaniel/mcp_weather_server",
  "id": "fab02df8-db99-4b1f-8cdc-4b10de31f477",
  "description": "",
  "repository": {
    "url": "https://github.com/isdaniel/mcp_weather_server",
    "name": "isdaniel/mcp_weather_server",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "isdaniel",
      "packagename": "unknown",
      "license": "Apache License 2.0",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "mcp_weather_server.py",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720bda9f0aa360302aca0"
  },
  "name": "io.github.zcaceres/easy-mcp",
  "id": "dbe0725c-20cf-4bda-9aa9-ca3ace1b243c",
  "description": "Absurdly easy Model Context Protocol Servers in Typescript",
  "repository": {
    "url": "https://github.com/zcaceres/easy-mcp",
    "name": "zcaceres/easy-mcp",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "zcaceres",
      "packagename": "unknown",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720bda9f0aa360302aca1"
  },
  "name": "io.github.tadata-org/fastapi_mcp",
  "id": "2e0c55b3-c67c-4efd-8c14-626300cacfaa",
  "description": "A zero-configuration tool for automatically exposing FastAPI endpoints as Model Context Protocol (MCP) tools.",
  "repository": {
    "url": "https://github.com/tadata-org/fastapi_mcp",
    "name": "tadata-org/fastapi_mcp",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "tadata-org",
      "packagename": "unknown",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720bda9f0aa360302aca2"
  },
  "name": "io.github.punkpeye/fastmcp",
  "id": "684cda78-1b57-457b-a019-a2b4f7fccafc",
  "description": "A TypeScript framework for building MCP servers.",
  "repository": {
    "url": "https://github.com/punkpeye/fastmcp",
    "name": "punkpeye/fastmcp",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "punkpeye",
      "packagename": "npm",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "tsx",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          },
          {
            "argument": {
              "name": "/PATH/TO/YOUR_PROJECT/src/index.ts",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 2
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720bda9f0aa360302aca3"
  },
  "name": "io.github.strowk/foxy-contexts",
  "id": "86cf86e1-764f-4cba-9c1f-d417b6d93259",
  "description": "Foxy contexts is a library for building context servers supporting Model Context Protocol",
  "repository": {
    "url": "https://github.com/strowk/foxy-contexts",
    "name": "strowk/foxy-contexts",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "strowk",
      "packagename": "unknown",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720bda9f0aa360302aca4"
  },
  "name": "io.github.alibaba/higress",
  "id": "e2fed8b6-85dd-43ab-821f-2cede99c672a",
  "description": "🤖 AI Gateway | AI Native API Gateway",
  "repository": {
    "url": "https://github.com/alibaba/higress",
    "name": "alibaba/higress",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "alibaba",
      "packagename": "unknown",
      "license": "Apache License 2.0",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720bda9f0aa360302aca5"
  },
  "name": "io.github.quarkiverse/quarkus-mcp-server",
  "id": "f1f550ee-b1a7-4288-a78a-c73a95d7895a",
  "description": "This extension enables developers to implement the MCP server features easily.",
  "repository": {
    "url": "https://github.com/quarkiverse/quarkus-mcp-server",
    "name": "quarkiverse/quarkus-mcp-server",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "quarkiverse",
      "packagename": "unknown",
      "license": "Apache License 2.0",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720bda9f0aa360302aca6"
  },
  "name": "io.github.mcpdotdirect/template-mcp-server",
  "id": "2d22a564-2aad-480a-9d19-1d9f4e71db8b",
  "description": "Template to quickly set up your own MCP server ",
  "repository": {
    "url": "https://github.com/mcpdotdirect/template-mcp-server",
    "name": "mcpdotdirect/template-mcp-server",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "mcpdotdirect",
      "packagename": "unknown",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "start",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720bea9f0aa360302aca7"
  },
  "name": "io.github.marimo-team/codemirror-mcp",
  "id": "77182861-e6bf-4c17-9475-6e661d7f8680",
  "description": "CodeMirror extension to hook up a Model Context Provider (MCP)",
  "repository": {
    "url": "https://github.com/marimo-team/codemirror-mcp",
    "name": "marimo-team/codemirror-mcp",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "marimo-team",
      "packagename": "unknown",
      "license": "Apache License 2.0",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720bea9f0aa360302aca8"
  },
  "name": "io.github.badkk/awesome-crypto-mcp-servers",
  "id": "8f1381c8-5031-4f0b-a42d-0c0f48099ed4",
  "description": "A collection of crypto MCP servers.",
  "repository": {
    "url": "https://github.com/badkk/awesome-crypto-mcp-servers",
    "name": "badkk/awesome-crypto-mcp-servers",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "badkk",
      "packagename": "unknown",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720bea9f0aa360302aca9"
  },
  "name": "io.github.appcypher/awesome-mcp-servers",
  "id": "7a76dd4c-9573-4546-88db-44206ca9010e",
  "description": "Awesome MCP Servers - A curated list of Model Context Protocol servers",
  "repository": {
    "url": "https://github.com/appcypher/awesome-mcp-servers",
    "name": "appcypher/awesome-mcp-servers",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "appcypher",
      "packagename": "unknown",
      "license": "",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720bea9f0aa360302acaa"
  },
  "name": "io.github.punkpeye/awesome-mcp-servers",
  "id": "da1e7db4-5a78-4f8b-afbd-78a843d59a7a",
  "description": "A collection of MCP servers.",
  "repository": {
    "url": "https://github.com/punkpeye/awesome-mcp-servers",
    "name": "punkpeye/awesome-mcp-servers",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "punkpeye",
      "packagename": "unknown",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720bea9f0aa360302acab"
  },
  "name": "io.github.wong2/awesome-mcp-servers",
  "id": "68c3b4f4-1c30-4a06-a747-31eddfc298b8",
  "description": "A curated list of Model Context Protocol (MCP) servers",
  "repository": {
    "url": "https://github.com/wong2/awesome-mcp-servers",
    "name": "wong2/awesome-mcp-servers",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "wong2",
      "packagename": "unknown",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720bea9f0aa360302acac"
  },
  "name": "io.github.mcp-router/mcp-router",
  "id": "816e2c00-029d-4489-97eb-2612774ef892",
  "description": "MCP Router enables easily manage your MCP (Model Context Protocol) servers with enhanced security",
  "repository": {
    "url": "https://github.com/mcp-router/mcp-router",
    "name": "mcp-router/mcp-router",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "mcp-router",
      "packagename": "npm",
      "license": "",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [
          {
            "argument": {
              "name": "-y",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 1
          },
          {
            "argument": {
              "name": "mcpr-cli",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 2
          },
          {
            "argument": {
              "name": "connect",
              "description": "Positional argument",
              "isrequired": true,
              "isrepeatable": false,
              "iseditable": false,
              "choices": [],
              "defaultvalue": ""
            },
            "position": 3
          }
        ],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720bea9f0aa360302acad"
  },
  "name": "io.github.mcpx-dev/mcp-badges",
  "id": "4a7e2d37-1f14-4b54-922e-dfa5bb1fc154",
  "description": "Get your projects MCP (Model Context Protocol)  badges",
  "repository": {
    "url": "https://github.com/mcpx-dev/mcp-badges",
    "name": "mcpx-dev/mcp-badges",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "mcpx-dev",
      "packagename": "unknown",
      "license": "",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720bea9f0aa360302acae"
  },
  "name": "io.github.apappascs/mcp-servers-hub",
  "id": "004f78bc-ef24-42c4-9c6f-c8a0aa1aa0d0",
  "description": "Discover the most comprehensive and up-to-date collection of MCP servers in the market. This repository serves as a centralized hub, offering an extensive catalog of open-source and proprietary MCP servers, complete with features, documentation links, and contributors.",
  "repository": {
    "url": "https://github.com/apappascs/mcp-servers-hub",
    "name": "apappascs/mcp-servers-hub",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "apappascs",
      "packagename": "unknown",
      "license": "",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720bea9f0aa360302acaf"
  },
  "name": "io.github.wong2/mcp-cli",
  "id": "d380aaa4-9071-45d1-83f6-cb84e54473db",
  "description": "A CLI inspector for the Model Context Protocol",
  "repository": {
    "url": "https://github.com/wong2/mcp-cli",
    "name": "wong2/mcp-cli",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "wong2",
      "packagename": "unknown",
      "license": "GNU General Public License v3.0",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720bea9f0aa360302acb0"
  },
  "name": "io.github.eqtylab/mcp-guardian",
  "id": "34cd9734-6fe2-4dfa-a97a-58c748e7a9d7",
  "description": "Manage / Proxy / Secure your MCP Servers",
  "repository": {
    "url": "https://github.com/eqtylab/mcp-guardian",
    "name": "eqtylab/mcp-guardian",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "eqtylab",
      "packagename": "unknown",
      "license": "Apache License 2.0",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720bfa9f0aa360302acb1"
  },
  "name": "io.github.pathintegral-institute/mcpm.sh",
  "id": "be54ac13-050b-4379-9a34-a41e852c81a5",
  "description": "CLI MCP package manager & registry for all platforms and all clients. Search & configure MCP servers. Advanced Router & Profile features.",
  "repository": {
    "url": "https://github.com/pathintegral-institute/mcpm.sh",
    "name": "pathintegral-institute/mcpm.sh",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "pathintegral-institute",
      "packagename": "unknown",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720bfa9f0aa360302acb2"
  },
  "name": "io.github.zueai/mcp-manager",
  "id": "2ac05a1c-7e99-4b78-aaf2-d48a06eac003",
  "description": "simple web ui to manage mcp (model context protocol) servers in the claude app",
  "repository": {
    "url": "https://github.com/zueai/mcp-manager",
    "name": "zueai/mcp-manager",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "zueai",
      "packagename": "unknown",
      "license": "MIT License",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720bfa9f0aa360302acb3"
  },
  "name": "io.github.jeamee/mcphub-desktop",
  "id": "c93de787-b612-4457-be54-c880f6ea9886",
  "description": "Desktop APP for Discover and Install MCP Servers",
  "repository": {
    "url": "https://github.com/Jeamee/MCPHub-Desktop",
    "name": "Jeamee/MCPHub-Desktop",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "Jeamee",
      "packagename": "unknown",
      "license": "GNU General Public License v3.0",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
},
{
  "_id": {
    "$oid": "680720bfa9f0aa360302acb4"
  },
  "name": "io.github.chatmcp/mcp-directory",
  "id": "6febbf41-ca0e-486a-9a11-7845e0e20725",
  "description": "directory for Awesome MCP Servers",
  "repository": {
    "url": "https://github.com/chatmcp/mcp-directory",
    "name": "chatmcp/mcp-directory",
    "subfolder": "",
    "branch": "",
    "commit": ""
  },
  "version": "latest",
  "registrycanonical": "",
  "registries": [
    {
      "name": "chatmcp",
      "packagename": "unknown",
      "license": "Apache License 2.0",
      "commandarguments": {
        "subcommands": null,
        "positionalarguments": [],
        "namedarguments": []
      },
      "environmentvariables": []
    }
  ],
  "remotes": []
}]