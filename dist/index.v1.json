[
  {
    "name": "io.github.21st-dev/magic-mcp",
    "description": "It's like v0 but in your Cursor/WindSurf/Cline. 21st dev Magic MCP server for working with your frontend like Magic",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/21st-dev/magic-mcp"
    },
    "packages": [
      {
        "registry": "npm",
        "name": "21st-dev",
        "version": {
          "number": "latest",
          "release_date": "2025-05-08T18:40:38.519Z"
        },
        "command": {
          "name": "-y",
          "positional_arguments": [
            "-y",
            "@21st-dev/magic@latest"
          ],
          "named_arguments": [
            {
              "short_flag": "API_KEY",
              "required": true,
              "description": "Named argument"
            }
          ]
        }
      }
    ]
  },
  {
    "name": "io.github.adfin-engineering/mcp-server-adfin",
    "description": "A Model Context Protocol Server for connecting with Adfin APIs ",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/Adfin-Engineering/mcp-server-adfin"
    }
  },
  {
    "name": "io.github.tinyfish-io/agentql-mcp",
    "description": "Model Context Protocol server that integrates AgentQL's data extraction capabilities.",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/tinyfish-io/agentql-mcp"
    }
  },
  {
    "name": "io.github.agentrpc/agentrpc",
    "description": "A universal RPC layer for AI agents. Connect to any function, any language, any framework, in minutes.",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/agentrpc/agentrpc"
    },
    "packages": [
      {
        "registry": "npm",
        "name": "agentrpc",
        "version": {
          "number": "latest",
          "release_date": "2025-05-08T18:40:38.519Z"
        },
        "command": {
          "name": "-y",
          "positional_arguments": [
            "-y",
            "agentrpc",
            "mcp"
          ]
        }
      }
    ]
  },
  {
    "name": "io.github.aiven-open/mcp-aiven",
    "description": "Model Context Protocol server for Aiven",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/Aiven-Open/mcp-aiven"
    },
    "packages": [
      {
        "registry": "pypi",
        "name": "Aiven-Open",
        "version": {
          "number": "latest",
          "release_date": "2025-05-08T18:40:38.519Z"
        },
        "command": {
          "name": "--directory",
          "positional_arguments": [
            "--directory",
            "$REPOSITORY_DIRECTORY",
            "run",
            "--with-editable",
            "$REPOSITORY_DIRECTORY",
            "--python",
            "3.13",
            "mcp-aiven"
          ]
        }
      }
    ]
  },
  {
    "name": "io.github.apache/iotdb-mcp-server",
    "description": "Apache IoTDB MCP Server",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/apache/iotdb-mcp-server"
    },
    "packages": [
      {
        "registry": "pypi",
        "name": "apache",
        "version": {
          "number": "latest",
          "release_date": "2025-05-08T18:40:38.519Z"
        },
        "command": {
          "name": "--directory",
          "positional_arguments": [
            "--directory",
            "YOUR_REPO_PATH/src/iotdb_mcp_server",
            "run",
            "server.py"
          ]
        }
      }
    ]
  },
  {
    "name": "io.github.apache/iotdb",
    "description": "Apache IoTDB",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/apache/iotdb"
    }
  },
  {
    "name": "io.github.apify/actors-mcp-server",
    "description": "Model Context Protocol (MCP) Server for Apify's Actors",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/apify/actors-mcp-server"
    }
  },
  {
    "name": "io.github.apimatic/apimatic-validator-mcp",
    "description": "APIMatic Validator MCP Server for validating OpenAPI specs via APIMatic's API with MCP",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/apimatic/apimatic-validator-mcp"
    }
  },
  {
    "name": "io.github.datastax/astra-db-mcp",
    "description": "An MCP server for Astra DB workloads",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/datastax/astra-db-mcp"
    },
    "packages": [
      {
        "registry": "npm",
        "name": "datastax",
        "version": {
          "number": "latest",
          "release_date": "2025-05-08T18:40:38.519Z"
        },
        "command": {
          "name": "-y",
          "positional_arguments": [
            "-y",
            "@datastax/astra-db-mcp"
          ]
        }
      }
    ]
  },
  {
    "name": "io.github.atlanhq/agent-toolkit",
    "description": "Atlan AI Agent Toolkit",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/atlanhq/agent-toolkit"
    }
  },
  {
    "name": "io.github.audienseco/mcp-audiense-insights",
    "description": "Audiense Insights MCP Server is a server based on the Model Context Protocol (MCP) that allows Claude and other MCP-compatible clients to interact with your Audiense Insights account",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/AudienseCo/mcp-audiense-insights"
    }
  },
  {
    "name": "io.github.awslabs/mcp",
    "description": "AWS MCP Servers — specialized MCP servers that bring AWS best practices directly to your development workflow",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/awslabs/mcp"
    }
  },
  {
    "name": "io.github.axiomhq/mcp-server-axiom",
    "description": "Axiom Model Context Protocol Server",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/axiomhq/mcp-server-axiom"
    }
  },
  {
    "name": "io.github.bankless/onchain-mcp",
    "description": "Bringing the bankless onchain API to MCP",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/Bankless/onchain-mcp"
    },
    "packages": [
      {
        "registry": "npm",
        "name": "Bankless",
        "version": {
          "number": "latest",
          "release_date": "2025-05-08T18:40:38.519Z"
        },
        "command": {
          "name": "@bankless/onchain-mcp",
          "positional_arguments": [
            "@bankless/onchain-mcp"
          ]
        }
      }
    ]
  },
  {
    "name": "io.github.ahnlabio/bicscan-mcp",
    "description": "BICScan MCP Server",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/ahnlabio/bicscan-mcp"
    }
  },
  {
    "name": "io.github.bitrise-io/bitrise-mcp",
    "description": "MCP Server for the Bitrise API, enabling app management, build operations, artifact management and more.",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/bitrise-io/bitrise-mcp"
    }
  },
  {
    "name": "io.github.box-community/mcp-server-box",
    "description": "An MCP server capable of interacting with the Box API",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/box-community/mcp-server-box"
    },
    "packages": [
      {
        "registry": "pypi",
        "name": "box-community",
        "version": {
          "number": "latest",
          "release_date": "2025-05-08T18:40:38.519Z"
        },
        "command": {
          "name": "--directory",
          "positional_arguments": [
            "--directory",
            "/Users/anovotny/Desktop/mcp-server-box",
            "run",
            "src/mcp_server_box.py"
          ]
        }
      }
    ]
  },
  {
    "name": "io.github.browserbase/mcp-server-browserbase",
    "description": "Allow LLMs to control a browser with Browserbase and Stagehand",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/browserbase/mcp-server-browserbase"
    }
  },
  {
    "name": "io.github.chargebee/agentkit",
    "description": "Seamlessly integrate AI agents with Chargebee using AgentKit for smarter billing and subscription workflows.",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/chargebee/agentkit"
    }
  },
  {
    "name": "io.github.chroma-core/chroma-mcp",
    "description": "A Model Context Protocol (MCP) server implementation that provides database capabilities for Chroma",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/chroma-core/chroma-mcp"
    }
  },
  {
    "name": "io.github.chronulusai/chronulus-mcp",
    "description": "MCP Server for Chronulus AI Forecasting and Prediction Agents",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/ChronulusAI/chronulus-mcp"
    }
  },
  {
    "name": "io.github.circleci-public/mcp-server-circleci",
    "description": "A specialized server implementation for the Model Context Protocol (MCP) designed to integrate with CircleCI's development workflow. This project serves as a bridge between CircleCI's infrastructure and the Model Context Protocol, enabling enhanced AI-powered development experiences.",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/CircleCI-Public/mcp-server-circleci"
    }
  },
  {
    "name": "io.github.clickhouse/mcp-clickhouse",
    "description": "io.github.clickhouse/mcp-clickhouse",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/ClickHouse/mcp-clickhouse"
    },
    "packages": [
      {
        "registry": "pypi",
        "name": "ClickHouse",
        "version": {
          "number": "latest",
          "release_date": "2025-05-08T18:40:38.519Z"
        },
        "command": {
          "name": "run",
          "positional_arguments": [
            "run",
            "--with",
            "mcp-clickhouse",
            "--python",
            "3.13",
            "mcp-clickhouse"
          ]
        }
      }
    ]
  },
  {
    "name": "io.github.cloudflare/mcp-server-cloudflare",
    "description": "io.github.cloudflare/mcp-server-cloudflare",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/cloudflare/mcp-server-cloudflare"
    }
  },
  {
    "name": "io.github.codacy/codacy-mcp-server",
    "description": "Codacy's MCP Server implementation",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/codacy/codacy-mcp-server"
    },
    "packages": [
      {
        "registry": "npm",
        "name": "codacy",
        "version": {
          "number": "latest",
          "release_date": "2025-05-08T18:40:38.519Z"
        },
        "command": {
          "name": "-y",
          "positional_arguments": [
            "-y",
            "@codacy/codacy-mcp"
          ]
        }
      }
    ]
  },
  {
    "name": "io.github.codelogicincengineering/codelogic-mcp-server",
    "description": "An MCP Server to utilize Codelogic's rich software dependency data in your AI programming assistant.",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/CodeLogicIncEngineering/codelogic-mcp-server"
    }
  },
  {
    "name": "io.github.comet-ml/opik-mcp",
    "description": "Model Context Protocol (MCP) implementation for Opik enabling seamless IDE integration and unified access to prompts, projects, traces, and metrics. ",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/comet-ml/opik-mcp"
    }
  },
  {
    "name": "io.github.comet-ml/opik",
    "description": "Debug, evaluate, and monitor your LLM applications, RAG systems, and agentic workflows with comprehensive tracing, automated evaluations, and production-ready dashboards.",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/comet-ml/opik"
    }
  },
  {
    "name": "io.github.its-dart/dart-mcp-server",
    "description": "Dart AI Model Context Protocol (MCP) server",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/its-dart/dart-mcp-server"
    },
    "packages": [
      {
        "registry": "npm",
        "name": "its-dart",
        "version": {
          "number": "latest",
          "release_date": "2025-05-08T18:40:38.519Z"
        },
        "command": {
          "name": "-y",
          "positional_arguments": [
            "-y",
            "dart-mcp-server"
          ]
        }
      }
    ]
  },
  {
    "name": "io.github.devhub/devhub-cms-mcp",
    "description": "DevHub CMS LLM integration through the Model Context Protocol",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/devhub/devhub-cms-mcp"
    }
  },
  {
    "name": "io.github.e2b-dev/mcp-server",
    "description": "Giving Claude ability to run code with E2B via MCP (Model Context Protocol)",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/e2b-dev/mcp-server"
    }
  },
  {
    "name": "io.github.edubase/mcp",
    "description": "The EduBase MCP server enables Claude and other LLMs to interact with EduBase's comprehensive e-learning platform through the Model Context Protocol (MCP).",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/EduBase/MCP"
    }
  },
  {
    "name": "io.github.elastic/mcp-server-elasticsearch",
    "description": "io.github.elastic/mcp-server-elasticsearch",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/elastic/mcp-server-elasticsearch"
    },
    "packages": [
      {
        "registry": "npm",
        "name": "elastic",
        "version": {
          "number": "latest",
          "release_date": "2025-05-08T18:40:38.519Z"
        },
        "command": {
          "name": "-y",
          "positional_arguments": [
            "-y",
            "@elastic/mcp-server-elasticsearch"
          ]
        }
      }
    ]
  },
  {
    "name": "io.github.esignaturescom/mcp-server-esignatures",
    "description": "MCP server for eSignatures (https://esignatures.com)",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/esignaturescom/mcp-server-esignatures"
    }
  },
  {
    "name": "io.github.exa-labs/exa-mcp-server",
    "description": "Claude can perform Web Search | Exa with MCP (Model Context Protocol)",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/exa-labs/exa-mcp-server"
    },
    "packages": [
      {
        "registry": "npm",
        "name": "exa-labs",
        "version": {
          "number": "latest",
          "release_date": "2025-05-08T18:40:38.519Z"
        },
        "command": {
          "name": "/path/to/exa-mcp-server/build/index.js",
          "positional_arguments": [
            "/path/to/exa-mcp-server/build/index.js"
          ]
        }
      }
    ]
  },
  {
    "name": "io.github.fewsats/fewsats-mcp",
    "description": "Fewsats MCP server",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/Fewsats/fewsats-mcp"
    }
  },
  {
    "name": "io.github.fibery-inc/fibery-mcp-server",
    "description": "io.github.fibery-inc/fibery-mcp-server",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/Fibery-inc/fibery-mcp-server"
    },
    "packages": [
      {
        "registry": "pypi",
        "name": "Fibery-inc",
        "version": {
          "number": "latest",
          "release_date": "2025-05-08T18:40:38.519Z"
        },
        "command": {
          "name": "tool",
          "positional_arguments": [
            "tool",
            "run",
            "fibery-mcp-server",
            "--fibery-host",
            "your-domain.fibery.io",
            "--fibery-api-token",
            "your-api-token"
          ]
        }
      }
    ]
  },
  {
    "name": "io.github.financial-datasets/mcp-server",
    "description": "An MCP server for interacting with the Financial Datasets stock market API.",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/financial-datasets/mcp-server"
    }
  },
  {
    "name": "io.github.mendableai/firecrawl-mcp-server",
    "description": "Official Firecrawl MCP Server - Adds powerful web scraping to Cursor, Claude and any other LLM clients.",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/mendableai/firecrawl-mcp-server"
    },
    "packages": [
      {
        "registry": "npm",
        "name": "mendableai",
        "version": {
          "number": "latest",
          "release_date": "2025-05-08T18:40:38.519Z"
        },
        "command": {
          "name": "-y",
          "positional_arguments": [
            "-y",
            "firecrawl-mcp"
          ]
        }
      }
    ]
  },
  {
    "name": "io.github.fireproof-storage/mcp-database-server",
    "description": "Store and load JSON documents from LLM tool use",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/fireproof-storage/mcp-database-server"
    }
  },
  {
    "name": "io.github.oschina/mcp-gitee",
    "description": "mcp-gitee is a Model Context Protocol (MCP) server implementation for Gitee. It provides a set of tools that interact with Gitee's API, allowing AI assistants to manage repository, issues, pull requests, etc.",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/oschina/mcp-gitee"
    }
  },
  {
    "name": "io.github.gotohuman/gotohuman-mcp-server",
    "description": "io.github.gotohuman/gotohuman-mcp-server",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/gotohuman/gotohuman-mcp-server"
    }
  },
  {
    "name": "io.github.grafana/mcp-grafana",
    "description": "MCP server for Grafana",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/grafana/mcp-grafana"
    }
  },
  {
    "name": "io.github.graphlit/graphlit-mcp-server",
    "description": "Model Context Protocol (MCP) Server for Graphlit Platform",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/graphlit/graphlit-mcp-server"
    }
  },
  {
    "name": "io.github.greptimeteam/greptimedb-mcp-server",
    "description": "A Model Context Protocol (MCP) server implementation for GreptimeDB",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/GreptimeTeam/greptimedb-mcp-server"
    },
    "packages": [
      {
        "registry": "pypi",
        "name": "GreptimeTeam",
        "version": {
          "number": "latest",
          "release_date": "2025-05-08T18:40:38.519Z"
        },
        "command": {
          "name": "--directory",
          "positional_arguments": [
            "--directory",
            "/path/to/greptimedb-mcp-server",
            "run",
            "-m",
            "greptimedb_mcp_server.server"
          ]
        }
      }
    ]
  },
  {
    "name": "io.github.greptimeteam/greptimedb",
    "description": "An open-source, cloud-native, unified observability database for metrics, logs and traces, supporting SQL/PromQL/Streaming. Available on GreptimeCloud.",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/GreptimeTeam/greptimedb"
    }
  },
  {
    "name": "io.github.heroku/heroku-mcp-server",
    "description": "Heroku Platform MCP Server",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/heroku/heroku-mcp-server"
    }
  },
  {
    "name": "io.github.aliyun/alibabacloud-hologres-mcp-server",
    "description": "io.github.aliyun/alibabacloud-hologres-mcp-server",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/aliyun/alibabacloud-hologres-mcp-server"
    }
  },
  {
    "name": "io.github.hyperbrowserai/mcp",
    "description": "A MCP server implementation for hyperbrowser",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/hyperbrowserai/mcp"
    },
    "packages": [
      {
        "registry": "npm",
        "name": "hyperbrowserai",
        "version": {
          "number": "latest",
          "release_date": "2025-05-08T18:40:38.519Z"
        },
        "command": {
          "name": "-y",
          "positional_arguments": [
            "-y",
            "hyperbrowser-mcp"
          ]
        }
      }
    ]
  },
  {
    "name": "io.github.ibm/wxflows",
    "description": "Examples and tutorials for building AI applications with watsonx.ai Flows Engine",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/IBM/wxflows"
    }
  },
  {
    "name": "io.github.jamsocket/forevervm",
    "description": "Securely run AI-generated code in stateful sandboxes that run forever.",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/jamsocket/forevervm"
    }
  },
  {
    "name": "io.github.elie222/inbox-zero",
    "description": "AI personal assistant for email. Open source app to help you reach inbox zero fast.",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/elie222/inbox-zero"
    }
  },
  {
    "name": "io.github.inkeep/mcp-server-python",
    "description": "Inkeep MCP Server",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/inkeep/mcp-server-python"
    }
  },
  {
    "name": "io.github.integration-app/mcp-server",
    "description": "io.github.integration-app/mcp-server",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/integration-app/mcp-server"
    },
    "packages": [
      {
        "registry": "npm",
        "name": "integration-app",
        "version": {
          "number": "latest",
          "release_date": "2025-05-08T18:40:38.519Z"
        },
        "command": {
          "name": "-y",
          "positional_arguments": [
            "-y",
            "@integration-app/mcp-server"
          ]
        }
      }
    ]
  },
  {
    "name": "io.github.jetbrains/mcp-jetbrains",
    "description": "A model context protocol server to work with JetBrains IDEs: IntelliJ, PyCharm, WebStorm, etc. Also, works with Android Studio",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/JetBrains/mcp-jetbrains"
    },
    "packages": [
      {
        "registry": "npm",
        "name": "JetBrains",
        "version": {
          "number": "latest",
          "release_date": "2025-05-08T18:40:38.519Z"
        },
        "command": {
          "name": "-y",
          "positional_arguments": [
            "-y",
            "@jetbrains/mcp-proxy"
          ]
        }
      }
    ]
  },
  {
    "name": "io.github.kagisearch/kagimcp",
    "description": "A Model Context Protocol (MCP) server for Kagi search & other tools.",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/kagisearch/kagimcp"
    }
  },
  {
    "name": "io.github.keboola/keboola-mcp-server",
    "description": "io.github.keboola/keboola-mcp-server",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/keboola/keboola-mcp-server"
    }
  },
  {
    "name": "io.github.translated/lara-mcp",
    "description": "io.github.translated/lara-mcp",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/translated/lara-mcp"
    },
    "packages": [
      {
        "registry": "npm",
        "name": "translated",
        "version": {
          "number": "latest",
          "release_date": "2025-05-08T18:40:38.519Z"
        },
        "command": {
          "name": "-y",
          "positional_arguments": [
            "-y",
            "@translated/lara-mcp@latest"
          ]
        }
      }
    ]
  },
  {
    "name": "io.github.pydantic/logfire-mcp",
    "description": "The Logfire MCP Server is here! :tada:",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/pydantic/logfire-mcp"
    }
  },
  {
    "name": "io.github.langfuse/mcp-server-langfuse",
    "description": "Model Context Protocol (MCP) Server for Langfuse Prompt Management. This server allows you to access and manage your Langfuse prompts through the Model Context Protocol.",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/langfuse/mcp-server-langfuse"
    }
  },
  {
    "name": "io.github.lingodotdev/lingo.dev",
    "description": "⚡️ Open-source AI-powered CLI for web & mobile localization. Bring your own LLM or use Lingo.dev-managed localization engine.",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/lingodotdev/lingo.dev"
    }
  },
  {
    "name": "io.github.mailgun/mailgun-mcp-server",
    "description": "Implementation of Model Context Protocol server for Mailgun APIs",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/mailgun/mailgun-mcp-server"
    }
  },
  {
    "name": "io.github.integromat/make-mcp-server",
    "description": "Make MCP Server",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/integromat/make-mcp-server"
    },
    "packages": [
      {
        "registry": "npm",
        "name": "integromat",
        "version": {
          "number": "latest",
          "release_date": "2025-05-08T18:40:38.519Z"
        },
        "command": {
          "name": "-y",
          "positional_arguments": [
            "-y",
            "@makehq/mcp-server"
          ]
        }
      }
    ]
  },
  {
    "name": "io.github.meilisearch/meilisearch-mcp",
    "description": "A Model Context Protocol (MCP) server for interacting with Meilisearch through LLM interfaces.",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/meilisearch/meilisearch-mcp"
    }
  },
  {
    "name": "io.github.metoro-io/metoro-mcp-server",
    "description": "Metoro MCP Server",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/metoro-io/metoro-mcp-server"
    }
  },
  {
    "name": "io.github.zilliztech/mcp-server-milvus",
    "description": "Model Context Protocol Servers for Milvus",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/zilliztech/mcp-server-milvus"
    }
  },
  {
    "name": "io.github.momentohq/mcp-momento",
    "description": "A model context protocol server for Momento",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/momentohq/mcp-momento"
    },
    "packages": [
      {
        "registry": "npm",
        "name": "momentohq",
        "version": {
          "number": "latest",
          "release_date": "2025-05-08T18:40:38.519Z"
        },
        "command": {
          "name": "-y",
          "positional_arguments": [
            "-y",
            "@gomomento/mcp-momento"
          ]
        }
      }
    ]
  },
  {
    "name": "io.github.rember/rember-mcp",
    "description": "A Model Context Protocol (MCP) server for Rember.",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/rember/rember-mcp"
    },
    "packages": [
      {
        "registry": "npm",
        "name": "rember",
        "version": {
          "number": "latest",
          "release_date": "2025-05-08T18:40:38.519Z"
        },
        "command": {
          "name": "-y",
          "positional_arguments": [
            "-y",
            "@getrember/mcp"
          ],
          "named_arguments": [
            {
              "short_flag": "--api-key",
              "required": true,
              "description": "Named argument"
            }
          ]
        }
      }
    ]
  },
  {
    "name": "io.github.motherduckdb/mcp-server-motherduck",
    "description": "MCP server for DuckDB and MotherDuck",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/motherduckdb/mcp-server-motherduck"
    }
  },
  {
    "name": "io.github.needle-ai/needle-mcp",
    "description": "Integration of Needle in modelcontextprotocol",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/needle-ai/needle-mcp"
    },
    "packages": [
      {
        "registry": "pypi",
        "name": "needle-ai",
        "version": {
          "number": "latest",
          "release_date": "2025-05-08T18:40:38.519Z"
        },
        "command": {
          "name": "--directory",
          "positional_arguments": [
            "--directory",
            "/path/to/needle-mcp",
            "run",
            "needle-mcp"
          ]
        }
      }
    ]
  },
  {
    "name": "io.github.neo4j-contrib/mcp-neo4j",
    "description": "Model Context Protocol with Neo4j",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/neo4j-contrib/mcp-neo4j"
    }
  },
  {
    "name": "io.github.neondatabase/mcp-server-neon",
    "description": "MCP server for interacting with Neon Management API and databases",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/neondatabase-labs/mcp-server-neon"
    },
    "packages": [
      {
        "registry": "npm",
        "name": "neondatabase-labs",
        "version": {
          "number": "latest",
          "release_date": "2025-05-08T18:40:38.519Z"
        },
        "command": {
          "name": "-y",
          "positional_arguments": [
            "-y",
            "mcp-remote",
            "https://mcp.neon.tech/sse"
          ]
        }
      }
    ]
  },
  {
    "name": "io.github.oceanbase/mcp-oceanbase",
    "description": "MCP Server for OceanBase database and its tools",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/oceanbase/mcp-oceanbase"
    }
  },
  {
    "name": "io.github.octagonai/octagon-mcp-server",
    "description": "A free MCP server to analyze and extract insights from public filings, earnings transcripts, financial metrics, stock market data, private market transactions, and deep web-based research within Claude Desktop and other popular MCP clients.",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/OctagonAI/octagon-mcp-server"
    }
  },
  {
    "name": "io.github.oxylabs/oxylabs-mcp",
    "description": "Official Oxylabs MCP integration",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/oxylabs/oxylabs-mcp"
    }
  },
  {
    "name": "io.github.riza-io/riza-mcp",
    "description": "io.github.riza-io/riza-mcp",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/riza-io/riza-mcp"
    },
    "packages": [
      {
        "registry": "npm",
        "name": "riza-io",
        "version": {
          "number": "latest",
          "release_date": "2025-05-08T18:40:38.519Z"
        },
        "command": {
          "name": "@riza-io/riza-mcp",
          "positional_arguments": [
            "@riza-io/riza-mcp"
          ]
        }
      }
    ]
  },
  {
    "name": "io.github.paddlehq/paddle-mcp-server",
    "description": "Interact with the Paddle API using AI assistants like Claude, or in AI-powered IDEs like Cursor. Manage product catalog, billing and subscriptions, and reports.",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/PaddleHQ/paddle-mcp-server"
    },
    "packages": [
      {
        "registry": "npm",
        "name": "PaddleHQ",
        "version": {
          "number": "latest",
          "release_date": "2025-05-08T18:40:38.519Z"
        },
        "command": {
          "name": "-y",
          "positional_arguments": [
            "-y",
            "@paddle/paddle-mcp"
          ],
          "named_arguments": [
            {
              "short_flag": "--api-key",
              "required": true,
              "description": "Named argument"
            },
            {
              "short_flag": "--environment",
              "required": true,
              "description": "Named argument"
            }
          ]
        }
      }
    ]
  },
  {
    "name": "io.github.ppl-ai/modelcontextprotocol",
    "description": "A Model Context Protocol Server connector for Perplexity API, to enable web search without leaving the MCP ecosystem.",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/ppl-ai/modelcontextprotocol"
    },
    "packages": [
      {
        "registry": "docker",
        "name": "ppl-ai",
        "version": {
          "number": "latest",
          "release_date": "2025-05-08T18:40:38.519Z"
        },
        "command": {
          "name": "run",
          "positional_arguments": [
            "run",
            "-i",
            "--rm",
            "-e",
            "PERPLEXITY_API_KEY",
            "mcp/perplexity-ask"
          ]
        }
      }
    ]
  },
  {
    "name": "io.github.redis/mcp-redis",
    "description": "The official Redis MCP Server is a natural language interface designed for agentic applications to manage and search data in Redis efficiently",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/redis/mcp-redis"
    }
  },
  {
    "name": "io.github.redis/mcp-redis-cloud",
    "description": "io.github.redis/mcp-redis-cloud",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/redis/mcp-redis-cloud"
    }
  },
  {
    "name": "io.github.qdrant/mcp-server-qdrant",
    "description": "An official Qdrant Model Context Protocol (MCP) server implementation",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/qdrant/mcp-server-qdrant"
    }
  },
  {
    "name": "io.github.ramp-public/ramp-mcp",
    "description": "ramp_mcp",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/ramp-public/ramp_mcp"
    }
  },
  {
    "name": "io.github.mindscapehq/mcp-server-raygun",
    "description": "io.github.mindscapehq/mcp-server-raygun",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/MindscapeHQ/mcp-server-raygun"
    },
    "packages": [
      {
        "registry": "npm",
        "name": "MindscapeHQ",
        "version": {
          "number": "latest",
          "release_date": "2025-05-08T18:40:38.519Z"
        },
        "command": {
          "name": "-y",
          "positional_arguments": [
            "-y",
            "@raygun.io/mcp-server-raygun"
          ]
        }
      }
    ]
  },
  {
    "name": "io.github.fatwang2/search1api-mcp",
    "description": "io.github.fatwang2/search1api-mcp",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/fatwang2/search1api-mcp"
    },
    "packages": [
      {
        "registry": "npm",
        "name": "fatwang2",
        "version": {
          "number": "latest",
          "release_date": "2025-05-08T18:40:38.519Z"
        },
        "command": {
          "name": "-y",
          "positional_arguments": [
            "-y",
            "search1api-mcp"
          ]
        }
      }
    ]
  },
  {
    "name": "io.github.screenshotone/mcp",
    "description": "A simple implementation of an MCP server for the ScreenshotOne API",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/screenshotone/mcp"
    }
  },
  {
    "name": "io.github.semgrep/mcp",
    "description": "A MCP server for using Semgrep to scan code for security vulnerabilities.",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/semgrep/mcp"
    }
  },
  {
    "name": "io.github.singlestore-labs/mcp-server-singlestore",
    "description": "MCP server for interacting with SingleStore Management API and services",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/singlestore-labs/mcp-server-singlestore"
    }
  },
  {
    "name": "io.github.starrocks/mcp-server-starrocks",
    "description": "StarRocks MCP (Model Context Protocol) Server",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/StarRocks/mcp-server-starrocks"
    },
    "packages": [
      {
        "registry": "pypi",
        "name": "StarRocks",
        "version": {
          "number": "latest",
          "release_date": "2025-05-08T18:40:38.520Z"
        },
        "command": {
          "name": "run",
          "positional_arguments": [
            "run",
            "--with",
            "mcp-server-starrocks",
            "mcp-server-starrocks"
          ]
        }
      }
    ]
  },
  {
    "name": "io.github.stripe/agent-toolkit",
    "description": "Python and TypeScript library for integrating the Stripe API into agentic workflows",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/stripe/agent-toolkit"
    }
  },
  {
    "name": "io.github.tavily-ai/tavily-mcp",
    "description": "io.github.tavily-ai/tavily-mcp",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/tavily-ai/tavily-mcp"
    },
    "packages": [
      {
        "registry": "npm",
        "name": "tavily-ai",
        "version": {
          "number": "latest",
          "release_date": "2025-05-08T18:40:38.520Z"
        },
        "command": {
          "name": "-y",
          "positional_arguments": [
            "-y",
            "tavily-mcp@0.1.4"
          ]
        }
      }
    ]
  },
  {
    "name": "io.github.thirdweb-dev/ai",
    "description": "io.github.thirdweb-dev/ai",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/thirdweb-dev/ai"
    }
  },
  {
    "name": "io.github.tinybirdco/mcp-tinybird",
    "description": "io.github.tinybirdco/mcp-tinybird",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/tinybirdco/mcp-tinybird"
    }
  },
  {
    "name": "io.github.unifai-network/unifai-mcp-server",
    "description": "io.github.unifai-network/unifai-mcp-server",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/unifai-network/unifai-mcp-server"
    }
  },
  {
    "name": "io.github.unstructured-io/uns-mcp",
    "description": "io.github.unstructured-io/uns-mcp",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/Unstructured-IO/UNS-MCP"
    }
  },
  {
    "name": "io.github.vectorize-io/vectorize-mcp-server",
    "description": "Official Vectorize MCP Server",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/vectorize-io/vectorize-mcp-server"
    },
    "packages": [
      {
        "registry": "npm",
        "name": "vectorize-io",
        "version": {
          "number": "latest",
          "release_date": "2025-05-08T18:40:38.520Z"
        },
        "command": {
          "name": "-y",
          "positional_arguments": [
            "-y",
            "@vectorize-io/vectorize-mcp-server@latest"
          ]
        }
      }
    ]
  },
  {
    "name": "io.github.verodat/verodat-mcp-server",
    "description": "Verodat MCP Server Implementation",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/Verodat/verodat-mcp-server"
    }
  },
  {
    "name": "io.github.veyrax/veyrax-mcp",
    "description": "io.github.veyrax/veyrax-mcp",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/VeyraX/veyrax-mcp"
    }
  },
  {
    "name": "io.github.xeroapi/xero-mcp-server",
    "description": "An MCP server that integrates with the MCP protocol. https://modelcontextprotocol.io/introduction",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/XeroAPI/xero-mcp-server"
    },
    "packages": [
      {
        "registry": "npm",
        "name": "XeroAPI",
        "version": {
          "number": "latest",
          "release_date": "2025-05-08T18:40:38.520Z"
        },
        "command": {
          "name": "-y",
          "positional_arguments": [
            "-y",
            "@xeroapi/xero-mcp-server@latest"
          ]
        }
      }
    ]
  },
  {
    "name": "io.github.zenml-io/mcp-zenml",
    "description": "MCP server to connect an MCP client (Cursor, Claude Desktop etc) with your ZenML MLOps and LLMOps pipelines",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/zenml-io/mcp-zenml"
    }
  },
  {
    "name": "io.github.simon-kansara/ableton-live-mcp-server",
    "description": "MCP Server implementation for Ableton Live OSC control",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/Simon-Kansara/ableton-live-mcp-server"
    }
  },
  {
    "name": "io.github.openbnb-org/mcp-server-airbnb",
    "description": "io.github.openbnb-org/mcp-server-airbnb",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/openbnb-org/mcp-server-airbnb"
    },
    "packages": [
      {
        "registry": "npm",
        "name": "openbnb-org",
        "version": {
          "number": "latest",
          "release_date": "2025-05-08T18:40:38.520Z"
        },
        "command": {
          "name": "-y",
          "positional_arguments": [
            "-y",
            "@openbnb/mcp-server-airbnb"
          ]
        }
      }
    ]
  },
  {
    "name": "io.github.baryhuang/mcp-server-aws-resources-python",
    "description": "A Python-based MCP server that lets Claude run boto3 code to query and manage AWS resources. Execute powerful AWS operations directly through Claude with proper sandboxing and containerization. No need for complex setups - just pass your AWS credentials and start interacting with all AWS services.",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/baryhuang/mcp-server-aws-resources-python"
    },
    "packages": [
      {
        "registry": "docker",
        "name": "baryhuang",
        "version": {
          "number": "latest",
          "release_date": "2025-05-08T18:40:38.520Z"
        },
        "command": {
          "name": "run",
          "positional_arguments": [
            "run",
            "-i",
            "--rm",
            "-e",
            "-e",
            "-e",
            "buryhuang/mcp-server-aws-resources:latest"
          ],
          "named_arguments": [
            {
              "short_flag": "AWS_ACCESS_KEY_ID",
              "required": true,
              "description": "Named argument"
            },
            {
              "short_flag": "AWS_SECRET_ACCESS_KEY",
              "required": true,
              "description": "Named argument"
            },
            {
              "short_flag": "AWS_DEFAULT_REGION",
              "required": true,
              "description": "Named argument"
            }
          ]
        }
      }
    ]
  },
  {
    "name": "io.github.ai-agent-hub/ai-agent-marketplace-index-mcp",
    "description": "MCP Server for AI Agent Marketplace Index from DeepNLP",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/AI-Agent-Hub/ai-agent-marketplace-index-mcp"
    },
    "packages": [
      {
        "registry": "pypi",
        "name": "AI-Agent-Hub",
        "version": {
          "number": "latest",
          "release_date": "2025-05-08T18:40:38.520Z"
        },
        "command": {
          "name": "--directory",
          "positional_arguments": [
            "--directory",
            "/ABSOLUTE/PATH/TO/PARENT/FOLDER/ai-agent-marketplace-index-mcp/src/ai-agent-marketplace-index",
            "run",
            "server.py"
          ]
        }
      }
    ]
  },
  {
    "name": "io.github.goplausible/algorand-mcp",
    "description": "Algorand Model Context Protocol (Server & Client)",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/GoPlausible/algorand-mcp"
    }
  },
  {
    "name": "io.github.yangkyeongmo/mcp-server-apache-airflow",
    "description": "io.github.yangkyeongmo/mcp-server-apache-airflow",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/yangkyeongmo/mcp-server-apache-airflow"
    }
  },
  {
    "name": "io.github.domdomegg/airtable-mcp-server",
    "description": "🗂️🤖 Airtable Model Context Protocol Server, for allowing AI systems to interact with your Airtable bases",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/domdomegg/airtable-mcp-server"
    },
    "packages": [
      {
        "registry": "npm",
        "name": "domdomegg",
        "version": {
          "number": "latest",
          "release_date": "2025-05-08T18:40:38.520Z"
        },
        "command": {
          "name": "-y",
          "positional_arguments": [
            "-y",
            "airtable-mcp-server"
          ]
        }
      }
    ]
  },
  {
    "name": "io.github.felores/airtable-mcp",
    "description": "Search, create and update Airtable bases, tables, fields, and records using Claude Desktop and MCP (Model Context Protocol) clients",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/felores/airtable-mcp"
    },
    "packages": [
      {
        "registry": "npm",
        "name": "felores",
        "version": {
          "number": "latest",
          "release_date": "2025-05-08T18:40:38.520Z"
        },
        "command": {
          "name": "@felores/airtable-mcp-server",
          "positional_arguments": [
            "@felores/airtable-mcp-server"
          ]
        }
      }
    ]
  },
  {
    "name": "io.github.calvernaz/alphavantage",
    "description": "A MCP server for the stock market data API, Alphavantage API.",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/calvernaz/alphavantage"
    }
  },
  {
    "name": "io.github.donghyun-chae/mcp-amadeus",
    "description": "Amadeus MCP(Model Context Protocol) Server",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/donghyun-chae/mcp-amadeus"
    }
  },
  {
    "name": "io.github.scorzeth/anki-mcp-server",
    "description": "An MCP server for Anki",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/scorzeth/anki-mcp-server"
    }
  },
  {
    "name": "io.github.pyroprompts/any-chat-completions-mcp",
    "description": "io.github.pyroprompts/any-chat-completions-mcp",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/pyroprompts/any-chat-completions-mcp"
    }
  },
  {
    "name": "io.github.omar-v2/mcp-ical",
    "description": "A Model Context Protocol Server that allows you to interact with your MacOS Calendar through natural language.",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/Omar-V2/mcp-ical"
    },
    "packages": [
      {
        "registry": "pypi",
        "name": "Omar-V2",
        "version": {
          "number": "latest",
          "release_date": "2025-05-08T18:40:38.520Z"
        },
        "command": {
          "name": "--directory",
          "positional_arguments": [
            "--directory",
            "/ABSOLUTE/PATH/TO/PARENT/FOLDER/mcp-ical",
            "run",
            "mcp-ical"
          ]
        }
      }
    ]
  },
  {
    "name": "io.github.ravenwits/mcp-server-arangodb",
    "description": "This is a TypeScript-based MCP server that provides database interaction capabilities through ArangoDB. It implements core database operations and allows seamless integration with ArangoDB through MCP tools. You can use it wih Claude app and also extension for VSCode that works with mcp like Cline!",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/ravenwits/mcp-server-arangodb"
    }
  },
  {
    "name": "io.github.vishalmysore/choturobo",
    "description": "Integrate Arduino-based robotics (using the NodeMCU ESP32 or Arduino Nano 368 board) with AI using the MCP (Model Context Protocol) framework from Claude Anthropic",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/vishalmysore/choturobo"
    }
  },
  {
    "name": "io.github.sooperset/mcp-atlassian",
    "description": "MCP server for Atlassian tools (Confluence, Jira)",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/sooperset/mcp-atlassian"
    },
    "packages": [
      {
        "registry": "docker",
        "name": "sooperset",
        "version": {
          "number": "latest",
          "release_date": "2025-05-08T18:40:38.520Z"
        },
        "command": {
          "name": "run",
          "positional_arguments": [
            "run",
            "-i",
            "--rm",
            "-e",
            "CONFLUENCE_URL",
            "-e",
            "CONFLUENCE_USERNAME",
            "-e",
            "CONFLUENCE_API_TOKEN",
            "-e",
            "JIRA_URL",
            "-e",
            "JIRA_USERNAME",
            "-e",
            "JIRA_API_TOKEN",
            "ghcr.io/sooperset/mcp-atlassian:latest"
          ]
        }
      }
    ]
  },
  {
    "name": "io.github.co-browser/attestable-mcp-server",
    "description": "Verify that any MCP server is running the intended and untampered code via hardware attestation.",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/co-browser/attestable-mcp-server"
    }
  },
  {
    "name": "io.github.rishikavikondala/mcp-server-aws",
    "description": "A Model Context Protocol server implementation for operations on AWS resources",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/rishikavikondala/mcp-server-aws"
    }
  },
  {
    "name": "io.github.lishenxydlgzs/aws-athena-mcp",
    "description": "MCP server to run AWS Athena queries",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/lishenxydlgzs/aws-athena-mcp"
    }
  },
  {
    "name": "io.github.aarora79/aws-cost-explorer-mcp-server",
    "description": "MCP server for understanding AWS spend",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/aarora79/aws-cost-explorer-mcp-server"
    },
    "packages": [
      {
        "registry": "docker",
        "name": "aarora79",
        "version": {
          "number": "latest",
          "release_date": "2025-05-08T18:40:38.520Z"
        },
        "command": {
          "name": "run",
          "positional_arguments": [
            "run",
            "-i",
            "--rm",
            "-e",
            "AWS_ACCESS_KEY_ID",
            "-e",
            "AWS_SECRET_ACCESS_KEY",
            "-e",
            "AWS_REGION",
            "-e",
            "BEDROCK_LOG_GROUP_NAME",
            "-e",
            "MCP_TRANSPORT",
            "-e",
            "CROSS_ACCOUNT_ROLE_NAME",
            "aws-cost-explorer-mcp:latest"
          ]
        }
      }
    ]
  },
  {
    "name": "io.github.whataboutyou-ai/eunomia-mcp-server",
    "description": "io.github.whataboutyou-ai/eunomia-mcp-server",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/whataboutyou-ai/eunomia-mcp-server"
    }
  },
  {
    "name": "io.github.aws-samples/sample-mcp-server-s3",
    "description": "io.github.aws-samples/sample-mcp-server-s3",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/aws-samples/sample-mcp-server-s3"
    },
    "packages": [
      {
        "registry": "pypi",
        "name": "aws-samples",
        "version": {
          "number": "latest",
          "release_date": "2025-05-08T18:40:38.520Z"
        },
        "command": {
          "name": "--directory",
          "positional_arguments": [
            "--directory",
            "/Users/user/generative_ai/model_context_protocol/s3-mcp-server",
            "run",
            "s3-mcp-server"
          ]
        }
      }
    ]
  },
  {
    "name": "io.github.pab1it0/adx-mcp-server",
    "description": "A Model Context Protocol (MCP) server that enables AI assistants to query and analyze Azure Data Explorer databases through standardized interfaces.",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/pab1it0/adx-mcp-server"
    },
    "packages": [
      {
        "registry": "pypi",
        "name": "pab1it0",
        "version": {
          "number": "latest",
          "release_date": "2025-05-08T18:40:38.520Z"
        },
        "command": {
          "name": "--directory",
          "positional_arguments": [
            "--directory",
            "<full path to adx-mcp-server directory>",
            "run",
            "src/adx_mcp_server/main.py"
          ]
        }
      }
    ]
  },
  {
    "name": "io.github.vortiago/mcp-azure-devops",
    "description": "A Model Context Protocol (MCP) server enabling AI assistants to interact with Azure DevOps services via Python SDK.",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/Vortiago/mcp-azure-devops"
    }
  },
  {
    "name": "io.github.baidubce/app-builder",
    "description": "appbuilder-sdk, 千帆AppBuilder-SDK帮助开发者灵活、快速的搭建AI原生应用",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/baidubce/app-builder"
    }
  },
  {
    "name": "io.github.magnetai/mcp-free-usdc-transfer",
    "description": "MCP (Model Context Protocol) server - free usdc transfer powered by Coinbase CDP",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/magnetai/mcp-free-usdc-transfer"
    },
    "packages": [
      {
        "registry": "npm",
        "name": "magnetai",
        "version": {
          "number": "latest",
          "release_date": "2025-05-08T18:40:38.520Z"
        },
        "command": {
          "name": "-y",
          "positional_arguments": [
            "-y",
            "@magnetai/free-usdc-transfer"
          ]
        }
      }
    ]
  },
  {
    "name": "io.github.basicmachines-co/basic-memory",
    "description": "Basic Memory is a knowledge management system that allows you to build a persistent semantic graph from conversations with AI assistants. All knowledge is stored in standard Markdown files on your computer, giving you full control and ownership of your data. Integrates directly with Obsidan.md",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/basicmachines-co/basic-memory"
    }
  },
  {
    "name": "io.github.lucashild/mcp-server-bigquery",
    "description": "A Model Context Protocol server that provides access to BigQuery",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/LucasHild/mcp-server-bigquery"
    }
  },
  {
    "name": "io.github.bazinga012/mcp_code_executor",
    "description": "The MCP Code Executor is an MCP server that allows LLMs to execute Python code within a specified Conda environment.",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/bazinga012/mcp_code_executor"
    }
  },
  {
    "name": "io.github.ergut/mcp-bigquery-server",
    "description": "A Model Context Protocol (MCP) server that provides secure, read-only access to BigQuery datasets. Enables Large Language Models (LLMs) to safely query and analyze data through a standardized interface.",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/ergut/mcp-bigquery-server"
    },
    "packages": [
      {
        "registry": "npm",
        "name": "ergut",
        "version": {
          "number": "latest",
          "release_date": "2025-05-08T18:40:38.520Z"
        },
        "command": {
          "name": "-y",
          "positional_arguments": [
            "-y",
            "@ergut/mcp-bigquery-server",
            "--project-id",
            "your-project-id",
            "--location",
            "us-central1"
          ]
        }
      }
    ]
  },
  {
    "name": "io.github.leehanchung/bing-search-mcp",
    "description": "MCP Server for Bing Search API",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/leehanchung/bing-search-mcp"
    }
  },
  {
    "name": "io.github.lloydzhou/bitable-mcp",
    "description": "This MCP server provides access to Lark Bitable through the Model Context Protocol. It allows users to interact with Bitable tables using predefined tools.",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/lloydzhou/bitable-mcp"
    }
  },
  {
    "name": "io.github.ahujasid/blender-mcp",
    "description": "io.github.ahujasid/blender-mcp",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/ahujasid/blender-mcp"
    }
  },
  {
    "name": "io.github.co-browser/browser-use-mcp-server",
    "description": "Browse the web, directly from Cursor etc.",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/co-browser/browser-use-mcp-server"
    }
  },
  {
    "name": "io.github.termix-official/bsc-mcp",
    "description": "io.github.termix-official/bsc-mcp",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/TermiX-official/bsc-mcp"
    }
  },
  {
    "name": "io.github.githejie/mcp-server-calculator",
    "description": "A Model Context Protocol server for calculating.",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/githejie/mcp-server-calculator"
    }
  },
  {
    "name": "io.github.lenwood/cfbd-mcp-server",
    "description": "An MCP server enabling CFBD API queries within Claude Desktop.",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/lenwood/cfbd-mcp-server"
    },
    "packages": [
      {
        "registry": "pypi",
        "name": "lenwood",
        "version": {
          "number": "latest",
          "release_date": "2025-05-08T18:40:38.520Z"
        },
        "command": {
          "name": "--directory",
          "positional_arguments": [
            "--directory",
            "/full/path/to/cfbd-mcp-server",
            "run",
            "cfbd-mcp-server"
          ]
        }
      }
    ]
  },
  {
    "name": "io.github.reading-plus-ai/mcp-server-data-exploration",
    "description": "io.github.reading-plus-ai/mcp-server-data-exploration",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/reading-plus-ai/mcp-server-data-exploration"
    }
  },
  {
    "name": "io.github.ai-ql/chat-mcp",
    "description": "A Desktop Chat App that leverages MCP(Model Context Protocol) to interface with other LLMs.",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/AI-QL/chat-mcp"
    }
  },
  {
    "name": "io.github.mcpso/mcp-server-chatsum",
    "description": "Query and Summarize your chat messages.",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/chatmcp/mcp-server-chatsum"
    }
  },
  {
    "name": "io.github.pab1it0/chess-mcp",
    "description": "A Model Context Protocol server for Chess.com's Published Data API.  This provides access to Chess.com player data, game records, and other public information through standardized MCP interfaces, allowing AI assistants to search and analyze chess information.",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/pab1it0/chess-mcp"
    },
    "packages": [
      {
        "registry": "docker",
        "name": "pab1it0",
        "version": {
          "number": "latest",
          "release_date": "2025-05-08T18:40:38.520Z"
        },
        "command": {
          "name": "run",
          "positional_arguments": [
            "run",
            "--rm",
            "-i",
            "pab1it0/chess-mcp"
          ]
        }
      }
    ]
  },
  {
    "name": "io.github.privetin/chroma",
    "description": "MCP server for Chroma",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/privetin/chroma"
    },
    "packages": [
      {
        "registry": "pypi",
        "name": "privetin",
        "version": {
          "number": "latest",
          "release_date": "2025-05-08T18:40:38.520Z"
        },
        "command": {
          "name": "--directory",
          "positional_arguments": [
            "--directory",
            "C:/MCP/server/community/chroma",
            "run",
            "chroma"
          ]
        }
      }
    ]
  },
  {
    "name": "io.github.zilongxue/claude-post",
    "description": "ClaudePost enables seamless email management through natural language conversations with Claude, offering secure features like email search, reading, and sending.",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/ZilongXue/claude-post"
    }
  },
  {
    "name": "io.github.felores/cloudinary-mcp-server",
    "description": "MCP (Model Context Protocol) server for uploading media to Cloudinary using Claude Desktop",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/felores/cloudinary-mcp-server"
    },
    "packages": [
      {
        "registry": "npm",
        "name": "felores",
        "version": {
          "number": "latest",
          "release_date": "2025-05-08T18:40:38.520Z"
        },
        "command": {
          "name": "@felores/cloudinary-mcp-server@latest",
          "positional_arguments": [
            "@felores/cloudinary-mcp-server@latest"
          ]
        }
      }
    ]
  },
  {
    "name": "io.github.stippi/code-assistant",
    "description": "An LLM-powered, autonomous coding assistant. Also offers an MCP mode.",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/stippi/code-assistant"
    }
  },
  {
    "name": "io.github.automata-labs-team/code-sandbox-mcp",
    "description": "An MCP server to create secure code sandbox environment for executing code within Docker containers. This MCP server provides AI applications with a safe and isolated environment for running code while maintaining security through containerization.",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/Automata-Labs-team/code-sandbox-mcp"
    }
  },
  {
    "name": "io.github.topoteretes/cognee",
    "description": "Memory for AI Agents in 5 lines of code",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/topoteretes/cognee"
    }
  },
  {
    "name": "io.github.longmans/coin_api_mcp",
    "description": "A Model Context Protocol server that provides access to CoinMarketCap's cryptocurrency data. This server enables AI-powered applications to retrieve cryptocurrency listings, quotes, and detailed information about various coins.",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/longmans/coin_api_mcp"
    }
  },
  {
    "name": "io.github.ivo-toby/contentful-mcp",
    "description": "MCP (Model Context Protocol) server for the Contentful Management API",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/ivo-toby/contentful-mcp"
    },
    "packages": [
      {
        "registry": "npm",
        "name": "ivo-toby",
        "version": {
          "number": "latest",
          "release_date": "2025-05-08T18:40:38.520Z"
        },
        "command": {
          "name": "-y",
          "positional_arguments": [
            "-y",
            "@ivotoby/contentful-management-mcp-server"
          ]
        }
      }
    ]
  },
  {
    "name": "io.github.kukapay/crypto-feargreed-mcp",
    "description": "Providing real-time and historical Crypto Fear & Greed Index data",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/kukapay/crypto-feargreed-mcp"
    }
  },
  {
    "name": "io.github.kukapay/cryptopanic-mcp-server",
    "description": "Provide latest cryptocurrency news to AI agents.",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/kukapay/cryptopanic-mcp-server"
    }
  },
  {
    "name": "io.github.dappierai/dappier-mcp",
    "description": "Dappier MCP server connects any AI to proprietary, real-time data — including web search, news, sports, stock market data, and premium publisher content.",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/DappierAI/dappier-mcp"
    }
  },
  {
    "name": "io.github.jordineil/mcp-databricks-server",
    "description": "MCP Server for Databricks",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/JordiNeil/mcp-databricks-server"
    }
  },
  {
    "name": "io.github.geli2001/datadog-mcp-server",
    "description": "MCP server interacts with the official Datadog API",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/GeLi2001/datadog-mcp-server"
    },
    "packages": [
      {
        "registry": "npm",
        "name": "GeLi2001",
        "version": {
          "number": "latest",
          "release_date": "2025-05-08T18:40:38.520Z"
        },
        "command": {
          "name": "datadog-mcp-server",
          "positional_arguments": [
            "datadog-mcp-server",
            "--apiKey",
            "<YOUR_API_KEY>",
            "--appKey",
            "<YOUR_APP_KEY>",
            "--site",
            "<YOUR_DD_SITE>(e.g us5.datadoghq.com)"
          ]
        }
      }
    ]
  },
  {
    "name": "io.github.privetin/dataset-viewer",
    "description": "MCP server for Hugging Face dataset viewer",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/privetin/dataset-viewer"
    },
    "packages": [
      {
        "registry": "pypi",
        "name": "privetin",
        "version": {
          "number": "latest",
          "release_date": "2025-05-08T18:40:38.520Z"
        },
        "command": {
          "name": "run",
          "positional_arguments": [
            "run",
            "dataset-viewer"
          ]
        }
      }
    ]
  },
  {
    "name": "io.github.bytebase/dbhub",
    "description": "Universal database MCP server connecting to MySQL, PostgreSQL, SQL Server, MariaDB, SQLite.",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/bytebase/dbhub"
    }
  },
  {
    "name": "io.github.dmontgomery40/deepseek-mcp-server",
    "description": "Model Context Protocol server for DeepSeek's advanced language models",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/DMontgomery40/deepseek-mcp-server"
    },
    "packages": [
      {
        "registry": "npm",
        "name": "DMontgomery40",
        "version": {
          "number": "latest",
          "release_date": "2025-05-08T18:40:38.520Z"
        },
        "command": {
          "name": "-y",
          "positional_arguments": [
            "-y",
            "deepseek-mcp-server"
          ]
        }
      }
    ]
  },
  {
    "name": "io.github.66julienmartin/mcp-server-deepseek_r1",
    "description": "A Model Context Protocol (MCP) server implementation connecting Claude Desktop with DeepSeek's language models (R1/V3)",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/66julienmartin/MCP-server-Deepseek_R1"
    }
  },
  {
    "name": "io.github.ruixingshi/deepseek-thinker-mcp",
    "description": "A MCP provider Deepseek reasoning content to MCP-enabled AI Clients, like Claude Desktop. Supports access to Deepseek's CoT from the Deepseek API service or a local Ollama server.",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/ruixingshi/deepseek-thinker-mcp"
    },
    "packages": [
      {
        "registry": "npm",
        "name": "ruixingshi",
        "version": {
          "number": "latest",
          "release_date": "2025-05-08T18:40:38.520Z"
        },
        "command": {
          "name": "-y",
          "positional_arguments": [
            "-y",
            "deepseek-thinker-mcp"
          ]
        }
      }
    ]
  },
  {
    "name": "io.github.descope-sample-apps/descope-mcp-server",
    "description": "io.github.descope-sample-apps/descope-mcp-server",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/descope-sample-apps/descope-mcp-server-stdio"
    }
  },
  {
    "name": "io.github.kpsunil97/devrev-mcp-server",
    "description": "io.github.kpsunil97/devrev-mcp-server",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/kpsunil97/devrev-mcp-server"
    }
  },
  {
    "name": "io.github.christianhinge/dicom-mcp",
    "description": "Model Context Protocol (MCP) for interacting with dicom servers (PACS etc.)",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/ChristianHinge/dicom-mcp"
    }
  },
  {
    "name": "io.github.yanxingliu/dify-mcp-server",
    "description": "Model Context Protocol (MCP) Server for dify workflows",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/YanxingLiu/dify-mcp-server"
    }
  },
  {
    "name": "io.github.v-3/discordmcp",
    "description": "Discord MCP Server for Claude Integration",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/v-3/discordmcp"
    }
  },
  {
    "name": "io.github.saseq/discord-mcp",
    "description": "A Model Context Protocol (MCP) server for the Discord integration with MCP-compatible applications like Claude Desktop.",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/SaseQ/discord-mcp"
    }
  },
  {
    "name": "io.github.ashdevfr/discourse-mcp-server",
    "description": "io.github.ashdevfr/discourse-mcp-server",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/AshDevFr/discourse-mcp-server"
    },
    "packages": [
      {
        "registry": "docker",
        "name": "AshDevFr",
        "version": {
          "number": "latest",
          "release_date": "2025-05-08T18:40:38.520Z"
        },
        "command": {
          "name": "run",
          "positional_arguments": [
            "run",
            "-i",
            "--rm",
            "-e",
            "-e",
            "-e",
            "ashdev/discourse-mcp-server"
          ],
          "named_arguments": [
            {
              "short_flag": "DISCOURSE_API_URL",
              "required": true,
              "description": "Named argument"
            },
            {
              "short_flag": "DISCOURSE_API_KEY",
              "required": true,
              "description": "Named argument"
            },
            {
              "short_flag": "DISCOURSE_API_USERNAME",
              "required": true,
              "description": "Named argument"
            }
          ]
        }
      }
    ]
  },
  {
    "name": "io.github.ckreiling/mcp-server-docker",
    "description": "MCP server for Docker",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/ckreiling/mcp-server-docker"
    }
  },
  {
    "name": "io.github.omedia/mcp-server-drupal",
    "description": "TS based companion MCP server for the Drupal MCP module that works with the STDIO transport.",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/Omedia/mcp-server-drupal"
    }
  },
  {
    "name": "io.github.kukapay/dune-analytics-mcp",
    "description": "A mcp server that bridges Dune Analytics data to AI agents.",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/kukapay/dune-analytics-mcp"
    }
  },
  {
    "name": "io.github.tencentedgeone/edgeone-pages-mcp",
    "description": "An MCP service designed for deploying HTML content to EdgeOne Pages and obtaining an accessible public URL.",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/TencentEdgeOne/edgeone-pages-mcp"
    },
    "packages": [
      {
        "registry": "npm",
        "name": "TencentEdgeOne",
        "version": {
          "number": "latest",
          "release_date": "2025-05-08T18:40:38.520Z"
        },
        "command": {
          "name": "edgeone-pages-mcp",
          "positional_arguments": [
            "edgeone-pages-mcp"
          ]
        }
      }
    ]
  },
  {
    "name": "io.github.cr7258/elasticsearch-mcp-server",
    "description": "A Model Context Protocol (MCP) server implementation that provides Elasticsearch and OpenSearch interaction.",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/cr7258/elasticsearch-mcp-server"
    }
  },
  {
    "name": "io.github.mamertofabian/elevenlabs-mcp-server",
    "description": "io.github.mamertofabian/elevenlabs-mcp-server",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/mamertofabian/elevenlabs-mcp-server"
    }
  },
  {
    "name": "io.github.mcpdotdirect/evm-mcp-server",
    "description": "MCP server that provides LLM with tools for interacting with EVM networks",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/mcpdotdirect/evm-mcp-server"
    },
    "packages": [
      {
        "registry": "npm",
        "name": "mcpdotdirect",
        "version": {
          "number": "latest",
          "release_date": "2025-05-08T18:40:38.520Z"
        },
        "command": {
          "name": "-y",
          "positional_arguments": [
            "-y",
            "@mcpdotdirect/evm-mcp-server",
            "-y",
            "@mcpdotdirect/evm-mcp-server",
            "--http"
          ]
        }
      }
    ]
  },
  {
    "name": "io.github.mamertofabian/mcp-everything-search",
    "description": "io.github.mamertofabian/mcp-everything-search",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/mamertofabian/mcp-everything-search"
    }
  },
  {
    "name": "io.github.haris-musa/excel-mcp-server",
    "description": "A Model Context Protocol server for Excel file manipulation",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/haris-musa/excel-mcp-server"
    }
  },
  {
    "name": "io.github.rishijatia/fantasy-pl-mcp",
    "description": "Fantasy Premier League MCP Server",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/rishijatia/fantasy-pl-mcp"
    }
  },
  {
    "name": "io.github.fastnai/mcp-fastn",
    "description": "io.github.fastnai/mcp-fastn",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/fastnai/mcp-fastn"
    }
  },
  {
    "name": "io.github.zcaceres/fetch-mcp",
    "description": "A flexible HTTP fetching Model Context Protocol server.",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/zcaceres/fetch-mcp"
    }
  },
  {
    "name": "io.github.glips/figma-context-mcp",
    "description": "MCP server to provide Figma layout information to AI coding agents like Cursor",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/GLips/Figma-Context-MCP"
    },
    "packages": [
      {
        "registry": "npm",
        "name": "GLips",
        "version": {
          "number": "latest",
          "release_date": "2025-05-08T18:40:38.520Z"
        },
        "command": {
          "name": "-y",
          "positional_arguments": [
            "-y",
            "figma-developer-mcp",
            "--stdio"
          ],
          "named_arguments": [
            {
              "short_flag": "--figma-api-key",
              "required": true,
              "description": "Named argument"
            }
          ]
        }
      }
    ]
  },
  {
    "name": "io.github.gannonh/firebase-mcp",
    "description": "🔥 Model Context Protocol (MCP) server for Firebase.",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/gannonh/firebase-mcp"
    }
  },
  {
    "name": "io.github.vrknetha/mcp-server-firecrawl",
    "description": "Official Firecrawl MCP Server - Adds powerful web scraping to Cursor, Claude and any other LLM clients.",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/mendableai/firecrawl-mcp-server"
    },
    "packages": [
      {
        "registry": "npm",
        "name": "mendableai",
        "version": {
          "number": "latest",
          "release_date": "2025-05-08T18:40:38.520Z"
        },
        "command": {
          "name": "-y",
          "positional_arguments": [
            "-y",
            "firecrawl-mcp"
          ]
        }
      }
    ]
  },
  {
    "name": "io.github.sunsetcoder/flightradar24-mcp-server",
    "description": "Model Context Protocol server for Flight Tracking",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/sunsetcoder/flightradar24-mcp-server"
    }
  },
  {
    "name": "io.github.mfydev/ghost-mcp",
    "description": "A Model Context Protocol (MCP) server for interacting with Ghost CMS through LLM interfaces like Claude. Allow you to control your Ghost blog by simply asking Claude etc.",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/MFYDev/ghost-mcp"
    },
    "packages": [
      {
        "registry": "npm",
        "name": "MFYDev",
        "version": {
          "number": "latest",
          "release_date": "2025-05-08T18:40:38.520Z"
        },
        "command": {
          "name": "-y",
          "positional_arguments": [
            "-y",
            "@fanyangmeng/ghost-mcp"
          ]
        }
      }
    ]
  },
  {
    "name": "io.github.ko1ynnky/github-actions-mcp-server",
    "description": "GitHub Actions Model Context Protocol Server",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/ko1ynnky/github-actions-mcp-server"
    }
  },
  {
    "name": "io.github.longyi1207/glean-mcp-server",
    "description": "io.github.longyi1207/glean-mcp-server",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/longyi1207/glean-mcp-server"
    }
  },
  {
    "name": "io.github.gongrzhe/gmail-mcp-server",
    "description": "A Model Context Protocol (MCP) server for Gmail integration in Claude Desktop with auto authentication support. This server enables AI assistants to manage Gmail through natural language interactions.",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/GongRzhe/Gmail-MCP-Server"
    },
    "packages": [
      {
        "registry": "npm",
        "name": "GongRzhe",
        "version": {
          "number": "latest",
          "release_date": "2025-05-08T18:40:38.520Z"
        },
        "command": {
          "name": "@gongrzhe/server-gmail-autoauth-mcp",
          "positional_arguments": [
            "@gongrzhe/server-gmail-autoauth-mcp"
          ]
        }
      }
    ]
  },
  {
    "name": "io.github.baryhuang/mcp-headless-gmail",
    "description": "A MCP (Model Context Protocol) server that provides get, send Gmails without local credential or token setup.",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/baryhuang/mcp-headless-gmail"
    },
    "packages": [
      {
        "registry": "docker",
        "name": "baryhuang",
        "version": {
          "number": "latest",
          "release_date": "2025-05-08T18:40:38.520Z"
        },
        "command": {
          "name": "run",
          "positional_arguments": [
            "run",
            "-i",
            "--rm",
            "buryhuang/mcp-headless-gmail:latest"
          ]
        }
      }
    ]
  },
  {
    "name": "io.github.hichana/goalstory-mcp",
    "description": "io.github.hichana/goalstory-mcp",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/hichana/goalstory-mcp"
    }
  },
  {
    "name": "io.github.goat-sdk/goat",
    "description": "The leading agentic finance toolkit for AI agents",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/goat-sdk/goat"
    }
  },
  {
    "name": "io.github.coding-solo/godot-mcp",
    "description": "MCP server for interfacing with Godot game engine. Provides tools for launching the editor, running projects, and capturing debug output.",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/Coding-Solo/godot-mcp"
    }
  },
  {
    "name": "io.github.mark3labs/mcp-filesystem-server",
    "description": "Go server implementing Model Context Protocol (MCP) for filesystem operations.",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/mark3labs/mcp-filesystem-server"
    }
  },
  {
    "name": "io.github.vectorinstitute/mcp-goodnews",
    "description": "A simple MCP application that delivers curated positive and uplifting news stories.",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/VectorInstitute/mcp-goodnews"
    }
  },
  {
    "name": "io.github.v-3/google-calendar",
    "description": "io.github.v-3/google-calendar",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/v-3/google-calendar"
    }
  },
  {
    "name": "io.github.nspady/google-calendar-mcp",
    "description": "MCP integration for Google Calendar to manage events.",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/nspady/google-calendar-mcp"
    }
  },
  {
    "name": "io.github.adenot/mcp-google-search",
    "description": "io.github.adenot/mcp-google-search",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/adenot/mcp-google-search"
    },
    "packages": [
      {
        "registry": "npm",
        "name": "adenot",
        "version": {
          "number": "latest",
          "release_date": "2025-05-08T18:40:38.520Z"
        },
        "command": {
          "name": "-y",
          "positional_arguments": [
            "-y",
            "@adenot/mcp-google-search"
          ]
        }
      }
    ]
  },
  {
    "name": "io.github.zcaceres/gtasks-mcp",
    "description": "A Google Tasks Model Context Protocol Server for Claude",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/zcaceres/gtasks-mcp"
    }
  },
  {
    "name": "io.github.hannesj/mcp-graphql-schema",
    "description": "GraphQL Schema Model Context Protocol Server",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/hannesj/mcp-graphql-schema"
    },
    "packages": [
      {
        "registry": "npm",
        "name": "hannesj",
        "version": {
          "number": "latest",
          "release_date": "2025-05-08T18:40:38.520Z"
        },
        "command": {
          "name": "-y",
          "positional_arguments": [
            "-y",
            "mcp-graphql-schema",
            "/ABSOLUTE/PATH/TO/schema.graphqls"
          ]
        }
      }
    ]
  },
  {
    "name": "io.github.horizondatawave/hdw-mcp-server",
    "description": "A Model Context Protocol (MCP) server that provides comprehensive access to LinkedIn data and functionalities using the HorizonDataWave API, enabling not only data retrieval but also robust management of user accounts.",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/horizondatawave/hdw-mcp-server"
    },
    "packages": [
      {
        "registry": "npm",
        "name": "horizondatawave",
        "version": {
          "number": "latest",
          "release_date": "2025-05-08T18:40:38.520Z"
        },
        "command": {
          "name": "@horizondatawave/mcp",
          "positional_arguments": [
            "@horizondatawave/mcp"
          ]
        }
      }
    ]
  },
  {
    "name": "io.github.heurist-network/heurist-mesh-mcp-server",
    "description": "io.github.heurist-network/heurist-mesh-mcp-server",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/heurist-network/heurist-mesh-mcp-server"
    }
  },
  {
    "name": "io.github.heurist-network/heurist-agent-framework",
    "description": "io.github.heurist-network/heurist-agent-framework",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/heurist-network/heurist-agent-framework"
    }
  },
  {
    "name": "io.github.syucream/holaspirit-mcp-server",
    "description": "A MCP server that accesses to Holaspirit",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/syucream/holaspirit-mcp-server"
    }
  },
  {
    "name": "io.github.tevonsb/homeassistant-mcp",
    "description": "A MCP server for Home Assistant",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/tevonsb/homeassistant-mcp"
    }
  },
  {
    "name": "io.github.voska/hass-mcp",
    "description": "Home Assistant MCP Server",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/voska/hass-mcp"
    },
    "packages": [
      {
        "registry": "docker",
        "name": "voska",
        "version": {
          "number": "latest",
          "release_date": "2025-05-08T18:40:38.520Z"
        },
        "command": {
          "name": "run",
          "positional_arguments": [
            "run",
            "-i",
            "--rm",
            "-e",
            "HA_URL",
            "-e",
            "HA_TOKEN",
            "voska/hass-mcp"
          ]
        }
      }
    ]
  },
  {
    "name": "io.github.buryhuang/mcp-hubspot",
    "description": "A Model Context Protocol (MCP) server that enables AI assistants to interact with HubSpot CRM data, providing built-in vector storage and caching mechanisms help overcome HubSpot API limitations while improving response times.",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/peakmojo/mcp-hubspot"
    }
  },
  {
    "name": "io.github.evalstate/mcp-hfspace",
    "description": "MCP Server to Use HuggingFace spaces, easy configuration and Claude Desktop mode. ",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/evalstate/mcp-hfspace"
    }
  },
  {
    "name": "io.github.mektigboy/server-hyperliquid",
    "description": "MCP Hyperliquid (https://app.hyperliquid.xyz) server",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/mektigboy/server-hyperliquid"
    },
    "packages": [
      {
        "registry": "npm",
        "name": "mektigboy",
        "version": {
          "number": "latest",
          "release_date": "2025-05-08T18:40:38.520Z"
        },
        "command": {
          "name": "-y",
          "positional_arguments": [
            "-y",
            "@mektigboy/server-hyperliquid"
          ]
        }
      }
    ]
  },
  {
    "name": "io.github.iflytek/ifly-workflow-mcp-server",
    "description": "This a simple implementation of an MCP server using iFlytek. It enables calling iFlytek workflows through MCP tools.",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/iflytek/ifly-workflow-mcp-server"
    }
  },
  {
    "name": "io.github.gongrzhe/image-generation-mcp-server",
    "description": "This MCP server provides image generation capabilities using the Replicate Flux model.",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/GongRzhe/Image-Generation-MCP-Server"
    },
    "packages": [
      {
        "registry": "npm",
        "name": "GongRzhe",
        "version": {
          "number": "latest",
          "release_date": "2025-05-08T18:40:38.520Z"
        },
        "command": {
          "name": "@gongrzhe/image-gen-server",
          "positional_arguments": [
            "@gongrzhe/image-gen-server"
          ]
        }
      }
    ]
  },
  {
    "name": "io.github.idoru/influxdb-mcp-server",
    "description": "An MCP Server for querying InfluxDB",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/idoru/influxdb-mcp-server"
    },
    "packages": [
      {
        "registry": "npm",
        "name": "idoru",
        "version": {
          "number": "latest",
          "release_date": "2025-05-08T18:40:38.520Z"
        },
        "command": {
          "name": "influxdb-mcp-server",
          "positional_arguments": [
            "influxdb-mcp-server"
          ]
        }
      }
    ]
  },
  {
    "name": "io.github.sergehuber/inoyu-mcp-unomi-server",
    "description": "An implementation of Anthropic's Model Context Protocol for the Apache Unomi CDP",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/sergehuber/inoyu-mcp-unomi-server"
    },
    "packages": [
      {
        "registry": "npm",
        "name": "sergehuber",
        "version": {
          "number": "latest",
          "release_date": "2025-05-08T18:40:38.520Z"
        },
        "command": {
          "name": "@inoyu/mcp-unomi-server",
          "positional_arguments": [
            "@inoyu/mcp-unomi-server"
          ]
        }
      }
    ]
  },
  {
    "name": "io.github.raoulbia-ai/mcp-server-for-intercom",
    "description": "io.github.raoulbia-ai/mcp-server-for-intercom",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/raoulbia-ai/mcp-server-for-intercom"
    }
  },
  {
    "name": "io.github.inditextech/mcp-server-simulator-ios-idb",
    "description": "A Model Context Protocol (MCP) server that enables LLMs to interact with iOS simulators through natural language commands.",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/InditexTech/mcp-server-simulator-ios-idb"
    }
  },
  {
    "name": "io.github.ferrislucas/iterm-mcp",
    "description": "A Model Context Protocol server that executes commands in the current iTerm session - useful for REPL and CLI assistance",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/ferrislucas/iterm-mcp"
    },
    "packages": [
      {
        "registry": "npm",
        "name": "ferrislucas",
        "version": {
          "number": "latest",
          "release_date": "2025-05-08T18:40:38.520Z"
        },
        "command": {
          "name": "-y",
          "positional_arguments": [
            "-y",
            "iterm-mcp"
          ]
        }
      }
    ]
  },
  {
    "name": "io.github.quarkiverse/quarkus-mcp-servers",
    "description": "Model Context Protocol Servers in Quarkus",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/quarkiverse/quarkus-mcp-servers"
    }
  },
  {
    "name": "io.github.gongrzhe/json-mcp-server",
    "description": "JSON handling and processing mcp server",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/GongRzhe/JSON-MCP-Server"
    }
  },
  {
    "name": "io.github.lamaalrajih/kicad-mcp",
    "description": "Model Context Protocol server for KiCad on Mac, Windows, and Linux",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/lamaalrajih/kicad-mcp"
    }
  },
  {
    "name": "io.github.christophenglisch/keycloak-model-context-protocol",
    "description": "MCP server implementation for Keycloak user management. Enables AI-powered administration of Keycloak users and realms through the Model Context Protocol (MCP). Seamlessly integrates with Claude Desktop and other MCP clients for automated user operations.",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/ChristophEnglisch/keycloak-model-context-protocol"
    },
    "packages": [
      {
        "registry": "npm",
        "name": "ChristophEnglisch",
        "version": {
          "number": "latest",
          "release_date": "2025-05-08T18:40:38.520Z"
        },
        "command": {
          "name": "-y",
          "positional_arguments": [
            "-y",
            "keycloak-model-context-protocol"
          ]
        }
      }
    ]
  },
  {
    "name": "io.github.kiwamizamurai/mcp-kibela-server",
    "description": "MCP server implementation for Kibela API integration",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/kiwamizamurai/mcp-kibela-server"
    },
    "packages": [
      {
        "registry": "npm",
        "name": "kiwamizamurai",
        "version": {
          "number": "latest",
          "release_date": "2025-05-08T18:40:38.520Z"
        },
        "command": {
          "name": "-y",
          "positional_arguments": [
            "-y",
            "@kiwamizamurai/mcp-kibela-server"
          ]
        }
      }
    ]
  },
  {
    "name": "io.github.macrat/mcp-server-kintone",
    "description": "MCP server for kintone",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/macrat/mcp-server-kintone"
    }
  },
  {
    "name": "io.github.kong/mcp-konnect",
    "description": "A Model Context Protocol (MCP) server for interacting with Kong Konnect APIs, allowing AI assistants to query and analyze Kong Gateway configurations, traffic, and analytics.",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/Kong/mcp-konnect"
    }
  },
  {
    "name": "io.github.flux159/mcp-server-kubernetes",
    "description": "MCP Server for kubernetes management commands",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/Flux159/mcp-server-kubernetes"
    },
    "packages": [
      {
        "registry": "npm",
        "name": "Flux159",
        "version": {
          "number": "latest",
          "release_date": "2025-05-08T18:40:38.520Z"
        },
        "command": {
          "name": "mcp-server-kubernetes",
          "positional_arguments": [
            "mcp-server-kubernetes"
          ]
        }
      }
    ]
  },
  {
    "name": "io.github.manusa/kubernetes-mcp-server",
    "description": "Model Context Protocol (MCP) server for Kubernetes and OpenShift",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/manusa/kubernetes-mcp-server"
    }
  },
  {
    "name": "io.github.gongrzhe/langflow-doc-qa-server",
    "description": "A Model Context Protocol server for document Q&A powered by Langflow . It demonstrates core MCP concepts by providing a simple interface to query documents through a Langflow backend.",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/GongRzhe/Langflow-DOC-QA-SERVER"
    }
  },
  {
    "name": "io.github.syucream/lightdash-mcp-server",
    "description": "A MCP(Model Context Protocol) server that accesses to Lightdash",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/syucream/lightdash-mcp-server"
    }
  },
  {
    "name": "io.github.jerhadf/linear-mcp-server",
    "description": "A server that integrates Linear's project management system with the Model Context Protocol (MCP) to allow LLMs to interact with Linear.",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/jerhadf/linear-mcp-server"
    },
    "packages": [
      {
        "registry": "npm",
        "name": "jerhadf",
        "version": {
          "number": "latest",
          "release_date": "2025-05-08T18:40:38.520Z"
        },
        "command": {
          "name": "-y",
          "positional_arguments": [
            "-y",
            "linear-mcp-server"
          ]
        }
      }
    ]
  },
  {
    "name": "io.github.geropl/linear-mcp-go",
    "description": "linear MCP server based on mcp-go",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/geropl/linear-mcp-go"
    }
  },
  {
    "name": "io.github.amornpan/py-mcp-line",
    "description": "python mcp LINE",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/amornpan/py-mcp-line"
    }
  },
  {
    "name": "io.github.run-llama/mcp-server-llamacloud",
    "description": "A MCP server connecting to managed indexes on LlamaCloud",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/run-llama/mcp-server-llamacloud"
    },
    "packages": [
      {
        "registry": "npm",
        "name": "run-llama",
        "version": {
          "number": "latest",
          "release_date": "2025-05-08T18:40:38.520Z"
        },
        "command": {
          "name": "-y",
          "positional_arguments": [
            "-y",
            "@llamaindex/mcp-server-llamacloud",
            "--index",
            "10k-SEC-Tesla",
            "--description",
            "10k SEC documents from 2023 for Tesla",
            "--index",
            "10k-SEC-Apple",
            "--description",
            "10k SEC documents from 2023 for Apple"
          ]
        }
      }
    ]
  },
  {
    "name": "io.github.cyberchitta/llm-context.py",
    "description": "Share code with LLMs via Model Context Protocol or clipboard. Rule-based customization enables easy switching between different tasks (like code review and documentation). Includes smart code outlining.",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/cyberchitta/llm-context.py"
    }
  },
  {
    "name": "io.github.carterlasalle/mac_messages_mcp",
    "description": "An MCP server that securely interfaces with your iMessage database via the Model Context Protocol (MCP), allowing LLMs to query and analyze iMessage conversations. It includes robust phone number validation, attachment processing, contact management, group chat handling, and full support for sending and receiving messages.",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/carterlasalle/mac_messages_mcp"
    }
  },
  {
    "name": "io.github.abel9851/mcp-server-mariadb",
    "description": "An mcp server that provides read-only access to MariaDB.",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/abel9851/mcp-server-mariadb"
    }
  },
  {
    "name": "io.github.maton-ai/agent-toolkit",
    "description": "io.github.maton-ai/agent-toolkit",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/maton-ai/agent-toolkit"
    }
  },
  {
    "name": "io.github.liuyoshio/mcp-compass",
    "description": "MCP Discovery & Recommendation Service - Find the right MCP server for your needs",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/liuyoshio/mcp-compass"
    }
  },
  {
    "name": "io.github.tesla0225/mcp-create",
    "description": "io.github.tesla0225/mcp-create",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/tesla0225/mcp-create"
    },
    "packages": [
      {
        "registry": "docker",
        "name": "tesla0225",
        "version": {
          "number": "latest",
          "release_date": "2025-05-08T18:40:38.520Z"
        },
        "command": {
          "name": "run",
          "positional_arguments": [
            "run",
            "-i",
            "--rm",
            "mcp-create"
          ]
        }
      }
    ]
  },
  {
    "name": "io.github.anaisbetts/mcp-installer",
    "description": "An MCP server that installs other MCP servers for you",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/anaisbetts/mcp-installer"
    }
  },
  {
    "name": "io.github.strowk/mcp-k8s-go",
    "description": "MCP server connecting to Kubernetes",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/strowk/mcp-k8s-go"
    }
  },
  {
    "name": "io.github.nkapila6/mcp-local-rag",
    "description": "\"primitive\" RAG-like web search model context protocol (MCP) server that runs locally. ✨ no APIs ✨",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/nkapila6/mcp-local-rag"
    }
  },
  {
    "name": "io.github.sparfenyuk/mcp-proxy",
    "description": "Connect to MCP servers that run on SSE transport, or expose stdio servers as an SSE server using the MCP Proxy server.",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/sparfenyuk/mcp-proxy"
    }
  },
  {
    "name": "io.github.mem0ai/mem0-mcp",
    "description": "io.github.mem0ai/mem0-mcp",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/mem0ai/mem0-mcp"
    }
  },
  {
    "name": "io.github.unibaseio/membase-mcp",
    "description": "A Model Context Protocol (MCP) server that enables secure interaction with Membase",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/unibaseio/membase-mcp"
    },
    "packages": [
      {
        "registry": "pypi",
        "name": "unibaseio",
        "version": {
          "number": "latest",
          "release_date": "2025-05-08T18:40:38.520Z"
        },
        "command": {
          "name": "--directory",
          "positional_arguments": [
            "--directory",
            "path/to/membase-mcp",
            "run",
            "src/membase_mcp/server.py"
          ]
        }
      }
    ]
  },
  {
    "name": "io.github.calclavia/mcp-obsidian",
    "description": "A connector for Claude Desktop to read and search an Obsidian vault.",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/smithery-ai/mcp-obsidian"
    }
  },
  {
    "name": "io.github.jexinsam/mssql_mcp_server",
    "description": "A Model Context Protocol (MCP) server facilitating secure interactions with MSSQL databases.",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/JexinSam/mssql_mcp_server"
    },
    "packages": [
      {
        "registry": "pypi",
        "name": "JexinSam",
        "version": {
          "number": "latest",
          "release_date": "2025-05-08T18:40:38.520Z"
        },
        "command": {
          "name": "--directory",
          "positional_arguments": [
            "--directory",
            "path/to/mssql_mcp_server",
            "run",
            "mssql_mcp_server"
          ]
        }
      }
    ]
  },
  {
    "name": "io.github.amornpan/py-mcp-mssql",
    "description": "py-mcp-mssql",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/amornpan/py-mcp-mssql"
    }
  },
  {
    "name": "io.github.daobataotie/mssql-mcp",
    "description": "mssql mcp server",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/daobataotie/mssql-mcp"
    }
  },
  {
    "name": "io.github.zcaceres/mcp-markdownify-server",
    "description": "A Model Context Protocol server for converting almost anything to Markdown",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/zcaceres/markdownify-mcp"
    }
  },
  {
    "name": "io.github.inditextech/mcp-teams-server",
    "description": "An MCP (Model Context Protocol) server implementation for Microsoft Teams integration, providing capabilities to read messages, create messages, reply to messages, mention members.",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/InditexTech/mcp-teams-server"
    }
  },
  {
    "name": "io.github.yuchenssr/mindmap-mcp-server",
    "description": "mindmap, mcp server, artifact",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/YuChenSSR/mindmap-mcp-server"
    }
  },
  {
    "name": "io.github.dmayboroda/minima",
    "description": "On-premises conversational RAG with configurable containers",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/dmayboroda/minima"
    }
  },
  {
    "name": "io.github.mobile-next/mobile-mcp",
    "description": "Model Context Protocol Server for Mobile Automation and Scraping (iOS, Android, Emulators, Simulators and Physical Devices)",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/mobile-next/mobile-mcp"
    },
    "packages": [
      {
        "registry": "npm",
        "name": "mobile-next",
        "version": {
          "number": "latest",
          "release_date": "2025-05-08T18:40:38.520Z"
        },
        "command": {
          "name": "-y",
          "positional_arguments": [
            "-y",
            "@mobilenext/mobile-mcp@latest"
          ]
        }
      }
    ]
  },
  {
    "name": "io.github.kiliczsh/mcp-mongo-server",
    "description": "A Model Context Protocol Server for MongoDB",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/kiliczsh/mcp-mongo-server"
    },
    "packages": [
      {
        "registry": "npm",
        "name": "kiliczsh",
        "version": {
          "number": "latest",
          "release_date": "2025-05-08T18:40:38.520Z"
        },
        "command": {
          "name": "-y",
          "positional_arguments": [
            "-y",
            "mcp-mongo-server"
          ]
        }
      }
    ]
  },
  {
    "name": "io.github.furey/mongodb-lens",
    "description": "🍃🔎 MongoDB Lens: Full Featured MCP Server for MongoDB Databases",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/furey/mongodb-lens"
    }
  },
  {
    "name": "io.github.sakce/mcp-server-monday",
    "description": "MCP Server to interact with Monday.com boards and items",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/sakce/mcp-server-monday"
    }
  },
  {
    "name": "io.github.yanmxa/multicluster-mcp-server",
    "description": "The gateway for GenAI systems to interact with multiple Kubernetes clusters through the MCP",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/yanmxa/multicluster-mcp-server"
    }
  },
  {
    "name": "io.github.benborla/mcp-server-mysql",
    "description": "A Model Context Protocol server that provides read-only access to MySQL databases. This server enables LLMs to inspect database schemas and execute read-only queries.",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/benborla/mcp-server-mysql"
    },
    "packages": [
      {
        "registry": "npm",
        "name": "benborla",
        "version": {
          "number": "latest",
          "release_date": "2025-05-08T18:40:38.520Z"
        },
        "command": {
          "name": "mcprunner",
          "positional_arguments": [
            "mcprunner",
            "--",
            "npx",
            "-y",
            "@benborla29/mcp-server-mysql"
          ],
          "named_arguments": [
            {
              "short_flag": "MYSQL_HOST",
              "required": true,
              "description": "Named argument"
            },
            {
              "short_flag": "MYSQL_PORT",
              "required": true,
              "description": "Named argument"
            },
            {
              "short_flag": "MYSQL_USER",
              "required": true,
              "description": "Named argument"
            },
            {
              "short_flag": "MYSQL_PASS",
              "required": true,
              "description": "Named argument"
            },
            {
              "short_flag": "MYSQL_DB",
              "required": true,
              "description": "Named argument"
            },
            {
              "short_flag": "ALLOW_INSERT_OPERATION",
              "required": true,
              "description": "Named argument"
            },
            {
              "short_flag": "ALLOW_UPDATE_OPERATION",
              "required": true,
              "description": "Named argument"
            },
            {
              "short_flag": "ALLOW_DELETE_OPERATION",
              "required": true,
              "description": "Named argument"
            }
          ]
        }
      }
    ]
  },
  {
    "name": "io.github.designcomputer/mysql_mcp_server",
    "description": "A Model Context Protocol (MCP) server that enables secure interaction with MySQL databases",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/designcomputer/mysql_mcp_server"
    },
    "packages": [
      {
        "registry": "pypi",
        "name": "designcomputer",
        "version": {
          "number": "latest",
          "release_date": "2025-05-08T18:40:38.520Z"
        },
        "command": {
          "name": "--directory",
          "positional_arguments": [
            "--directory",
            "path/to/mysql_mcp_server",
            "run",
            "mysql_mcp_server"
          ]
        }
      }
    ]
  },
  {
    "name": "io.github.leonardsellem/n8n-mcp-server",
    "description": "MCP server that provides tools and resources for interacting with n8n API",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/leonardsellem/n8n-mcp-server"
    }
  },
  {
    "name": "io.github.programcomputer/nasa-mcp-server",
    "description": "A Model Context Protocol (MCP) server for NASA APIs, providing a standardized interface for AI models to interact with NASA's vast array of data sources.",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/ProgramComputer/NASA-MCP-server"
    },
    "packages": [
      {
        "registry": "npm",
        "name": "ProgramComputer",
        "version": {
          "number": "latest",
          "release_date": "2025-05-08T18:40:38.520Z"
        },
        "command": {
          "name": "-y",
          "positional_arguments": [
            "-y",
            "@programcomputer/nasa-mcp-server@latest"
          ]
        }
      }
    ]
  },
  {
    "name": "io.github.stefanoamorelli/nasdaq-data-link-mcp",
    "description": "A Nasdaq Data Link MCP (Model Context Protocol) Server",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/stefanoamorelli/nasdaq-data-link-mcp"
    }
  },
  {
    "name": "io.github.kyrietangsheng/mcp-server-nationalparks",
    "description": "io.github.kyrietangsheng/mcp-server-nationalparks",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/KyrieTangSheng/mcp-server-nationalparks"
    },
    "packages": [
      {
        "registry": "npm",
        "name": "KyrieTangSheng",
        "version": {
          "number": "latest",
          "release_date": "2025-05-08T18:40:38.520Z"
        },
        "command": {
          "name": "-y",
          "positional_arguments": [
            "-y",
            "mcp-server-nationalparks"
          ]
        }
      }
    ]
  },
  {
    "name": "io.github.pfldy2850/py-mcp-naver",
    "description": "python MCP NAVER",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/pfldy2850/py-mcp-naver"
    }
  },
  {
    "name": "io.github.r-huijts/ns-mcp-server",
    "description": "A Model Context Protocol (MCP) server that provides access to NS (Dutch Railways) travel information through Claude AI. This server enables Claude to fetch real-time train travel information and disruptions using the official Dutch NS API.",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/r-huijts/ns-mcp-server"
    },
    "packages": [
      {
        "registry": "npm",
        "name": "r-huijts",
        "version": {
          "number": "latest",
          "release_date": "2025-05-08T18:40:38.520Z"
        },
        "command": {
          "name": "-y",
          "positional_arguments": [
            "-y",
            "ns-mcp-server"
          ]
        }
      }
    ]
  },
  {
    "name": "io.github.da-okazaki/mcp-neo4j-server",
    "description": "mcp-neo4j-server",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/da-okazaki/mcp-neo4j-server"
    },
    "packages": [
      {
        "registry": "npm",
        "name": "da-okazaki",
        "version": {
          "number": "latest",
          "release_date": "2025-05-08T18:40:38.523Z"
        },
        "command": {
          "name": "@alanse/mcp-neo4j-server",
          "positional_arguments": [
            "@alanse/mcp-neo4j-server"
          ]
        }
      }
    ]
  },
  {
    "name": "io.github.bigcodegen/mcp-neovim-server",
    "description": "Control Neovim using Model Context Protocol (MCP) and the official neovim/node-client JavaScript library",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/bigcodegen/mcp-neovim-server"
    },
    "packages": [
      {
        "registry": "npm",
        "name": "bigcodegen",
        "version": {
          "number": "latest",
          "release_date": "2025-05-08T18:40:38.523Z"
        },
        "command": {
          "name": "-y",
          "positional_arguments": [
            "-y",
            "mcp-neovim-server"
          ]
        }
      }
    ]
  },
  {
    "name": "io.github.suekou/mcp-notion-server",
    "description": "io.github.suekou/mcp-notion-server",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/suekou/mcp-notion-server"
    },
    "packages": [
      {
        "registry": "npm",
        "name": "suekou",
        "version": {
          "number": "latest",
          "release_date": "2025-05-08T18:40:38.523Z"
        },
        "command": {
          "name": "-y",
          "positional_arguments": [
            "-y",
            "@suekou/mcp-notion-server"
          ]
        }
      }
    ]
  },
  {
    "name": "io.github.v-3/notion-server",
    "description": "io.github.v-3/notion-server",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/v-3/notion-server"
    }
  },
  {
    "name": "io.github.teddyzxcv/ntfy-mcp",
    "description": "io.github.teddyzxcv/ntfy-mcp",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/teddyzxcv/ntfy-mcp"
    }
  },
  {
    "name": "io.github.oatpp/oatpp-mcp",
    "description": "Anthropic’s Model Context Protocol implementation for Oat++",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/oatpp/oatpp-mcp"
    }
  },
  {
    "name": "io.github.stevenstavrakis/obsidian-mcp",
    "description": "A simple MCP server for Obsidian",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/StevenStavrakis/obsidian-mcp"
    },
    "packages": [
      {
        "registry": "npm",
        "name": "StevenStavrakis",
        "version": {
          "number": "latest",
          "release_date": "2025-05-08T18:40:38.523Z"
        },
        "command": {
          "name": "-y",
          "positional_arguments": [
            "-y",
            "obsidian-mcp",
            "/path/to/your/vault",
            "/path/to/your/vault2"
          ]
        }
      }
    ]
  },
  {
    "name": "io.github.yuanooo/oceanbase_mcp_server",
    "description": "A Model Context Protocol (MCP) server that enables secure interaction with OceanBase databases. This server allows AI assistants to list tables, read data, and execute SQL queries through a controlled interface, making database exploration and analysis safer and more structured.",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/yuanoOo/oceanbase_mcp_server"
    },
    "packages": [
      {
        "registry": "pypi",
        "name": "yuanoOo",
        "version": {
          "number": "latest",
          "release_date": "2025-05-08T18:40:38.523Z"
        },
        "command": {
          "name": "--directory",
          "positional_arguments": [
            "--directory",
            "path/to/oceanbase_mcp_server",
            "run",
            "oceanbase_mcp_server"
          ]
        }
      }
    ]
  },
  {
    "name": "io.github.kapilduraphe/okta-mcp-server",
    "description": "Okta MCP Server",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/kapilduraphe/okta-mcp-server"
    }
  },
  {
    "name": "io.github.rajvirtual/mcp-servers",
    "description": "A Model Context Protocol (MCP) server that provides AI assistants with access to Microsoft OneNote. This server enables AI models to read from and write to OneNote notebooks, sections, and pages.",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/rajvirtual/MCP-Servers"
    }
  },
  {
    "name": "io.github.conechoai/openai-websearch-mcp",
    "description": "openai websearch tool as mcp server",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/ConechoAI/openai-websearch-mcp"
    }
  },
  {
    "name": "io.github.snaggle-ai/openapi-mcp-server",
    "description": "Allow AI to wade through complex OpenAPIs using Simple Language",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/janwilmake/openapi-mcp-server"
    }
  },
  {
    "name": "io.github.baryhuang/mcp-server-any-openapi",
    "description": "A MCP server that enables Claude to discover and call any API endpoint through semantic search. Intelligently chunks OpenAPI specifications to handle large API documentation, with built-in request execution capabilities. Perfect for integrating private APIs with Claude Desktop.",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/baryhuang/mcp-server-any-openapi"
    },
    "packages": [
      {
        "registry": "docker",
        "name": "baryhuang",
        "version": {
          "number": "latest",
          "release_date": "2025-05-08T18:40:38.523Z"
        },
        "command": {
          "name": "run",
          "positional_arguments": [
            "run",
            "-i",
            "--rm",
            "-e",
            "-e",
            "-e",
            "buryhuang/mcp-server-any-openapi:latest",
            "run",
            "-i",
            "--rm",
            "-e",
            "-e",
            "-e",
            "buryhuang/mcp-server-any-openapi:latest"
          ],
          "named_arguments": [
            {
              "short_flag": "OPENAPI_JSON_DOCS_URL",
              "required": true,
              "description": "Named argument"
            },
            {
              "short_flag": "MCP_API_PREFIX",
              "required": true,
              "description": "Named argument"
            },
            {
              "short_flag": "GLOBAL_TOOL_PROMPT",
              "required": true,
              "description": "Named argument"
            },
            {
              "short_flag": "OPENAPI_JSON_DOCS_URL",
              "required": true,
              "description": "Named argument"
            },
            {
              "short_flag": "MCP_API_PREFIX",
              "required": true,
              "description": "Named argument"
            },
            {
              "short_flag": "GLOBAL_TOOL_PROMPT",
              "required": true,
              "description": "Named argument"
            }
          ]
        }
      }
    ]
  },
  {
    "name": "io.github.deepfates/mcp-replicate",
    "description": "Model Context Protocol server for Replicate's API",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/deepfates/mcp-replicate"
    }
  },
  {
    "name": "io.github.hannesj/mcp-openapi-schema",
    "description": "OpenAPI Schema Model Context Protocol Server",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/hannesj/mcp-openapi-schema"
    },
    "packages": [
      {
        "registry": "npm",
        "name": "hannesj",
        "version": {
          "number": "latest",
          "release_date": "2025-05-08T18:40:38.523Z"
        },
        "command": {
          "name": "-y",
          "positional_arguments": [
            "-y",
            "mcp-openapi-schema",
            "/ABSOLUTE/PATH/TO/openapi.yaml"
          ]
        }
      }
    ]
  },
  {
    "name": "io.github.spathodea-network/opencti-mcp",
    "description": "io.github.spathodea-network/opencti-mcp",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/Spathodea-Network/opencti-mcp"
    }
  },
  {
    "name": "io.github.asusevski/opendota-mcp-server",
    "description": "io.github.asusevski/opendota-mcp-server",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/asusevski/opendota-mcp-server"
    }
  },
  {
    "name": "io.github.shanejonas/openrpc-mpc-server",
    "description": "A Model Context Protocol (MCP) server that provides JSON-RPC functionality through OpenRPC.",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/shanejonas/openrpc-mpc-server"
    },
    "packages": [
      {
        "registry": "npm",
        "name": "shanejonas",
        "version": {
          "number": "latest",
          "release_date": "2025-05-08T18:40:38.523Z"
        },
        "command": {
          "name": "-y",
          "positional_arguments": [
            "-y",
            "openrpc-mcp-server"
          ]
        }
      }
    ]
  },
  {
    "name": "io.github.open-strategy-partners/osp_marketing_tools",
    "description": "A Model Context Protocol (MCP) server that empowers LLMs to use some of Open Srategy Partners' core writing and product marketing techniques.",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/open-strategy-partners/osp_marketing_tools"
    }
  },
  {
    "name": "io.github.vivekvells/mcp-pandoc",
    "description": "MCP server for document format conversion using pandoc.",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/vivekVells/mcp-pandoc"
    }
  },
  {
    "name": "io.github.hungryrobot1/mcp-pif",
    "description": "A MCP implementation of the personal intelligence framework (PIF)",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/hungryrobot1/MCP-PIF"
    }
  },
  {
    "name": "io.github.sirmews/mcp-pinecone",
    "description": "Model Context Protocol server to allow for reading and writing from Pinecone. Rudimentary RAG",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/sirmews/mcp-pinecone"
    }
  },
  {
    "name": "io.github.felores/placid-mcp-server",
    "description": "Generate image and video creatives using Placid.app templates in MCP compatible hosts",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/felores/placid-mcp-server"
    },
    "packages": [
      {
        "registry": "npm",
        "name": "felores",
        "version": {
          "number": "latest",
          "release_date": "2025-05-08T18:40:38.523Z"
        },
        "command": {
          "name": "@felores/placid-mcp-server",
          "positional_arguments": [
            "@felores/placid-mcp-server"
          ]
        }
      }
    ]
  },
  {
    "name": "io.github.executeautomation/mcp-playwright",
    "description": "Playwright Model Context Protocol Server - Tool to automate Browsers and APIs in Claude Desktop, Cline, Cursor IDE and More 🔌",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/executeautomation/mcp-playwright"
    },
    "packages": [
      {
        "registry": "npm",
        "name": "executeautomation",
        "version": {
          "number": "latest",
          "release_date": "2025-05-08T18:40:38.523Z"
        },
        "command": {
          "name": "-y",
          "positional_arguments": [
            "-y",
            "@executeautomation/playwright-mcp-server"
          ]
        }
      }
    ]
  },
  {
    "name": "io.github.shannonlal/mcp-postman",
    "description": "MCP Server for running Postman Collections with Newman",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/shannonlal/mcp-postman"
    }
  },
  {
    "name": "io.github.kenjihikmatullah/productboard-mcp",
    "description": "Integrate the Productboard API into agentic workflows via MCP",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/kenjihikmatullah/productboard-mcp"
    },
    "packages": [
      {
        "registry": "npm",
        "name": "kenjihikmatullah",
        "version": {
          "number": "latest",
          "release_date": "2025-05-08T18:40:38.523Z"
        },
        "command": {
          "name": "-y",
          "positional_arguments": [
            "-y",
            "productboard-mcp"
          ]
        }
      }
    ]
  },
  {
    "name": "io.github.pab1it0/prometheus-mcp-server",
    "description": "A Model Context Protocol (MCP) server that enables AI assistants to query and analyze Prometheus metrics through standardized interfaces.",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/pab1it0/prometheus-mcp-server"
    },
    "packages": [
      {
        "registry": "pypi",
        "name": "pab1it0",
        "version": {
          "number": "latest",
          "release_date": "2025-05-08T18:40:38.523Z"
        },
        "command": {
          "name": "--directory",
          "positional_arguments": [
            "--directory",
            "<full path to prometheus-mcp-server directory>",
            "run",
            "src/prometheus_mcp_server/main.py"
          ]
        }
      }
    ]
  },
  {
    "name": "io.github.dogukanakkaya/pulumi-mcp-server",
    "description": "io.github.dogukanakkaya/pulumi-mcp-server",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/dogukanakkaya/pulumi-mcp-server"
    }
  },
  {
    "name": "io.github.ashiknesin/pushover-mcp",
    "description": "A MCP implementation for sending notifications via Pushover",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/AshikNesin/pushover-mcp"
    },
    "packages": [
      {
        "registry": "npm",
        "name": "AshikNesin",
        "version": {
          "number": "latest",
          "release_date": "2025-05-08T18:40:38.523Z"
        },
        "command": {
          "name": "-y",
          "positional_arguments": [
            "-y",
            "pushover-mcp@latest",
            "start",
            "--token",
            "YOUR_TOKEN",
            "--user",
            "YOUR_USER"
          ]
        }
      }
    ]
  },
  {
    "name": "io.github.jjsantos01/qgis_mcp",
    "description": "Model Context Protocol (MCP) that allows LLMs to use QGIS Desktop",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/jjsantos01/qgis_mcp"
    },
    "packages": [
      {
        "registry": "pypi",
        "name": "jjsantos01",
        "version": {
          "number": "latest",
          "release_date": "2025-05-08T18:40:38.523Z"
        },
        "command": {
          "name": "--directory",
          "positional_arguments": [
            "--directory",
            "/ABSOLUTE/PATH/TO/PARENT/REPO/FOLDER/qgis_mcp/src/qgis_mcp",
            "run",
            "qgis_mcp_server.py"
          ]
        }
      }
    ]
  },
  {
    "name": "io.github.gongrzhe/quickchart-mcp-server",
    "description": "A Model Context Protocol server for generating charts using QuickChart.io  . It allows you to create various types of charts through MCP tools.",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/GongRzhe/Quickchart-MCP-Server"
    }
  },
  {
    "name": "io.github.66julienmartin/mcp-server-qwen_max",
    "description": "MCP server for Qwen Max model",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/66julienmartin/MCP-server-Qwen_Max"
    }
  },
  {
    "name": "io.github.kenliao94/mcp-server-rabbitmq",
    "description": "MCP server for interacting with RabbitMQ",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/kenliao94/mcp-server-rabbitmq"
    }
  },
  {
    "name": "io.github.apify/mcp-server-rag-web-browser",
    "description": "A MCP Server for the RAG Web Browser Actor",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/apify/mcp-server-rag-web-browser"
    }
  },
  {
    "name": "io.github.dschuler36/reaper-mcp-server",
    "description": "An MCP Server for interacting with Reaper projects.",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/dschuler36/reaper-mcp-server"
    }
  },
  {
    "name": "io.github.gongrzhe/redis-mcp-server",
    "description": "A Redis MCP server (pushed to https://github.com/modelcontextprotocol/servers/tree/main/src/redis) implementation for interacting with Redis databases. This server enables LLMs to interact with Redis key-value stores through a set of standardized tools.",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/GongRzhe/REDIS-MCP-Server"
    },
    "packages": [
      {
        "registry": "npm",
        "name": "GongRzhe",
        "version": {
          "number": "latest",
          "release_date": "2025-05-08T18:40:38.523Z"
        },
        "command": {
          "name": "@gongrzhe/server-redis-mcp@1.0.0",
          "positional_arguments": [
            "@gongrzhe/server-redis-mcp@1.0.0",
            "redis://localhost:6379"
          ]
        }
      }
    ]
  },
  {
    "name": "io.github.prajwalnayak7/mcp-server-redis",
    "description": "MCP server to interact with Redis Server, AWS Memory DB, etc for caching or other use-cases where in-memory and key-value based storage is appropriate",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/prajwalnayak7/mcp-server-redis"
    }
  },
  {
    "name": "io.github.skydeckai/mcp-server-rememberizer",
    "description": "An MCP Server to enable global access to Rememberizer",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/skydeckai/mcp-server-rememberizer"
    }
  },
  {
    "name": "io.github.xxxbrian/mcp-rquest",
    "description": "A MCP server providing realistic browser-like HTTP request capabilities with accurate TLS/JA3/JA4 fingerprints for bypassing anti-bot measures. It also supports converting PDF and HTML documents to Markdown for easier processing by LLMs.",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/xxxbrian/mcp-rquest"
    }
  },
  {
    "name": "io.github.r-huijts/rijksmuseum-mcp",
    "description": "Rijksmuseum MCP integration for artwork exploration and analysis",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/r-huijts/rijksmuseum-mcp"
    },
    "packages": [
      {
        "registry": "npm",
        "name": "r-huijts",
        "version": {
          "number": "latest",
          "release_date": "2025-05-08T18:40:38.523Z"
        },
        "command": {
          "name": "-y",
          "positional_arguments": [
            "-y",
            "mcp-server-rijksmuseum"
          ]
        }
      }
    ]
  },
  {
    "name": "io.github.jifrozen0110/mcp-riot",
    "description": "League of Legends MCP Server",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/jifrozen0110/mcp-riot"
    }
  },
  {
    "name": "io.github.smn2gnt/mcp-salesforce",
    "description": "MCP Salesforce connector",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/smn2gnt/MCP-Salesforce"
    }
  },
  {
    "name": "io.github.adityak74/mcp-scholarly",
    "description": "A MCP server to search for accurate academic articles.",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/adityak74/mcp-scholarly"
    }
  },
  {
    "name": "io.github.cyberchitta/scrapling-fetch-mcp",
    "description": "Helps AI assistants access text content from bot-protected websites. MCP server that fetches HTML/markdown from sites with anti-automation measures using Scrapling.",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/cyberchitta/scrapling-fetch-mcp"
    }
  },
  {
    "name": "io.github.ihor-sokoliuk/mcp-searxng",
    "description": "MCP Server for SearXNG",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/ihor-sokoliuk/mcp-searxng"
    },
    "packages": [
      {
        "registry": "npm",
        "name": "ihor-sokoliuk",
        "version": {
          "number": "latest",
          "release_date": "2025-05-08T18:40:38.523Z"
        },
        "command": {
          "name": "-y",
          "positional_arguments": [
            "-y",
            "mcp-searxng"
          ]
        }
      }
    ]
  },
  {
    "name": "io.github.stefanoamorelli/sec-edgar-mcp",
    "description": "A Model Context Protocol (MCP) Server for SEC EDGAR",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/stefanoamorelli/sec-edgar-mcp"
    }
  },
  {
    "name": "io.github.osomai/servicenow-mcp",
    "description": "MCP Server for ServiceNow",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/osomai/servicenow-mcp"
    }
  },
  {
    "name": "io.github.geli2001/shopify-mcp",
    "description": "MCP server for Shopify api, usable on mcp clients such as Anthropic's Claude and Cursor IDE",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/GeLi2001/shopify-mcp"
    },
    "packages": [
      {
        "registry": "npm",
        "name": "GeLi2001",
        "version": {
          "number": "latest",
          "release_date": "2025-05-08T18:40:38.523Z"
        },
        "command": {
          "name": "shopify-mcp",
          "positional_arguments": [
            "shopify-mcp",
            "--accessToken",
            "<YOUR_ACCESS_TOKEN>",
            "--domain",
            "<YOUR_SHOP>.myshopify.com"
          ]
        }
      }
    ]
  },
  {
    "name": "io.github.dvcrn/mcp-server-siri-shortcuts",
    "description": "MCP for calling Siri Shorcuts from LLMs",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/dvcrn/mcp-server-siri-shortcuts"
    },
    "packages": [
      {
        "registry": "npm",
        "name": "dvcrn",
        "version": {
          "number": "latest",
          "release_date": "2025-05-08T18:40:38.523Z"
        },
        "command": {
          "name": "mcp-server-siri-shortcuts",
          "positional_arguments": [
            "mcp-server-siri-shortcuts"
          ]
        }
      }
    ]
  },
  {
    "name": "io.github.isaacwasserman/mcp-snowflake-server",
    "description": "io.github.isaacwasserman/mcp-snowflake-server",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/isaacwasserman/mcp-snowflake-server"
    }
  },
  {
    "name": "io.github.yeonupark/mcp-soccer-data",
    "description": "An MCP server that provides real-time football data based on the SoccerDataAPI.",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/yeonupark/mcp-soccer-data"
    }
  },
  {
    "name": "io.github.sendaifun/solana-agent-kit",
    "description": "connect any ai agents to solana protocols",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/sendaifun/solana-agent-kit"
    }
  },
  {
    "name": "io.github.varunneal/spotify-mcp",
    "description": "MCP to connect your LLM with Spotify.",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/varunneal/spotify-mcp"
    }
  },
  {
    "name": "io.github.boston343/starwind-ui-mcp",
    "description": "Local MCP server implementation for Starwind UI that you can use with Cursor, Windsurf, and other AI tools",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/starwind-ui/starwind-ui-mcp"
    }
  },
  {
    "name": "io.github.atharvagupta2003/mcp-stripe",
    "description": "io.github.atharvagupta2003/mcp-stripe",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/atharvagupta2003/mcp-stripe"
    }
  },
  {
    "name": "io.github.wilsonchenghy/shadertoy-mcp",
    "description": "io.github.wilsonchenghy/shadertoy-mcp",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/wilsonchenghy/ShaderToy-MCP"
    }
  },
  {
    "name": "io.github.laksh-star/mcp-server-tmdb",
    "description": "MCP Server with TMDB",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/Laksh-star/mcp-server-tmdb"
    }
  },
  {
    "name": "io.github.ramxx/mcp-tavily",
    "description": "An MCP server for Tavily's search API",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/RamXX/mcp-tavily"
    }
  },
  {
    "name": "io.github.chigwell/telegram-mcp",
    "description": "io.github.chigwell/telegram-mcp",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/chigwell/telegram-mcp"
    },
    "packages": [
      {
        "registry": "pypi",
        "name": "chigwell",
        "version": {
          "number": "latest",
          "release_date": "2025-05-08T18:40:38.523Z"
        },
        "command": {
          "name": "--directory",
          "positional_arguments": [
            "--directory",
            "/full/path/to/telegram-mcp-server",
            "run",
            "main.py"
          ]
        }
      }
    ]
  },
  {
    "name": "io.github.chaindead/telegram-mcp",
    "description": "Telegram MCP for managing dialogs, messages, drafts, read statuses, and more.",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/chaindead/telegram-mcp"
    },
    "packages": [
      {
        "registry": "npm",
        "name": "chaindead",
        "version": {
          "number": "latest",
          "release_date": "2025-05-08T18:40:38.523Z"
        },
        "command": {
          "name": "-y",
          "positional_arguments": [
            "-y",
            "@chaindead/telegram-mcp"
          ]
        }
      }
    ]
  },
  {
    "name": "io.github.gongrzhe/terminal-controller-mcp",
    "description": "A Model Context Protocol (MCP) server that enables secure terminal command execution, directory navigation, and file system operations through a standardized interface.",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/GongRzhe/terminal-controller-mcp"
    }
  },
  {
    "name": "io.github.geli2001/tft-mcp-server",
    "description": "io.github.geli2001/tft-mcp-server",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/GeLi2001/tft-mcp-server"
    },
    "packages": [
      {
        "registry": "npm",
        "name": "GeLi2001",
        "version": {
          "number": "latest",
          "release_date": "2025-05-08T18:40:38.523Z"
        },
        "command": {
          "name": "mcp-server-tft",
          "positional_arguments": [
            "mcp-server-tft",
            "--apiKey",
            "<YOUR_RIOT_API_KEY>",
            "--gameName",
            "<YOUR_GAME_NAME>",
            "--tagLine",
            "<YOUR_TAG_LINE>"
          ]
        }
      }
    ]
  },
  {
    "name": "io.github.delorenj/mcp-server-ticketmaster",
    "description": "A Ticketmaster MCP server that provides query capabilites from the Discovery API",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/delorenj/mcp-server-ticketmaster"
    },
    "packages": [
      {
        "registry": "npm",
        "name": "delorenj",
        "version": {
          "number": "latest",
          "release_date": "2025-05-08T18:40:38.523Z"
        },
        "command": {
          "name": "-y",
          "positional_arguments": [
            "-y",
            "@delorenj/mcp-server-ticketmaster"
          ]
        }
      }
    ]
  },
  {
    "name": "io.github.alexarevalo9/ticktick-mcp-server",
    "description": "A Model Context Protocol (MCP) server designed to integrate with the TickTick task management platform, enabling intelligent context-aware task operations and automation.",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/alexarevalo9/ticktick-mcp-server"
    },
    "packages": [
      {
        "registry": "npm",
        "name": "alexarevalo9",
        "version": {
          "number": "latest",
          "release_date": "2025-05-08T18:40:38.523Z"
        },
        "command": {
          "name": "-y",
          "positional_arguments": [
            "-y",
            "@alexarevalo.ai/mcp-server-ticktick"
          ]
        }
      }
    ]
  },
  {
    "name": "io.github.abhiz123/todoist-mcp-server",
    "description": "MCP server for Todoist integration enabling natural language task management with Claude",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/abhiz123/todoist-mcp-server"
    },
    "packages": [
      {
        "registry": "npm",
        "name": "abhiz123",
        "version": {
          "number": "latest",
          "release_date": "2025-05-08T18:40:38.523Z"
        },
        "command": {
          "name": "-y",
          "positional_arguments": [
            "-y",
            "@abhiz123/todoist-mcp-server"
          ]
        }
      }
    ]
  },
  {
    "name": "io.github.suhail-ak-s/mcp-typesense-server",
    "description": "io.github.suhail-ak-s/mcp-typesense-server",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/suhail-ak-s/mcp-typesense-server"
    },
    "packages": [
      {
        "registry": "npm",
        "name": "suhail-ak-s",
        "version": {
          "number": "latest",
          "release_date": "2025-05-08T18:40:38.523Z"
        },
        "command": {
          "name": "-y",
          "positional_arguments": [
            "-y",
            "typesense-mcp-server",
            "--host",
            "your-typesense-host",
            "--port",
            "8108",
            "--protocol",
            "http",
            "--api-key",
            "your-api-key"
          ]
        }
      }
    ]
  },
  {
    "name": "io.github.gongrzhe/travel-planner-mcp-server",
    "description": "io.github.gongrzhe/travel-planner-mcp-server",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/GongRzhe/TRAVEL-PLANNER-MCP-Server"
    },
    "packages": [
      {
        "registry": "npm",
        "name": "GongRzhe",
        "version": {
          "number": "latest",
          "release_date": "2025-05-08T18:40:38.523Z"
        },
        "command": {
          "name": "@gongrzhe/server-travelplanner-mcp",
          "positional_arguments": [
            "@gongrzhe/server-travelplanner-mcp"
          ]
        }
      }
    ]
  },
  {
    "name": "io.github.ognis1205/mcp-server-unitycatalog",
    "description": "Unity Catalog AI Model Context Protocol Server",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/ognis1205/mcp-server-unitycatalog"
    },
    "packages": [
      {
        "registry": "pypi",
        "name": "ognis1205",
        "version": {
          "number": "latest",
          "release_date": "2025-05-08T18:40:38.523Z"
        },
        "command": {
          "name": "--directory",
          "positional_arguments": [
            "--directory",
            "/<path to your local git repository>/mcp-server-unitycatalog",
            "run",
            "mcp-server-unitycatalog",
            "--uc_server",
            "<your unity catalog url>",
            "--uc_catalog",
            "<your catalog name>",
            "--uc_schema",
            "<your schema name>"
          ]
        }
      }
    ]
  },
  {
    "name": "io.github.codergamester/mcp-unity",
    "description": "MCP Server to integrate Unity Editor game engine with different AI Model clients (e.g. Claude Desktop, Windsurf, Cursor)",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/CoderGamester/mcp-unity"
    }
  },
  {
    "name": "io.github.quazaai/unitymcpintegration",
    "description": "Enable AI Agents to Control Unity",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/quazaai/UnityMCPIntegration"
    }
  },
  {
    "name": "io.github.isaacwasserman/mcp-vegalite-server",
    "description": "io.github.isaacwasserman/mcp-vegalite-server",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/isaacwasserman/mcp-vegalite-server"
    }
  },
  {
    "name": "io.github.burningion/video-editing-mcp",
    "description": "MCP Interface for Video Jungle",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/burningion/video-editing-mcp"
    }
  },
  {
    "name": "io.github.mfukushim/map-traveler-mcp",
    "description": "Virtual traveler library for MCP",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/mfukushim/map-traveler-mcp"
    },
    "packages": [
      {
        "registry": "npm",
        "name": "mfukushim",
        "version": {
          "number": "latest",
          "release_date": "2025-05-08T18:40:38.523Z"
        },
        "command": {
          "name": "-y",
          "positional_arguments": [
            "-y",
            "@mfukushim/map-traveler-mcp"
          ]
        }
      }
    ]
  },
  {
    "name": "io.github.dinghuazhou/sample-mcp-server-tos",
    "description": "io.github.dinghuazhou/sample-mcp-server-tos",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/dinghuazhou/sample-mcp-server-tos"
    },
    "packages": [
      {
        "registry": "pypi",
        "name": "dinghuazhou",
        "version": {
          "number": "latest",
          "release_date": "2025-05-08T18:40:38.523Z"
        },
        "command": {
          "name": "--directory",
          "positional_arguments": [
            "--directory",
            "/ABSOLUTE/PATH/TO/PARENT/FOLDER/src/mcp_server_tos",
            "run",
            "main.py"
          ]
        }
      }
    ]
  },
  {
    "name": "io.github.wanaku-ai/wanaku",
    "description": "Wanaku MCP Router",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/wanaku-ai/wanaku"
    }
  },
  {
    "name": "io.github.kapilduraphe/webflow-mcp-server",
    "description": "Webflow MCP server",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/kapilduraphe/webflow-mcp-server"
    }
  },
  {
    "name": "io.github.kukapay/whale-tracker-mcp",
    "description": "A mcp server for tracking cryptocurrency whale transactions.",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/kukapay/whale-tracker-mcp"
    }
  },
  {
    "name": "io.github.bharathvaj-ganesan/whois-mcp",
    "description": "MCP Server for whois lookups.",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/bharathvaj-ganesan/whois-mcp"
    },
    "packages": [
      {
        "registry": "npm",
        "name": "bharathvaj-ganesan",
        "version": {
          "number": "latest",
          "release_date": "2025-05-08T18:40:38.523Z"
        },
        "command": {
          "name": "-y",
          "positional_arguments": [
            "-y",
            "@bharathvaj/whois-mcp@latest"
          ]
        }
      }
    ]
  },
  {
    "name": "io.github.zzaebok/mcp-wikidata",
    "description": "A server implementation for Wikidata API using the Model Context Protocol (MCP).",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/zzaebok/mcp-wikidata"
    }
  },
  {
    "name": "io.github.wildfly-extras/wildfly-mcp",
    "description": "WildFly MCP server and other tooling to integrate WildFly in AI space",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/wildfly-extras/wildfly-mcp"
    }
  },
  {
    "name": "io.github.simonb97/win-cli-mcp-server",
    "description": "Model Context Protocol server for secure command-line interactions on Windows systems",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/SimonB97/win-cli-mcp-server"
    },
    "packages": [
      {
        "registry": "npm",
        "name": "SimonB97",
        "version": {
          "number": "latest",
          "release_date": "2025-05-08T18:40:38.523Z"
        },
        "command": {
          "name": "-y",
          "positional_arguments": [
            "-y",
            "@simonb97/server-win-cli"
          ]
        }
      }
    ]
  },
  {
    "name": "io.github.zubeidhendricks/youtube-mcp-server",
    "description": "MCP Server for YouTube API, enabling video management, Shorts creation, and advanced analytics",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/ZubeidHendricks/youtube-mcp-server"
    },
    "packages": [
      {
        "registry": "npm",
        "name": "ZubeidHendricks",
        "version": {
          "number": "latest",
          "release_date": "2025-05-08T18:40:38.523Z"
        },
        "command": {
          "name": "-y",
          "positional_arguments": [
            "-y",
            "@modelcontextprotocol/server-youtube"
          ]
        }
      }
    ]
  },
  {
    "name": "io.github.anshumax/world_bank_mcp_server",
    "description": "An implementation of the Model Context Protocol for the World Bank open data API",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/anshumax/world_bank_mcp_server"
    },
    "packages": [
      {
        "registry": "pypi",
        "name": "anshumax",
        "version": {
          "number": "latest",
          "release_date": "2025-05-08T18:40:38.523Z"
        },
        "command": {
          "name": "--directory",
          "positional_arguments": [
            "--directory",
            "path/to/world_bank_mcp_server",
            "run",
            "world_bank_mcp_server"
          ]
        }
      }
    ]
  },
  {
    "name": "io.github.enescinr/twitter-mcp",
    "description": "A Model Context Protocol server allows to interact with Twitter, enabling posting tweets and searching Twitter.",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/EnesCinr/twitter-mcp"
    },
    "packages": [
      {
        "registry": "npm",
        "name": "EnesCinr",
        "version": {
          "number": "latest",
          "release_date": "2025-05-08T18:40:38.523Z"
        },
        "command": {
          "name": "-y",
          "positional_arguments": [
            "-y",
            "@enescinar/twitter-mcp"
          ]
        }
      }
    ]
  },
  {
    "name": "io.github.vidhupv/x-mcp",
    "description": "io.github.vidhupv/x-mcp",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/vidhupv/x-mcp"
    },
    "packages": [
      {
        "registry": "pypi",
        "name": "vidhupv",
        "version": {
          "number": "latest",
          "release_date": "2025-05-08T18:40:38.523Z"
        },
        "command": {
          "name": "--directory",
          "positional_arguments": [
            "--directory",
            "/path/to/x-mcp",
            "run",
            "x-mcp"
          ]
        }
      }
    ]
  },
  {
    "name": "io.github.shenghaiwang/xcodebuild",
    "description": "MCP tool for building Xcode iOS workspace/project and feeding back error to LLMs.",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/ShenghaiWang/xcodebuild"
    }
  },
  {
    "name": "io.github.john-zhang-dev/xero-mcp",
    "description": "A Model Context Protocol server allows Clients to interact with Xero",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/john-zhang-dev/xero-mcp"
    },
    "packages": [
      {
        "registry": "npm",
        "name": "john-zhang-dev",
        "version": {
          "number": "latest",
          "release_date": "2025-05-08T18:40:38.523Z"
        },
        "command": {
          "name": "-y",
          "positional_arguments": [
            "-y",
            "xero-mcp@latest"
          ]
        }
      }
    ]
  },
  {
    "name": "io.github.xgenerationlab/xiyan_mcp_server",
    "description": "A Model Context Protocol (MCP) server that enables natural language queries to databases",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/XGenerationLab/xiyan_mcp_server"
    }
  },
  {
    "name": "io.github.apeyroux/mcp-xmind",
    "description": "io.github.apeyroux/mcp-xmind",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/apeyroux/mcp-xmind"
    }
  },
  {
    "name": "io.github.klavis-ai/klavis",
    "description": "Klavis AI (YC X25):  Open Source, easy to use MCPs on Slack, Discord and Web",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/Klavis-AI/klavis"
    }
  },
  {
    "name": "io.github.isdaniel/mcp_weather_server",
    "description": "io.github.isdaniel/mcp_weather_server",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/isdaniel/mcp_weather_server"
    }
  },
  {
    "name": "io.github.zcaceres/easy-mcp",
    "description": "Absurdly easy Model Context Protocol Servers in Typescript",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/zcaceres/easy-mcp"
    }
  },
  {
    "name": "io.github.tadata-org/fastapi_mcp",
    "description": "A zero-configuration tool for automatically exposing FastAPI endpoints as Model Context Protocol (MCP) tools.",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/tadata-org/fastapi_mcp"
    }
  },
  {
    "name": "io.github.punkpeye/fastmcp",
    "description": "A TypeScript framework for building MCP servers.",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/punkpeye/fastmcp"
    },
    "packages": [
      {
        "registry": "npm",
        "name": "punkpeye",
        "version": {
          "number": "latest",
          "release_date": "2025-05-08T18:40:38.523Z"
        },
        "command": {
          "name": "tsx",
          "positional_arguments": [
            "tsx",
            "/PATH/TO/YOUR_PROJECT/src/index.ts"
          ]
        }
      }
    ]
  },
  {
    "name": "io.github.strowk/foxy-contexts",
    "description": "Foxy contexts is a library for building context servers supporting Model Context Protocol",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/strowk/foxy-contexts"
    }
  },
  {
    "name": "io.github.alibaba/higress",
    "description": "🤖 AI Gateway | AI Native API Gateway",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/alibaba/higress"
    }
  },
  {
    "name": "io.github.quarkiverse/quarkus-mcp-server",
    "description": "This extension enables developers to implement the MCP server features easily.",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/quarkiverse/quarkus-mcp-server"
    }
  },
  {
    "name": "io.github.mcpdotdirect/template-mcp-server",
    "description": "Template to quickly set up your own MCP server ",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/mcpdotdirect/template-mcp-server"
    }
  },
  {
    "name": "io.github.marimo-team/codemirror-mcp",
    "description": "CodeMirror extension to hook up a Model Context Provider (MCP)",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/marimo-team/codemirror-mcp"
    }
  },
  {
    "name": "io.github.badkk/awesome-crypto-mcp-servers",
    "description": "A collection of crypto MCP servers.",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/badkk/awesome-crypto-mcp-servers"
    }
  },
  {
    "name": "io.github.appcypher/awesome-mcp-servers",
    "description": "Awesome MCP Servers - A curated list of Model Context Protocol servers",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/appcypher/awesome-mcp-servers"
    }
  },
  {
    "name": "io.github.punkpeye/awesome-mcp-servers",
    "description": "A collection of MCP servers.",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/punkpeye/awesome-mcp-servers"
    }
  },
  {
    "name": "io.github.wong2/awesome-mcp-servers",
    "description": "A curated list of Model Context Protocol (MCP) servers",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/wong2/awesome-mcp-servers"
    }
  },
  {
    "name": "io.github.mcp-router/mcp-router",
    "description": "MCP Router enables easily manage your MCP (Model Context Protocol) servers with enhanced security",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/mcp-router/mcp-router"
    },
    "packages": [
      {
        "registry": "npm",
        "name": "mcp-router",
        "version": {
          "number": "latest",
          "release_date": "2025-05-08T18:40:38.523Z"
        },
        "command": {
          "name": "-y",
          "positional_arguments": [
            "-y",
            "mcpr-cli",
            "connect"
          ]
        }
      }
    ]
  },
  {
    "name": "io.github.mcpx-dev/mcp-badges",
    "description": "Get your projects MCP (Model Context Protocol)  badges",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/mcpx-dev/mcp-badges"
    }
  },
  {
    "name": "io.github.apappascs/mcp-servers-hub",
    "description": "Discover the most comprehensive and up-to-date collection of MCP servers in the market. This repository serves as a centralized hub, offering an extensive catalog of open-source and proprietary MCP servers, complete with features, documentation links, and contributors.",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/apappascs/mcp-servers-hub"
    }
  },
  {
    "name": "io.github.wong2/mcp-cli",
    "description": "A CLI inspector for the Model Context Protocol",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/wong2/mcp-cli"
    }
  },
  {
    "name": "io.github.eqtylab/mcp-guardian",
    "description": "Manage / Proxy / Secure your MCP Servers",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/eqtylab/mcp-guardian"
    }
  },
  {
    "name": "io.github.pathintegral-institute/mcpm.sh",
    "description": "CLI MCP package manager & registry for all platforms and all clients. Search & configure MCP servers. Advanced Router & Profile features.",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/pathintegral-institute/mcpm.sh"
    }
  },
  {
    "name": "io.github.zueai/mcp-manager",
    "description": "simple web ui to manage mcp (model context protocol) servers in the claude app",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/zueai/mcp-manager"
    }
  },
  {
    "name": "io.github.jeamee/mcphub-desktop",
    "description": "Desktop APP for Discover and Install MCP Servers",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/Jeamee/MCPHub-Desktop"
    }
  },
  {
    "name": "io.github.chatmcp/mcp-directory",
    "description": "directory for Awesome MCP Servers",
    "license": "Apache-2.0",
    "repository": {
      "url": "https://github.com/chatmcp/mcp-directory"
    }
  }
]