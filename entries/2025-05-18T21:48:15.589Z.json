[
  {
    "name": "io.github.21st-dev/magic-mcp",
    "description": "It's like v0 but in your Cursor/WindSurf/Cline. 21st dev Magic MCP server for working with your frontend like Magic",
    "repository": "https://github.com/21st-dev/magic-mcp",
    "packages": [
      {
        "registry": "npm",
        "name": "@21st-dev/magic",
        "version": "0.0.46",
        "command": "npx",
        "arguments": [
          {
            "name": "-y",
            "description": "Install dependencies"
          },
          {
            "name": "@21st-dev/magic@0.0.46",
            "description": "Package name"
          }
        ],
        "environment": [
          {
            "name": "API_KEY",
            "description": "${input:apiKey}"
          }
        ]
      }
    ]
  },
  {
    "name": "io.github.adfin-engineering/mcp-server-adfin",
    "description": "A Model Context Protocol Server for connecting with Adfin APIs ",
    "repository": "https://github.com/Adfin-Engineering/mcp-server-adfin",
    "packages": [
      {
        "registry": "pypi",
        "name": "adfinmcp",
        "version": "0.1.0",
        "command": "pip",
        "arguments": [
          "--directory <absolute_path_to_adfin_mcp_folder>",
          "main_adfin_mcp.py"
        ],
        "environment": [
          {
            "name": "ADFIN_EMAIL",
            "description": "<email>"
          },
          {
            "name": "ADFIN_PASSWORD",
            "description": "<password>"
          }
        ]
      }
    ]
  },
  {
    "name": "io.github.tinyfish-io/agentql-mcp",
    "description": "Model Context Protocol server that integrates AgentQL's data extraction capabilities.",
    "repository": "https://github.com/tinyfish-io/agentql-mcp"
  },
  {
    "name": "io.github.agentrpc/agentrpc",
    "description": "A universal RPC layer for AI agents. Connect to any function, any language, any framework, in minutes.",
    "repository": "https://github.com/agentrpc/agentrpc",
    "packages": [
      {
        "registry": "npm",
        "name": "agentrpc/agentrpc",
        "command": "npx",
        "arguments": [
          "mcp"
        ],
        "environment": [
          {
            "name": "AGENTRPC_API_SECRET",
            "description": "<YOUR_API_SECRET>"
          }
        ]
      }
    ]
  },
  {
    "name": "io.github.aiven-open/mcp-aiven",
    "description": "Model Context Protocol server for Aiven",
    "repository": "https://github.com/Aiven-Open/mcp-aiven",
    "packages": [
      {
        "registry": "pypi",
        "name": "mcp-aiven",
        "version": "0.1.4",
        "command": "pip",
        "arguments": [
          "--directory $REPOSITORY_DIRECTORY",
          "--with-editable $REPOSITORY_DIRECTORY",
          "--python 3.13",
          "mcp-aiven"
        ],
        "environment": [
          {
            "name": "AIVEN_BASE_URL",
            "description": "https://api.aiven.io"
          },
          {
            "name": "AIVEN_TOKEN",
            "description": "$AIVEN_TOKEN"
          }
        ]
      }
    ]
  },
  {
    "name": "io.github.aliyun/alibabacloud-adb-mysql-mcp-server",
    "description": "AnalyticDB for MySQL MCP Server",
    "repository": "https://github.com/aliyun/alibabacloud-adb-mysql-mcp-server",
    "packages": [
      {
        "registry": "pypi",
        "name": "adb-mysql-mcp-server",
        "version": "1.0.0",
        "command": "pip",
        "arguments": [
          "--with adb-mysql-mcp-server",
          "adb-mysql-mcp-server"
        ],
        "environment": [
          {
            "name": "ADB_MYSQL_HOST",
            "description": "host"
          },
          {
            "name": "ADB_MYSQL_PORT",
            "description": "port"
          },
          {
            "name": "ADB_MYSQL_USER",
            "description": "database_user"
          },
          {
            "name": "ADB_MYSQL_PASSWORD",
            "description": "database_password"
          },
          {
            "name": "ADB_MYSQL_DATABASE",
            "description": "database"
          }
        ]
      }
    ]
  },
  {
    "name": "io.github.aliyun/alibaba-cloud-ops-mcp-server",
    "description": "AlibabaCloud CloudOps MCP Server",
    "repository": "https://github.com/aliyun/alibaba-cloud-ops-mcp-server"
  },
  {
    "name": "io.github.apache/iotdb-mcp-server",
    "description": "Apache IoTDB MCP Server",
    "repository": "https://github.com/apache/iotdb-mcp-server",
    "packages": [
      {
        "registry": "pypi",
        "name": "iotdb-mcp-server",
        "version": "0.1.0",
        "command": "pip",
        "arguments": [
          "--directory YOUR_REPO_PATH/src/iotdb_mcp_server",
          "server.py"
        ],
        "environment": [
          {
            "name": "IOTDB_HOST",
            "description": "127.0.0.1"
          },
          {
            "name": "IOTDB_PORT",
            "description": "6667"
          },
          {
            "name": "IOTDB_USER",
            "description": "root"
          },
          {
            "name": "IOTDB_PASSWORD",
            "description": "root"
          },
          {
            "name": "IOTDB_DATABASE",
            "description": "test"
          },
          {
            "name": "IOTDB_SQL_DIALECT",
            "description": "table"
          }
        ]
      }
    ]
  },
  {
    "name": "io.github.apache/iotdb",
    "description": "Apache IoTDB",
    "repository": "https://github.com/apache/iotdb"
  },
  {
    "name": "io.github.apify/actors-mcp-server",
    "description": "Model Context Protocol (MCP) Server for Apify's Actors",
    "repository": "https://github.com/apify/actors-mcp-server",
    "packages": [
      {
        "registry": "npm",
        "name": "@apify/actors-mcp-server",
        "version": "0.1.31",
        "command": "npx",
        "arguments": [
          "--actors lukaskrivka/google-maps-with-contact-details,apify/instagram-scraper"
        ],
        "environment": [
          {
            "name": "APIFY_TOKEN",
            "description": "${input:apify_token}"
          }
        ]
      }
    ]
  },
  {
    "name": "io.github.apimatic/apimatic-validator-mcp",
    "description": "APIMatic Validator MCP Server for validating OpenAPI specs via APIMatic's API with MCP",
    "repository": "https://github.com/apimatic/apimatic-validator-mcp"
  },
  {
    "name": "io.github.arize-ai/phoenix",
    "description": "AI Observability & Evaluation",
    "repository": "https://github.com/Arize-ai/phoenix"
  },
  {
    "name": "io.github.datastax/astra-db-mcp",
    "description": "An MCP server for Astra DB workloads",
    "repository": "https://github.com/datastax/astra-db-mcp"
  },
  {
    "name": "io.github.atlanhq/agent-toolkit",
    "description": "Atlan AI Agent Toolkit",
    "repository": "https://github.com/atlanhq/agent-toolkit"
  },
  {
    "name": "io.github.audienseco/mcp-audiense-insights",
    "description": "Audiense Insights MCP Server is a server based on the Model Context Protocol (MCP) that allows Claude and other MCP-compatible clients to interact with your Audiense Insights account",
    "repository": "https://github.com/AudienseCo/mcp-audiense-insights",
    "packages": [
      {
        "registry": "npm",
        "name": "mcp-audiense-insights",
        "version": "0.2.0",
        "command": "npx",
        "arguments": [
          {
            "name": "-y",
            "description": "Install dependencies"
          },
          {
            "name": "mcp-audiense-insights@0.2.0",
            "description": "Package name"
          }
        ],
        "environment": [
          {
            "name": "AUDIENSE_CLIENT_ID",
            "description": "your_client_id_here"
          },
          {
            "name": "AUDIENSE_CLIENT_SECRET",
            "description": "your_client_secret_here"
          },
          {
            "name": "TWITTER_BEARER_TOKEN",
            "description": "your_token_here"
          }
        ]
      }
    ]
  },
  {},
  {
    "name": "io.github.axiomhq/mcp-server-axiom",
    "description": "Axiom Model Context Protocol Server",
    "repository": "https://github.com/axiomhq/mcp-server-axiom"
  },
  {
    "name": "io.github.azure/azure-mcp",
    "description": "The Azure MCP Server, bringing the power of Azure to your agents.",
    "repository": "https://github.com/Azure/azure-mcp"
  },
  {
    "name": "io.github.bankless/onchain-mcp",
    "description": "Bringing the bankless onchain API to MCP",
    "repository": "https://github.com/Bankless/onchain-mcp",
    "packages": [
      {
        "registry": "npm",
        "name": "@bankless/onchain-mcp",
        "version": "1.0.6",
        "command": "npx",
        "arguments": [
          {
            "name": "-y",
            "description": "Install dependencies"
          },
          {
            "name": "@bankless/onchain-mcp@1.0.6",
            "description": "Package name"
          }
        ],
        "environment": [
          {
            "name": "BANKLESS_API_TOKEN",
            "description": "your_api_token_here"
          }
        ]
      }
    ]
  },
  {
    "name": "io.github.ahnlabio/bicscan-mcp",
    "description": "BICScan MCP Server",
    "repository": "https://github.com/ahnlabio/bicscan-mcp"
  },
  {
    "name": "io.github.bitrise-io/bitrise-mcp",
    "description": "MCP Server for the Bitrise API, enabling app management, build operations, artifact management and more.",
    "repository": "https://github.com/bitrise-io/bitrise-mcp"
  },
  {
    "name": "io.github.box-community/mcp-server-box",
    "description": "An MCP server capable of interacting with the Box API",
    "repository": "https://github.com/box-community/mcp-server-box",
    "packages": [
      {
        "registry": "pypi",
        "name": "mcp-server-box",
        "version": "0.1.0",
        "command": "pip",
        "arguments": [
          "src/mcp_server_box.py"
        ]
      }
    ]
  },
  {
    "name": "io.github.browserbase/mcp-server-browserbase",
    "description": "Allow LLMs to control a browser with Browserbase and Stagehand",
    "repository": "https://github.com/browserbase/mcp-server-browserbase"
  },
  {
    "name": "io.github.chargebee/agentkit",
    "description": "Seamlessly integrate AI agents with Chargebee using AgentKit for smarter billing and subscription workflows.",
    "repository": "https://github.com/chargebee/agentkit"
  },
  {
    "name": "io.github.chroma-core/chroma-mcp",
    "description": "A Model Context Protocol (MCP) server implementation that provides database capabilities for Chroma",
    "repository": "https://github.com/chroma-core/chroma-mcp"
  },
  {},
  {
    "name": "io.github.circleci-public/mcp-server-circleci",
    "description": "A specialized server implementation for the Model Context Protocol (MCP) designed to integrate with CircleCI's development workflow. This project serves as a bridge between CircleCI's infrastructure and the Model Context Protocol, enabling enhanced AI-powered development experiences.",
    "repository": "https://github.com/CircleCI-Public/mcp-server-circleci",
    "packages": [
      {
        "registry": "npm",
        "name": "@circleci/mcp-server-circleci",
        "version": "0.7.1",
        "command": "npx",
        "arguments": [
          {
            "name": "-y",
            "description": "Install dependencies"
          },
          {
            "name": "@circleci/mcp-server-circleci@0.7.1",
            "description": "Package name"
          }
        ],
        "environment": [
          {
            "name": "CIRCLECI_TOKEN",
            "description": "your-circleci-token"
          },
          {
            "name": "CIRCLECI_BASE_URL",
            "description": "https://circleci.com"
          }
        ]
      }
    ]
  },
  {
    "name": "io.github.clickhouse/mcp-clickhouse",
    "description": "io.github.clickhouse/mcp-clickhouse",
    "repository": "https://github.com/ClickHouse/mcp-clickhouse",
    "packages": [
      {
        "registry": "pypi",
        "name": "mcp-clickhouse",
        "version": "0.1.7",
        "command": "pip",
        "arguments": [
          "--with mcp-clickhouse",
          "--python 3.13",
          "mcp-clickhouse"
        ],
        "environment": [
          {
            "name": "CLICKHOUSE_HOST",
            "description": "<clickhouse-host>"
          },
          {
            "name": "CLICKHOUSE_USER",
            "description": "<clickhouse-user>"
          },
          {
            "name": "CLICKHOUSE_PASSWORD",
            "description": "<clickhouse-password>"
          },
          {
            "name": "CLICKHOUSE_DATABASE",
            "description": "<optional-database>"
          }
        ]
      }
    ]
  },
  {
    "name": "io.github.cloudflare/mcp-server-cloudflare",
    "description": "io.github.cloudflare/mcp-server-cloudflare",
    "repository": "https://github.com/cloudflare/mcp-server-cloudflare",
    "packages": [
      {
        "registry": "npm",
        "name": "@cloudflare/mcp-server-cloudflare",
        "version": "1.0.0",
        "command": "npx",
        "arguments": [
          "https://observability.mcp.cloudflare.com/sse"
        ]
      }
    ]
  },
  {
    "name": "io.github.codacy/codacy-mcp-server",
    "description": "Codacy's MCP Server implementation",
    "repository": "https://github.com/codacy/codacy-mcp-server"
  },
  {
    "name": "io.github.codelogicincengineering/codelogic-mcp-server",
    "description": "An MCP Server to utilize Codelogic's rich software dependency data in your AI programming assistant.",
    "repository": "https://github.com/CodeLogicIncEngineering/codelogic-mcp-server"
  },
  {
    "name": "io.github.comet-ml/opik-mcp",
    "description": "Model Context Protocol (MCP) implementation for Opik enabling seamless IDE integration and unified access to prompts, projects, traces, and metrics. ",
    "repository": "https://github.com/comet-ml/opik-mcp"
  },
  {
    "name": "io.github.comet-ml/opik",
    "description": "Debug, evaluate, and monitor your LLM applications, RAG systems, and agentic workflows with comprehensive tracing, automated evaluations, and production-ready dashboards.",
    "repository": "https://github.com/comet-ml/opik"
  },
  {
    "name": "io.github.couchbase-ecosystem/mcp-server-couchbase",
    "description": "MCP Server to interact with data in Couchbase Clusters",
    "repository": "https://github.com/Couchbase-Ecosystem/mcp-server-couchbase",
    "packages": [
      {
        "registry": "pypi",
        "name": "mcp-couchbase",
        "version": "0.2.0",
        "command": "pip",
        "arguments": [
          "--directory path/to/cloned/repo/mcp-server-couchbase/",
          "src/mcp_server.py"
        ],
        "environment": [
          {
            "name": "CB_CONNECTION_STRING",
            "description": "couchbases://connection-string"
          },
          {
            "name": "CB_USERNAME",
            "description": "username"
          },
          {
            "name": "CB_PASSWORD",
            "description": "password"
          },
          {
            "name": "CB_BUCKET_NAME",
            "description": "bucket_name"
          }
        ]
      }
    ]
  },
  {
    "name": "io.github.its-dart/dart-mcp-server",
    "description": "Dart AI Model Context Protocol (MCP) server",
    "repository": "https://github.com/its-dart/dart-mcp-server",
    "packages": [
      {
        "registry": "docker",
        "name": "dart-mcp-server",
        "version": "0.1.13",
        "command": "docker",
        "arguments": [
          "-i",
          "--rm",
          "-e DART_TOKEN",
          "mcp/dart"
        ],
        "environment": [
          {
            "name": "DART_TOKEN",
            "description": "dsa_..."
          }
        ]
      }
    ]
  },
  {
    "name": "io.github.devhub/devhub-cms-mcp",
    "description": "DevHub CMS LLM integration through the Model Context Protocol",
    "repository": "https://github.com/devhub/devhub-cms-mcp"
  },
  {
    "name": "io.github.dynatrace-oss/dynatrace-mcp",
    "description": "MCP server for Dynatrace Observability",
    "repository": "https://github.com/dynatrace-oss/dynatrace-mcp"
  },
  {
    "name": "io.github.e2b-dev/mcp-server",
    "description": "Giving Claude ability to run code with E2B via MCP (Model Context Protocol)",
    "repository": "https://github.com/e2b-dev/mcp-server"
  },
  {
    "name": "io.github.edgee-cloud/mcp-server-edgee",
    "description": "io.github.edgee-cloud/mcp-server-edgee",
    "repository": "https://github.com/edgee-cloud/mcp-server-edgee",
    "packages": [
      {
        "registry": "npm",
        "name": "@edgee/mcp-server-edgee",
        "version": "0.1.3",
        "command": "npx",
        "arguments": [
          {
            "name": "-y",
            "description": "Install dependencies"
          },
          {
            "name": "@edgee/mcp-server-edgee@0.1.3",
            "description": "Package name"
          }
        ],
        "environment": [
          {
            "name": "EDGEE_TOKEN",
            "description": "<YOUR_TOKEN>"
          }
        ]
      }
    ]
  },
  {
    "name": "io.github.edubase/mcp",
    "description": "The EduBase MCP server enables Claude and other LLMs to interact with EduBase's comprehensive e-learning platform through the Model Context Protocol (MCP).",
    "repository": "https://github.com/EduBase/MCP",
    "packages": [
      {
        "registry": "docker",
        "name": "@edubase/mcp",
        "version": "1.0.10",
        "command": "docker",
        "arguments": [
          "-i",
          "--rm",
          "-e EDUBASE_API_URL",
          "-e EDUBASE_API_APP",
          "-e EDUBASE_API_KEY",
          "edubase/mcp"
        ],
        "environment": [
          {
            "name": "EDUBASE_API_URL",
            "description": "https://domain.edubase.net/api"
          },
          {
            "name": "EDUBASE_API_APP",
            "description": "your_integration_app_id"
          },
          {
            "name": "EDUBASE_API_KEY",
            "description": "your_integration_secret_key"
          }
        ]
      }
    ]
  },
  {
    "name": "io.github.elastic/mcp-server-elasticsearch",
    "description": "io.github.elastic/mcp-server-elasticsearch",
    "repository": "https://github.com/elastic/mcp-server-elasticsearch"
  },
  {
    "name": "io.github.esignaturescom/mcp-server-esignatures",
    "description": "MCP server for eSignatures (https://esignatures.com)",
    "repository": "https://github.com/esignaturescom/mcp-server-esignatures"
  },
  {
    "name": "io.github.exa-labs/exa-mcp-server",
    "description": "Claude can perform Web Search | Exa with MCP (Model Context Protocol)",
    "repository": "https://github.com/exa-labs/exa-mcp-server",
    "packages": [
      {
        "registry": "npm",
        "name": "exa-mcp-server",
        "version": "0.3.10",
        "command": "npx",
        "arguments": [
          "--tools=web_search_exa,research_paper_search,company_research,crawling,competitor_finder,linkedin_search,wikipedia_search_exa,github_search"
        ],
        "environment": [
          {
            "name": "EXA_API_KEY",
            "description": "your-api-key-here"
          }
        ]
      }
    ]
  },
  {
    "name": "io.github.fewsats/fewsats-mcp",
    "description": "Fewsats MCP server",
    "repository": "https://github.com/Fewsats/fewsats-mcp"
  },
  {
    "name": "io.github.fibery-inc/fibery-mcp-server",
    "description": "io.github.fibery-inc/fibery-mcp-server",
    "repository": "https://github.com/Fibery-inc/fibery-mcp-server",
    "packages": [
      {
        "registry": "pypi",
        "name": "fibery-mcp-server",
        "version": "0.1.3",
        "command": "pip",
        "arguments": [
          "--directory path/to/cloned/fibery-mcp-server",
          "fibery-mcp-server",
          "--fibery-host your-domain.fibery.io",
          "--fibery-api-token your-api-token"
        ]
      }
    ]
  },
  {
    "name": "io.github.financial-datasets/mcp-server",
    "description": "An MCP server for interacting with the Financial Datasets stock market API.",
    "repository": "https://github.com/financial-datasets/mcp-server"
  },
  {
    "name": "io.github.mendableai/firecrawl-mcp-server",
    "description": "Official Firecrawl MCP Server - Adds powerful web scraping to Cursor, Claude and any other LLM clients.",
    "repository": "https://github.com/mendableai/firecrawl-mcp-server"
  },
  {
    "name": "io.github.fireproof-storage/mcp-database-server",
    "description": "Store and load JSON documents from LLM tool use",
    "repository": "https://github.com/fireproof-storage/mcp-database-server"
  },
  {
    "name": "io.github.gibsonai/mcp",
    "description": "GibsonAI's MCP server",
    "repository": "https://github.com/GibsonAI/mcp"
  },
  {
    "name": "io.github.oschina/mcp-gitee",
    "description": "mcp-gitee is a Model Context Protocol (MCP) server implementation for Gitee. It provides a set of tools that interact with Gitee's API, allowing AI assistants to manage repository, issues, pull requests, etc.",
    "repository": "https://github.com/oschina/mcp-gitee"
  },
  {
    "name": "io.github.gleanwork/mcp-server",
    "description": "MCP server for Glean API integration",
    "repository": "https://github.com/gleanwork/mcp-server",
    "packages": [
      {
        "registry": "npm",
        "name": "@gleanwork/mcp-server",
        "version": "0.6.1",
        "command": "npx",
        "arguments": [
          {
            "name": "-y",
            "description": "Install dependencies"
          },
          {
            "name": "@gleanwork/mcp-server@0.6.1",
            "description": "Package name"
          }
        ],
        "environment": [
          {
            "name": "GLEAN_INSTANCE",
            "description": "<glean instance name>"
          },
          {
            "name": "GLEAN_API_TOKEN",
            "description": "<glean api token>"
          }
        ]
      }
    ]
  },
  {
    "name": "io.github.nota/gyazo-mcp-server",
    "description": "Official Model Context Protocol server for Gyazo",
    "repository": "https://github.com/nota/gyazo-mcp-server",
    "packages": [
      {
        "registry": "docker",
        "name": "@notainc/gyazo-mcp-server",
        "version": "0.1.0",
        "command": "docker",
        "arguments": [
          "-i",
          "--rm",
          "-e",
          "GYAZO_ACCESS_TOKEN",
          "gyazo-mcp-server"
        ],
        "environment": [
          {
            "name": "GYAZO_ACCESS_TOKEN",
            "description": "your-access-token-here"
          }
        ]
      }
    ]
  },
  {
    "name": "io.github.gotohuman/gotohuman-mcp-server",
    "description": "io.github.gotohuman/gotohuman-mcp-server",
    "repository": "https://github.com/gotohuman/gotohuman-mcp-server"
  },
  {
    "name": "io.github.grafana/mcp-grafana",
    "description": "MCP server for Grafana",
    "repository": "https://github.com/grafana/mcp-grafana",
    "packages": [
      {
        "registry": "docker",
        "name": "grafana/mcp-grafana",
        "command": "docker",
        "arguments": [
          "--rm",
          "-p 8000:8000",
          "-e GRAFANA_URL",
          "-e GRAFANA_API_KEY",
          "mcp/grafana",
          "-debug"
        ],
        "environment": [
          {
            "name": "GRAFANA_URL",
            "description": "http://localhost:3000"
          },
          {
            "name": "GRAFANA_API_KEY",
            "description": "<your service account token>"
          }
        ]
      }
    ]
  },
  {
    "name": "io.github.graphlit/graphlit-mcp-server",
    "description": "Model Context Protocol (MCP) Server for Graphlit Platform",
    "repository": "https://github.com/graphlit/graphlit-mcp-server",
    "packages": [
      {
        "registry": "npm",
        "name": "graphlit-mcp-server",
        "version": "1.0.0",
        "command": "npx",
        "arguments": [
          {
            "name": "-y",
            "description": "Install dependencies"
          },
          {
            "name": "graphlit-mcp-server@1.0.0",
            "description": "Package name"
          }
        ],
        "environment": [
          {
            "name": "GRAPHLIT_ORGANIZATION_ID",
            "description": "${input:organization_id}"
          },
          {
            "name": "GRAPHLIT_ENVIRONMENT_ID",
            "description": "${input:environment_id}"
          },
          {
            "name": "GRAPHLIT_JWT_SECRET",
            "description": "${input:jwt_secret}"
          }
        ]
      }
    ]
  },
  {
    "name": "io.github.greptimeteam/greptimedb-mcp-server",
    "description": "A Model Context Protocol (MCP) server implementation for GreptimeDB",
    "repository": "https://github.com/GreptimeTeam/greptimedb-mcp-server",
    "packages": [
      {
        "registry": "pypi",
        "name": "greptimedb-mcp-server",
        "version": "0.1.0",
        "command": "pip",
        "environment": [
          {
            "name": "GREPTIMEDB_HOST",
            "description": "localhost"
          },
          {
            "name": "GREPTIMEDB_PORT",
            "description": "4002"
          },
          {
            "name": "GREPTIMEDB_USER",
            "description": "root"
          },
          {
            "name": "GREPTIMEDB_DATABASE",
            "description": "public"
          }
        ]
      }
    ]
  },
  {
    "name": "io.github.greptimeteam/greptimedb",
    "description": "Open-source, cloud-native, unified observability database for metrics, logs and traces, supporting SQL/PromQL/Streaming. Available on GreptimeCloud.",
    "repository": "https://github.com/GreptimeTeam/greptimedb"
  },
  {
    "name": "io.github.heroku/heroku-mcp-server",
    "description": "Heroku Platform MCP Server using the Heroku CLI",
    "repository": "https://github.com/heroku/heroku-mcp-server"
  },
  {
    "name": "io.github.aliyun/alibabacloud-hologres-mcp-server",
    "description": "io.github.aliyun/alibabacloud-hologres-mcp-server",
    "repository": "https://github.com/aliyun/alibabacloud-hologres-mcp-server"
  },
  {
    "name": "io.github.honeycombio/honeycomb-mcp",
    "description": "Allows Honeycomb Enterprise customers to use AI to query and analyze their data, alerts, dashboards, and more; and cross-reference production behavior with the codebase.",
    "repository": "https://github.com/honeycombio/honeycomb-mcp"
  },
  {
    "name": "io.github.hyperbrowserai/mcp",
    "description": "A MCP server implementation for hyperbrowser",
    "repository": "https://github.com/hyperbrowserai/mcp",
    "packages": [
      {
        "registry": "npm",
        "name": "hyperbrowser-mcp",
        "version": "1.0.25",
        "command": "npx",
        "arguments": [
          {
            "name": "-y",
            "description": "Install dependencies"
          },
          {
            "name": "hyperbrowser-mcp@1.0.25",
            "description": "Package name"
          }
        ],
        "environment": [
          {
            "name": "HYPERBROWSER_API_KEY",
            "description": "your-api-key"
          }
        ]
      }
    ]
  },
  {
    "name": "io.github.ibm/wxflows",
    "description": "Examples and tutorials for building AI applications with watsonx.ai Flows Engine",
    "repository": "https://github.com/IBM/wxflows"
  },
  {
    "name": "io.github.jamsocket/forevervm",
    "description": "Securely run AI-generated code in stateful sandboxes that run forever.",
    "repository": "https://github.com/jamsocket/forevervm"
  },
  {
    "name": "io.github.elie222/inbox-zero",
    "description": "The world's best AI personal assistant for email. Open source app to help you reach inbox zero fast.",
    "repository": "https://github.com/elie222/inbox-zero"
  },
  {
    "name": "io.github.inkeep/mcp-server-python",
    "description": "Inkeep MCP Server",
    "repository": "https://github.com/inkeep/mcp-server-python",
    "packages": [
      {
        "registry": "pypi",
        "name": "inkeep-mcp-server",
        "version": "0.1.0",
        "command": "pip",
        "arguments": [
          "--directory <YOUR_INKEEP_MCP_SERVER_ABSOLUTE_PATH>",
          "-m inkeep_mcp_server"
        ],
        "environment": [
          {
            "name": "INKEEP_API_BASE_URL",
            "description": "https://api.inkeep.com/v1"
          },
          {
            "name": "INKEEP_API_KEY",
            "description": "<YOUR_INKEEP_API_KEY>"
          },
          {
            "name": "INKEEP_API_MODEL",
            "description": "inkeep-rag"
          },
          {
            "name": "INKEEP_MCP_TOOL_NAME",
            "description": "search-product-content"
          },
          {
            "name": "INKEEP_MCP_TOOL_DESCRIPTION",
            "description": "Retrieves product documentation about Inkeep. The query should be framed as a conversational question about Inkeep."
          }
        ]
      }
    ]
  },
  {
    "name": "io.github.integration-app/mcp-server",
    "description": "io.github.integration-app/mcp-server",
    "repository": "https://github.com/integration-app/mcp-server",
    "packages": [
      {
        "registry": "npm",
        "name": "@integration-app/mcp-server",
        "version": "1.0.3",
        "command": "npx",
        "arguments": [
          {
            "name": "-y",
            "description": "Install dependencies"
          },
          {
            "name": "@integration-app/mcp-server@1.0.3",
            "description": "Package name"
          }
        ],
        "environment": [
          {
            "name": "INTEGRATION_APP_TOKEN",
            "description": "<your-integration-app-token>"
          },
          {
            "name": "INTEGRATION_KEY",
            "description": "hubspot"
          }
        ]
      }
    ]
  },
  {
    "name": "io.github.jetbrains/mcp-jetbrains",
    "description": "A model context protocol server to work with JetBrains IDEs: IntelliJ, PyCharm, WebStorm, etc. Also, works with Android Studio",
    "repository": "https://github.com/JetBrains/mcp-jetbrains"
  },
  {
    "name": "io.github.kagisearch/kagimcp",
    "description": "A Model Context Protocol (MCP) server for Kagi search & other tools.",
    "repository": "https://github.com/kagisearch/kagimcp",
    "packages": [
      {
        "registry": "pypi",
        "name": "kagimcp",
        "version": "0.1.3",
        "command": "pip",
        "arguments": [
          "--directory /ABSOLUTE/PATH/TO/PARENT/FOLDER/kagimcp",
          "kagimcp"
        ],
        "environment": [
          {
            "name": "KAGI_API_KEY",
            "description": "YOUR_API_KEY_HERE"
          },
          {
            "name": "KAGI_SUMMARIZER_ENGINE",
            "description": "YOUR_ENGINE_CHOICE_HERE"
          }
        ]
      }
    ]
  },
  {
    "name": "io.github.keboola/keboola-mcp-server",
    "description": "Model Context Protocol (MCP) Server for the Keboola Platform",
    "repository": "https://github.com/keboola/mcp-server",
    "packages": [
      {
        "registry": "pypi",
        "name": "keboola-mcp-server",
        "version": "0.17.4",
        "command": "pip",
        "arguments": [
          "-m keboola_mcp_server.cli",
          "--transport stdio",
          "--api-url https://connection.YOUR_REGION.keboola.com"
        ],
        "environment": [
          {
            "name": "KBC_STORAGE_TOKEN",
            "description": "your_keboola_storage_token"
          },
          {
            "name": "KBC_WORKSPACE_SCHEMA",
            "description": "your_workspace_schema"
          }
        ]
      }
    ]
  },
  {
    "name": "io.github.klavis-ai/klavis",
    "description": "Klavis AI (YC X25):  Open Source MCP integration for AI applications",
    "repository": "https://github.com/Klavis-AI/klavis"
  },
  {
    "name": "io.github.translated/lara-mcp",
    "description": "io.github.translated/lara-mcp",
    "repository": "https://github.com/translated/lara-mcp",
    "packages": [
      {
        "registry": "docker",
        "name": "@translated/lara-mcp",
        "version": "0.0.10",
        "command": "docker",
        "arguments": [
          "-i",
          "--rm",
          "-e LARA_ACCESS_KEY_ID",
          "-e LARA_ACCESS_KEY_SECRET"
        ],
        "environment": [
          {
            "name": "LARA_ACCESS_KEY_ID",
            "description": "<YOUR_ACCESS_KEY_ID>"
          },
          {
            "name": "LARA_ACCESS_KEY_SECRET",
            "description": "<YOUR_ACCESS_KEY_SECRET>"
          }
        ]
      }
    ]
  },
  {
    "name": "io.github.pydantic/logfire-mcp",
    "description": "The Logfire MCP Server is here! :tada:",
    "repository": "https://github.com/pydantic/logfire-mcp"
  },
  {
    "name": "io.github.langfuse/mcp-server-langfuse",
    "description": "Model Context Protocol (MCP) Server for Langfuse Prompt Management. This server allows you to access and manage your Langfuse prompts through the Model Context Protocol.",
    "repository": "https://github.com/langfuse/mcp-server-langfuse"
  },
  {
    "name": "io.github.lingodotdev/lingo.dev",
    "description": "⚡️ Open-source AI-powered CLI for web & mobile localization. Bring your own LLM or use Lingo.dev-managed localization engine.",
    "repository": "https://github.com/lingodotdev/lingo.dev"
  },
  {
    "name": "io.github.mailgun/mailgun-mcp-server",
    "description": "Implementation of Model Context Protocol server for Mailgun APIs",
    "repository": "https://github.com/mailgun/mailgun-mcp-server"
  },
  {
    "name": "io.github.integromat/make-mcp-server",
    "description": "Make MCP Server",
    "repository": "https://github.com/integromat/make-mcp-server",
    "packages": [
      {
        "registry": "npm",
        "name": "@makehq/mcp-server",
        "version": "0.5.0",
        "command": "npx",
        "arguments": [
          {
            "name": "-y",
            "description": "Install dependencies"
          },
          {
            "name": "@makehq/mcp-server@0.5.0",
            "description": "Package name"
          }
        ],
        "environment": [
          {
            "name": "MAKE_API_KEY",
            "description": "<your-api-key>"
          },
          {
            "name": "MAKE_ZONE",
            "description": "<your-zone>"
          },
          {
            "name": "MAKE_TEAM",
            "description": "<your-team-id>"
          }
        ]
      }
    ]
  },
  {
    "name": "io.github.googleapis/genai-toolbox",
    "description": "MCP Toolbox for Databases is an open source MCP server for databases.",
    "repository": "https://github.com/googleapis/genai-toolbox"
  },
  {
    "name": "io.github.meilisearch/meilisearch-mcp",
    "description": "A Model Context Protocol (MCP) server for interacting with Meilisearch through LLM interfaces.",
    "repository": "https://github.com/meilisearch/meilisearch-mcp"
  },
  {
    "name": "io.github.memgraph/mcp-memgraph",
    "description": "Memgraph MCP Server",
    "repository": "https://github.com/memgraph/mcp-memgraph"
  },
  {
    "name": "io.github.metoro-io/metoro-mcp-server",
    "description": "Metoro MCP Server",
    "repository": "https://github.com/metoro-io/metoro-mcp-server"
  },
  {
    "name": "io.github.zilliztech/mcp-server-milvus",
    "description": "Model Context Protocol Servers for Milvus",
    "repository": "https://github.com/zilliztech/mcp-server-milvus"
  },
  {
    "name": "io.github.momentohq/mcp-momento",
    "description": "A model context protocol server for Momento",
    "repository": "https://github.com/momentohq/mcp-momento",
    "packages": [
      {
        "registry": "npm",
        "name": "@gomomento/mcp-momento",
        "version": "0.1.0",
        "command": "npx",
        "arguments": [
          {
            "name": "-y",
            "description": "Install dependencies"
          },
          {
            "name": "@gomomento/mcp-momento@0.1.0",
            "description": "Package name"
          }
        ],
        "environment": [
          {
            "name": "MOMENTO_API_KEY",
            "description": "your-api-key"
          },
          {
            "name": "MOMENTO_CACHE_NAME",
            "description": "your-cache-name"
          },
          {
            "name": "DEFAULT_TTL_SECONDS",
            "description": "60"
          }
        ]
      }
    ]
  },
  {
    "name": "io.github.mongodb-js/mongodb-mcp-server",
    "description": "A Model Context Protocol server to connect to MongoDB databases and MongoDB Atlas Clusters.",
    "repository": "https://github.com/mongodb-js/mongodb-mcp-server",
    "packages": [
      {
        "registry": "npm",
        "name": "mongodb-mcp-server",
        "version": "0.1.1",
        "command": "npx",
        "arguments": [
          "--apiClientId your-atlas-service-accounts-client-id",
          "--apiClientSecret your-atlas-service-accounts-client-secret"
        ]
      }
    ]
  },
  {
    "name": "io.github.motherduckdb/mcp-server-motherduck",
    "description": "MCP server for DuckDB and MotherDuck",
    "repository": "https://github.com/motherduckdb/mcp-server-motherduck",
    "packages": [
      {
        "registry": "pypi",
        "name": "mcp-server-motherduck",
        "version": "0.4.2",
        "command": "pip",
        "arguments": [
          "--directory /path/to/your/local/mcp-server-motherduck",
          "mcp-server-motherduck",
          "--db-path md:",
          "--motherduck-token <YOUR_MOTHERDUCK_TOKEN_HERE>"
        ]
      }
    ]
  },
  {
    "name": "io.github.needle-ai/needle-mcp",
    "description": "Integration of Needle in modelcontextprotocol",
    "repository": "https://github.com/needle-ai/needle-mcp",
    "packages": [
      {
        "registry": "pypi",
        "name": "needle-mcp",
        "version": "0.1.0",
        "command": "pip",
        "arguments": [
          "/path/to/needle-mcp",
          "needle-mcp"
        ],
        "environment": [
          {
            "name": "NEEDLE_API_KEY",
            "description": "your_needle_api_key"
          }
        ]
      }
    ]
  },
  {
    "name": "io.github.neo4j-contrib/mcp-neo4j",
    "description": "Model Context Protocol with Neo4j",
    "repository": "https://github.com/neo4j-contrib/mcp-neo4j"
  },
  {
    "name": "io.github.neondatabase/mcp-server-neon",
    "description": "MCP server for interacting with Neon Management API and databases",
    "repository": "https://github.com/neondatabase-labs/mcp-server-neon"
  },
  {
    "name": "io.github.oceanbase/mcp-oceanbase",
    "description": "MCP Server for OceanBase database and its tools",
    "repository": "https://github.com/oceanbase/mcp-oceanbase"
  },
  {
    "name": "io.github.octagonai/octagon-mcp-server",
    "description": "A free MCP server to analyze and extract insights from public filings, earnings transcripts, financial metrics, stock market data, private market transactions, and deep web-based research within Claude Desktop and other popular MCP clients.",
    "repository": "https://github.com/OctagonAI/octagon-mcp-server",
    "packages": [
      {
        "registry": "npm",
        "name": "octagon-mcp",
        "version": "1.0.18",
        "command": "npx",
        "arguments": [
          {
            "name": "-y",
            "description": "Install dependencies"
          },
          {
            "name": "octagon-mcp@1.0.18",
            "description": "Package name"
          }
        ],
        "environment": [
          {
            "name": "OCTAGON_API_KEY",
            "description": "YOUR_API_KEY_HERE"
          }
        ]
      }
    ]
  },
  {
    "name": "io.github.opslevel/opslevel-mcp",
    "description": "Model Context Protocol (MCP) server for OpsLevel",
    "repository": "https://github.com/OpsLevel/opslevel-mcp"
  },
  {
    "name": "io.github.oxylabs/oxylabs-mcp",
    "description": "Official Oxylabs MCP integration",
    "repository": "https://github.com/oxylabs/oxylabs-mcp",
    "packages": [
      {
        "registry": "pypi",
        "name": "oxylabs-mcp",
        "version": "0.2.0",
        "command": "pip",
        "arguments": [
          "--directory /<Absolute-path-to-folder>/oxylabs-mcp",
          "oxylabs-mcp"
        ],
        "environment": [
          {
            "name": "OXYLABS_USERNAME",
            "description": "OXYLABS_USERNAME"
          },
          {
            "name": "OXYLABS_PASSWORD",
            "description": "OXYLABS_PASSWORD"
          }
        ]
      }
    ]
  },
  {
    "name": "io.github.paddlehq/paddle-mcp-server",
    "description": "Interact with the Paddle API using AI assistants like Claude, or in AI-powered IDEs like Cursor. Manage product catalog, billing and subscriptions, and reports.",
    "repository": "https://github.com/PaddleHQ/paddle-mcp-server"
  },
  {
    "name": "io.github.ppl-ai/modelcontextprotocol",
    "description": "A Model Context Protocol Server connector for Perplexity API, to enable web search without leaving the MCP ecosystem.",
    "repository": "https://github.com/ppl-ai/modelcontextprotocol",
    "packages": [
      {
        "registry": "npm",
        "name": "ppl-ai/modelcontextprotocol",
        "command": "npx",
        "arguments": [
          {
            "name": "-y",
            "description": "Install dependencies"
          },
          {
            "name": "ppl-ai/modelcontextprotocol@latest",
            "description": "Package name"
          }
        ],
        "environment": [
          {
            "name": "PERPLEXITY_API_KEY",
            "description": "YOUR_API_KEY_HERE"
          }
        ]
      }
    ]
  },
  {
    "name": "io.github.pinecone-io/pinecone-mcp",
    "description": "Connect your Pinecone projects to Cursor, Claude, and other AI assistants",
    "repository": "https://github.com/pinecone-io/pinecone-mcp"
  },
  {
    "name": "io.github.pinecone-io/assistant-mcp",
    "description": "Pinecone Assistant MCP server",
    "repository": "https://github.com/pinecone-io/assistant-mcp",
    "packages": [
      {
        "registry": "docker",
        "name": "pinecone-io/assistant-mcp",
        "command": "docker",
        "arguments": [
          "-i",
          "--rm",
          "-e PINECONE_API_KEY",
          "-e PINECONE_ASSISTANT_HOST",
          "pinecone/assistant-mcp"
        ],
        "environment": [
          {
            "name": "PINECONE_API_KEY",
            "description": "<YOUR_PINECONE_API_KEY_HERE>"
          },
          {
            "name": "PINECONE_ASSISTANT_HOST",
            "description": "<YOUR_PINECONE_ASSISTANT_HOST_HERE>"
          }
        ]
      }
    ]
  },
  {
    "name": "io.github.ragieai/ragie-mcp-server",
    "description": "Ragie Model Context Protocol Server",
    "repository": "https://github.com/ragieai/ragie-mcp-server",
    "packages": [
      {
        "registry": "npm",
        "name": "@ragieai/mcp-server",
        "version": "0.0.7",
        "command": "npx",
        "arguments": [
          "--partition optional_partition_id"
        ],
        "environment": [
          {
            "name": "RAGIE_API_KEY",
            "description": "your_api_key"
          }
        ]
      }
    ]
  },
  {
    "name": "io.github.redis/mcp-redis",
    "description": "The official Redis MCP Server is a natural language interface designed for agentic applications to manage and search data in Redis efficiently",
    "repository": "https://github.com/redis/mcp-redis",
    "packages": [
      {
        "registry": "npm",
        "name": "redis-mcp-server",
        "version": "0.2.0",
        "command": "npx",
        "arguments": [
          {
            "name": "-y",
            "description": "Install dependencies"
          },
          {
            "name": "redis-mcp-server@0.2.0",
            "description": "Package name"
          }
        ],
        "environment": [
          {
            "name": "API_KEY",
            "description": "${input:apiKey}"
          }
        ]
      }
    ]
  },
  {
    "name": "io.github.redis/mcp-redis-cloud",
    "description": "io.github.redis/mcp-redis-cloud",
    "repository": "https://github.com/redis/mcp-redis-cloud",
    "packages": [
      {
        "registry": "docker",
        "name": "mcp-redis-cloud",
        "version": "1.0.0",
        "command": "docker",
        "arguments": [
          "-i",
          "--rm",
          "-e API_KEY=<your_redis_cloud_api_key>",
          "-e SECRET_KEY=<your_redis_cloud_api_secret_key>"
        ]
      }
    ]
  },
  {
    "name": "io.github.snyk/snyk-ls",
    "description": "Language Server used by IDEs as Snyk Backend for Frontends",
    "repository": "https://github.com/snyk/snyk-ls"
  },
  {
    "name": "io.github.qdrant/mcp-server-qdrant",
    "description": "An official Qdrant Model Context Protocol (MCP) server implementation",
    "repository": "https://github.com/qdrant/mcp-server-qdrant",
    "packages": [
      {
        "registry": "docker",
        "name": "mcp-server-qdrant",
        "version": "0.7.1",
        "command": "docker",
        "arguments": [
          "-p 8000:8000",
          "-i",
          "--rm",
          "-e QDRANT_URL",
          "-e QDRANT_API_KEY",
          "-e COLLECTION_NAME",
          "mcp-server-qdrant"
        ],
        "environment": [
          {
            "name": "QDRANT_URL",
            "description": "${input:qdrantUrl}"
          },
          {
            "name": "QDRANT_API_KEY",
            "description": "${input:qdrantApiKey}"
          },
          {
            "name": "COLLECTION_NAME",
            "description": "${input:collectionName}"
          }
        ]
      }
    ]
  },
  {
    "name": "io.github.ramp-public/ramp-mcp",
    "description": "ramp_mcp",
    "repository": "https://github.com/ramp-public/ramp_mcp",
    "packages": [
      {
        "registry": "pypi",
        "name": "ramp-mcp",
        "version": "0.0.1",
        "command": "pip",
        "arguments": [
          "--directory /<ABSOLUTE-PATH-TO>/ramp-mcp",
          "ramp-mcp",
          "-s",
          "transactions:read,reimbursements:read"
        ],
        "environment": [
          {
            "name": "RAMP_CLIENT_ID",
            "description": "<CLIENT_ID>"
          },
          {
            "name": "RAMP_CLIENT_SECRET",
            "description": "<CLIENT_SECRET>"
          },
          {
            "name": "RAMP_ENV",
            "description": "<demo|qa|prd>"
          }
        ]
      }
    ]
  },
  {
    "name": "io.github.mindscapehq/mcp-server-raygun",
    "description": "io.github.mindscapehq/mcp-server-raygun",
    "repository": "https://github.com/MindscapeHQ/mcp-server-raygun"
  },
  {
    "name": "io.github.rember/rember-mcp",
    "description": "A Model Context Protocol (MCP) server for Rember.",
    "repository": "https://github.com/rember/rember-mcp",
    "packages": [
      {
        "registry": "npm",
        "name": "@getrember/mcp",
        "version": "1.1.3",
        "command": "npx",
        "arguments": [
          "--api-key=YOUR_REMBER_API_KEY"
        ]
      }
    ]
  },
  {
    "name": "io.github.riza-io/riza-mcp",
    "description": "io.github.riza-io/riza-mcp",
    "repository": "https://github.com/riza-io/riza-mcp",
    "packages": [
      {
        "registry": "npm",
        "name": "riza-io/riza-mcp",
        "command": "npx",
        "arguments": [
          {
            "name": "-y",
            "description": "Install dependencies"
          },
          {
            "name": "riza-io/riza-mcp@latest",
            "description": "Package name"
          }
        ],
        "environment": [
          {
            "name": "RIZA_API_KEY",
            "description": "your-api-key"
          }
        ]
      }
    ]
  },
  {
    "name": "io.github.fatwang2/search1api-mcp",
    "description": "io.github.fatwang2/search1api-mcp",
    "repository": "https://github.com/fatwang2/search1api-mcp",
    "packages": [
      {
        "registry": "npm",
        "name": "search1api-mcp",
        "version": "0.2.0",
        "command": "npx",
        "arguments": [
          {
            "name": "-y",
            "description": "Install dependencies"
          },
          {
            "name": "search1api-mcp@0.2.0",
            "description": "Package name"
          }
        ],
        "environment": [
          {
            "name": "SEARCH1API_KEY",
            "description": "YOUR_SEARCH1API_KEY"
          }
        ]
      }
    ]
  },
  {
    "name": "io.github.screenshotone/mcp",
    "description": "A simple implementation of an MCP server for the ScreenshotOne API",
    "repository": "https://github.com/screenshotone/mcp"
  },
  {
    "name": "io.github.semgrep/mcp",
    "description": "A MCP server for using Semgrep to scan code for security vulnerabilities.",
    "repository": "https://github.com/semgrep/mcp"
  },
  {
    "name": "io.github.singlestore-labs/mcp-server-singlestore",
    "description": "MCP server for interacting with SingleStore Management API and services",
    "repository": "https://github.com/singlestore-labs/mcp-server-singlestore"
  },
  {},
  {
    "name": "io.github.stripe/agent-toolkit",
    "description": "Python and TypeScript library for integrating the Stripe API into agentic workflows",
    "repository": "https://github.com/stripe/agent-toolkit"
  },
  {
    "name": "io.github.tavily-ai/tavily-mcp",
    "description": "io.github.tavily-ai/tavily-mcp",
    "repository": "https://github.com/tavily-ai/tavily-mcp",
    "packages": [
      {
        "registry": "npm",
        "name": "tavily-mcp",
        "version": "0.2.0",
        "command": "npx",
        "arguments": [
          {
            "name": "-y",
            "description": "Install dependencies"
          },
          {
            "name": "tavily-mcp@0.2.0",
            "description": "Package name"
          }
        ],
        "environment": [
          {
            "name": "TAVILY_API_KEY",
            "description": "your-api-key-here"
          }
        ]
      }
    ]
  },
  {
    "name": "io.github.thirdweb-dev/ai",
    "description": "io.github.thirdweb-dev/ai",
    "repository": "https://github.com/thirdweb-dev/ai"
  },
  {
    "name": "io.github.msgbyte/tianji",
    "description": "Tianji: Insight into everything, Website Analytics + Uptime Monitor + Server Status. not only another GA alternatives",
    "repository": "https://github.com/msgbyte/tianji"
  },
  {
    "name": "io.github.tinybirdco/mcp-tinybird",
    "description": "io.github.tinybirdco/mcp-tinybird",
    "repository": "https://github.com/tinybirdco/mcp-tinybird"
  },
  {
    "name": "io.github.unifai-network/unifai-mcp-server",
    "description": "io.github.unifai-network/unifai-mcp-server",
    "repository": "https://github.com/unifai-network/unifai-mcp-server"
  },
  {
    "name": "io.github.unstructured-io/uns-mcp",
    "description": "io.github.unstructured-io/uns-mcp",
    "repository": "https://github.com/Unstructured-IO/UNS-MCP",
    "packages": [
      {
        "registry": "pypi",
        "name": "uns_mcp",
        "version": "0.1.6",
        "command": "pip",
        "arguments": [
          "--directory ABSOLUTE/PATH/TO/YOUR-UNS-MCP-REPO/uns_mcp",
          "server.py"
        ]
      }
    ]
  },
  {
    "name": "io.github.vectorize-io/vectorize-mcp-server",
    "description": "Official Vectorize MCP Server",
    "repository": "https://github.com/vectorize-io/vectorize-mcp-server"
  },
  {
    "name": "io.github.verodat/verodat-mcp-server",
    "description": "Verodat MCP Server Implementation",
    "repository": "https://github.com/Verodat/verodat-mcp-server"
  },
  {
    "name": "io.github.veyrax/veyrax-mcp",
    "description": "io.github.veyrax/veyrax-mcp",
    "repository": "https://github.com/VeyraX/veyrax-mcp"
  },
  {
    "name": "io.github.xeroapi/xero-mcp-server",
    "description": "An MCP server that integrates with the MCP protocol. https://modelcontextprotocol.io/introduction",
    "repository": "https://github.com/XeroAPI/xero-mcp-server"
  },
  {
    "name": "io.github.zenml-io/mcp-zenml",
    "description": "MCP server to connect an MCP client (Cursor, Claude Desktop etc) with your ZenML MLOps and LLMOps pipelines",
    "repository": "https://github.com/zenml-io/mcp-zenml",
    "packages": [
      {
        "registry": "pypi",
        "name": "zenml-io/mcp-zenml",
        "command": "pip",
        "arguments": [
          "path/to/zenml_server.py"
        ],
        "environment": [
          {
            "name": "LOGLEVEL",
            "description": "INFO"
          },
          {
            "name": "NO_COLOR",
            "description": "1"
          },
          {
            "name": "PYTHONUNBUFFERED",
            "description": "1"
          },
          {
            "name": "PYTHONIOENCODING",
            "description": "UTF-8"
          },
          {
            "name": "ZENML_STORE_URL",
            "description": "https://your-zenml-server-goes-here.com"
          },
          {
            "name": "ZENML_STORE_API_KEY",
            "description": "your-api-key-here"
          }
        ]
      }
    ]
  },
  {
    "name": "io.github.simon-kansara/ableton-live-mcp-server",
    "description": "MCP Server implementation for Ableton Live OSC control",
    "repository": "https://github.com/Simon-Kansara/ableton-live-mcp-server",
    "packages": [
      {
        "registry": "pypi",
        "name": "ableton-live-mcp-server",
        "version": "0.1.0",
        "command": "pip"
      }
    ]
  },
  {
    "name": "io.github.ahujasid/ableton-mcp",
    "description": "io.github.ahujasid/ableton-mcp",
    "repository": "https://github.com/ahujasid/ableton-mcp"
  },
  {
    "name": "io.github.openbnb-org/mcp-server-airbnb",
    "description": "io.github.openbnb-org/mcp-server-airbnb",
    "repository": "https://github.com/openbnb-org/mcp-server-airbnb",
    "packages": [
      {
        "registry": "npm",
        "name": "@openbnb/mcp-server-airbnb",
        "version": "0.1.1",
        "command": "npx",
        "arguments": [
          "--ignore-robots-txt"
        ]
      }
    ]
  },
  {
    "name": "io.github.ai-agent-hub/ai-agent-marketplace-index-mcp",
    "description": "MCP Server for AI Agent Marketplace Index from DeepNLP",
    "repository": "https://github.com/AI-Agent-Hub/ai-agent-marketplace-index-mcp",
    "packages": [
      {
        "registry": "pypi",
        "name": "ai-agent-marketplace-index-mcp",
        "version": "0.1.0",
        "command": "pip",
        "arguments": [
          "server.py"
        ]
      }
    ]
  },
  {
    "name": "io.github.goplausible/algorand-mcp",
    "description": "Algorand Model Context Protocol (Server & Client)",
    "repository": "https://github.com/GoPlausible/algorand-mcp"
  },
  {
    "name": "io.github.yangkyeongmo/mcp-server-apache-airflow",
    "description": "io.github.yangkyeongmo/mcp-server-apache-airflow",
    "repository": "https://github.com/yangkyeongmo/mcp-server-apache-airflow",
    "packages": [
      {
        "registry": "pypi",
        "name": "mcp-server-apache-airflow",
        "version": "0.2.2",
        "command": "pip",
        "arguments": [
          "--directory /path/to/mcp-server-apache-airflow",
          "mcp-server-apache-airflow"
        ],
        "environment": [
          {
            "name": "AIRFLOW_HOST",
            "description": "https://your-airflow-host"
          },
          {
            "name": "AIRFLOW_USERNAME",
            "description": "your-username"
          },
          {
            "name": "AIRFLOW_PASSWORD",
            "description": "your-password"
          }
        ]
      }
    ]
  },
  {
    "name": "io.github.domdomegg/airtable-mcp-server",
    "description": "🗂️🤖 Airtable Model Context Protocol Server, for allowing AI systems to interact with your Airtable bases",
    "repository": "https://github.com/domdomegg/airtable-mcp-server",
    "packages": [
      {
        "registry": "npm",
        "name": "airtable-mcp-server",
        "version": "1.4.1",
        "command": "npx",
        "arguments": [
          {
            "name": "-y",
            "description": "Install dependencies"
          },
          {
            "name": "airtable-mcp-server@1.4.1",
            "description": "Package name"
          }
        ],
        "environment": [
          {
            "name": "AIRTABLE_API_KEY",
            "description": "pat123.abc123"
          }
        ]
      }
    ]
  },
  {
    "name": "io.github.felores/airtable-mcp",
    "description": "Search, create and update Airtable bases, tables, fields, and records using Claude Desktop and MCP (Model Context Protocol) clients",
    "repository": "https://github.com/felores/airtable-mcp"
  },
  {
    "name": "io.github.calvernaz/alphavantage",
    "description": "A MCP server for the stock market data API, Alphavantage API.",
    "repository": "https://github.com/calvernaz/alphavantage"
  },
  {
    "name": "io.github.donghyun-chae/mcp-amadeus",
    "description": "Amadeus MCP(Model Context Protocol) Server",
    "repository": "https://github.com/donghyun-chae/mcp-amadeus"
  },
  {
    "name": "io.github.scorzeth/anki-mcp-server",
    "description": "An MCP server for Anki",
    "repository": "https://github.com/scorzeth/anki-mcp-server"
  },
  {},
  {
    "name": "io.github.datastrato/mcp-server-gravitino",
    "description": "MCP server for Apache Gravitino(incubating)",
    "repository": "https://github.com/datastrato/mcp-server-gravitino",
    "packages": [
      {
        "registry": "pypi",
        "name": "mcp-server-gravitino",
        "version": "0.1.0",
        "command": "pip",
        "arguments": [
          "--directory /Users/user/workspace/mcp-server-gravitino",
          "--with fastmcp",
          "--with httpx",
          "--with mcp-server-gravitino",
          "python",
          "-m mcp_server_gravitino.server"
        ],
        "environment": [
          {
            "name": "GRAVITINO_URI",
            "description": "http://localhost:8090"
          },
          {
            "name": "GRAVITINO_USERNAME",
            "description": "admin"
          },
          {
            "name": "GRAVITINO_PASSWORD",
            "description": "admin"
          },
          {
            "name": "GRAVITINO_METALAKE",
            "description": "metalake_demo"
          }
        ]
      }
    ]
  },
  {
    "name": "io.github.omar-v2/mcp-ical",
    "description": "A Model Context Protocol Server that allows you to interact with your MacOS Calendar through natural language.",
    "repository": "https://github.com/Omar-V2/mcp-ical",
    "packages": [
      {
        "registry": "pypi",
        "name": "mcp-ical",
        "version": "0.1.0",
        "command": "pip",
        "arguments": [
          "mcp-ical"
        ]
      }
    ]
  },
  {
    "name": "io.github.peakmojo/applescript-mcp",
    "description": "MCP server that execute applescript giving you full control of your Mac",
    "repository": "https://github.com/peakmojo/applescript-mcp",
    "packages": [
      {
        "registry": "npm",
        "name": "mcp-server-applescript",
        "version": "0.1.0",
        "command": "npx",
        "arguments": [
          {
            "name": "-y",
            "description": "Install dependencies"
          },
          {
            "name": "mcp-server-applescript@0.1.0",
            "description": "Package name"
          }
        ]
      }
    ]
  },
  {
    "name": "io.github.diegobit/aranet4-mcp-server",
    "description": "SImple MCP server to manage your aranet4 device and local db.",
    "repository": "https://github.com/diegobit/aranet4-mcp-server"
  },
  {
    "name": "io.github.ravenwits/mcp-server-arangodb",
    "description": "This is a TypeScript-based MCP server that provides database interaction capabilities through ArangoDB. It implements core database operations and allows seamless integration with ArangoDB through MCP tools. You can use it wih Claude app and also extension for VSCode that works with mcp like Cline!",
    "repository": "https://github.com/ravenwits/mcp-server-arangodb"
  },
  {
    "name": "io.github.vishalmysore/choturobo",
    "description": "Integrate Arduino-based robotics (using the NodeMCU ESP32 or Arduino Nano 368 board) with AI using the MCP (Model Context Protocol) framework from Claude Anthropic",
    "repository": "https://github.com/vishalmysore/choturobo"
  },
  {
    "name": "io.github.sooperset/mcp-atlassian",
    "description": "MCP server for Atlassian tools (Confluence, Jira)",
    "repository": "https://github.com/sooperset/mcp-atlassian"
  },
  {
    "name": "io.github.co-browser/attestable-mcp-server",
    "description": "Verify that any MCP server is running the intended and untampered code via hardware attestation.",
    "repository": "https://github.com/co-browser/attestable-mcp-server"
  },
  {
    "name": "io.github.rishikavikondala/mcp-server-aws",
    "description": "A Model Context Protocol server implementation for operations on AWS resources",
    "repository": "https://github.com/rishikavikondala/mcp-server-aws"
  },
  {
    "name": "io.github.lishenxydlgzs/aws-athena-mcp",
    "description": "MCP server to run AWS Athena queries",
    "repository": "https://github.com/lishenxydlgzs/aws-athena-mcp"
  },
  {
    "name": "io.github.aarora79/aws-cost-explorer-mcp-server",
    "description": "MCP server for understanding AWS spend",
    "repository": "https://github.com/aarora79/aws-cost-explorer-mcp-server",
    "packages": [
      {
        "registry": "pypi",
        "name": "aws-cost-explorer-mcp",
        "version": "0.1.0",
        "command": "pip",
        "arguments": [
          "--directory /path/to/aws-cost-explorer-mcp-server",
          "server.py"
        ],
        "environment": [
          {
            "name": "AWS_ACCESS_KEY_ID",
            "description": "YOUR_ACCESS_KEY_ID"
          },
          {
            "name": "AWS_SECRET_ACCESS_KEY",
            "description": "YOUR_SECRET_ACCESS_KEY"
          },
          {
            "name": "AWS_REGION",
            "description": "us-east-1"
          },
          {
            "name": "BEDROCK_LOG_GROUP_NAME",
            "description": "YOUR_CLOUDWATCH_BEDROCK_MODEL_INVOCATION_LOG_GROUP_NAME"
          },
          {
            "name": "CROSS_ACCOUNT_ROLE_NAME",
            "description": "ROLE_NAME_FOR_THE_ROLE_TO_ASSUME_IN_OTHER_ACCOUNTS"
          },
          {
            "name": "MCP_TRANSPORT",
            "description": "stdio"
          }
        ]
      }
    ]
  },
  {
    "name": "io.github.baryhuang/mcp-server-aws-resources-python",
    "description": "A Python-based MCP server that lets Claude run boto3 code to query and manage AWS resources. Execute powerful AWS operations directly through Claude with proper sandboxing and containerization. No need for complex setups - just pass your AWS credentials and start interacting with all AWS services.",
    "repository": "https://github.com/baryhuang/mcp-server-aws-resources-python",
    "packages": [
      {
        "registry": "docker",
        "name": "mcp-server-aws-resources",
        "version": "0.1.0",
        "command": "docker",
        "arguments": [
          "-i",
          "--rm",
          "-e AWS_PROFILE=default",
          "-v ~/.aws:/root/.aws",
          "buryhuang/mcp-server-aws-resources:latest"
        ]
      }
    ]
  },
  {
    "name": "io.github.aws-samples/sample-mcp-server-s3",
    "description": "io.github.aws-samples/sample-mcp-server-s3",
    "repository": "https://github.com/aws-samples/sample-mcp-server-s3"
  },
  {
    "name": "io.github.pab1it0/adx-mcp-server",
    "description": "A Model Context Protocol (MCP) server that enables AI assistants to query and analyze Azure Data Explorer databases through standardized interfaces.",
    "repository": "https://github.com/pab1it0/adx-mcp-server",
    "packages": [
      {
        "registry": "docker",
        "name": "adx_mcp_server",
        "version": "1.0.9",
        "command": "docker",
        "arguments": [
          "--rm",
          "-i",
          "-e ADX_CLUSTER_URL",
          "-e ADX_DATABASE",
          "-e AZURE_TENANT_ID",
          "-e AZURE_CLIENT_ID",
          "-e ADX_TOKEN_FILE_PATH",
          "adx-mcp-server"
        ],
        "environment": [
          {
            "name": "ADX_CLUSTER_URL",
            "description": "https://yourcluster.region.kusto.windows.net"
          },
          {
            "name": "ADX_DATABASE",
            "description": "your_database"
          },
          {
            "name": "AZURE_TENANT_ID",
            "description": "your_tenant_id"
          },
          {
            "name": "AZURE_CLIENT_ID",
            "description": "your_client_id"
          },
          {
            "name": "ADX_TOKEN_FILE_PATH",
            "description": "/var/run/secrets/azure/tokens/azure-identity-token"
          }
        ]
      }
    ]
  },
  {
    "name": "io.github.vortiago/mcp-azure-devops",
    "description": "A Model Context Protocol (MCP) server enabling AI assistants to interact with Azure DevOps services via Python SDK.",
    "repository": "https://github.com/Vortiago/mcp-azure-devops"
  },
  {
    "name": "io.github.baidubce/app-builder",
    "description": "appbuilder-sdk, 千帆AppBuilder-SDK帮助开发者灵活、快速的搭建AI原生应用",
    "repository": "https://github.com/baidubce/app-builder",
    "packages": [
      {
        "registry": "npm",
        "name": "baidubce/app-builder",
        "command": "npx",
        "arguments": [
          {
            "name": "-y",
            "description": "Install dependencies"
          },
          {
            "name": "baidubce/app-builder@latest",
            "description": "Package name"
          }
        ],
        "environment": [
          {
            "name": "API_KEY",
            "description": "${input:apiKey}"
          }
        ]
      }
    ]
  },
  {
    "name": "io.github.magnetai/mcp-free-usdc-transfer",
    "description": "MCP (Model Context Protocol) server - free usdc transfer powered by Coinbase CDP",
    "repository": "https://github.com/magnetai/mcp-free-usdc-transfer",
    "packages": [
      {
        "registry": "npm",
        "name": "@magnetai/free-usdc-transfer",
        "version": "0.1.5",
        "command": "npx",
        "arguments": [
          {
            "name": "-y",
            "description": "Install dependencies"
          },
          {
            "name": "@magnetai/free-usdc-transfer@0.1.5",
            "description": "Package name"
          }
        ],
        "environment": [
          {
            "name": "COINBASE_CDP_API_KEY_NAME",
            "description": "YOUR_COINBASE_CDP_API_KEY_NAME"
          },
          {
            "name": "COINBASE_CDP_PRIVATE_KEY",
            "description": "YOUR_COINBASE_CDP_PRIVATE_KEY"
          }
        ]
      }
    ]
  },
  {
    "name": "io.github.basicmachines-co/basic-memory",
    "description": "Basic Memory is a knowledge management system that allows you to build a persistent semantic graph from conversations with AI assistants, stored in standard Markdown files on your computer. Integrates directly with Obsidan.md",
    "repository": "https://github.com/basicmachines-co/basic-memory"
  },
  {
    "name": "io.github.lucashild/mcp-server-bigquery",
    "description": "A Model Context Protocol server that provides access to BigQuery",
    "repository": "https://github.com/LucasHild/mcp-server-bigquery"
  },
  {
    "name": "io.github.ergut/mcp-bigquery-server",
    "description": "A Model Context Protocol (MCP) server that provides secure, read-only access to BigQuery datasets. Enables Large Language Models (LLMs) to safely query and analyze data through a standardized interface.",
    "repository": "https://github.com/ergut/mcp-bigquery-server"
  },
  {
    "name": "io.github.leehanchung/bing-search-mcp",
    "description": "MCP Server for Bing Search API",
    "repository": "https://github.com/leehanchung/bing-search-mcp"
  },
  {
    "name": "io.github.lloydzhou/bitable-mcp",
    "description": "This MCP server provides access to Lark Bitable through the Model Context Protocol. It allows users to interact with Bitable tables using predefined tools.",
    "repository": "https://github.com/lloydzhou/bitable-mcp"
  },
  {
    "name": "io.github.ahujasid/blender-mcp",
    "description": "io.github.ahujasid/blender-mcp",
    "repository": "https://github.com/ahujasid/blender-mcp"
  },
  {
    "name": "io.github.agree-able/room-mcp",
    "description": "Allow MCP clients like claude-desktop to use rooms to coordinate with other agents",
    "repository": "https://github.com/agree-able/room-mcp"
  },
  {
    "name": "io.github.co-browser/browser-use-mcp-server",
    "description": "Browse the web, directly from Cursor etc.",
    "repository": "https://github.com/co-browser/browser-use-mcp-server"
  },
  {
    "name": "io.github.termix-official/bsc-mcp",
    "description": "io.github.termix-official/bsc-mcp",
    "repository": "https://github.com/TermiX-official/bsc-mcp"
  },
  {
    "name": "io.github.githejie/mcp-server-calculator",
    "description": "A Model Context Protocol server for calculating.",
    "repository": "https://github.com/githejie/mcp-server-calculator"
  },
  {
    "name": "io.github.lenwood/cfbd-mcp-server",
    "description": "An MCP server enabling CFBD API queries within Claude Desktop.",
    "repository": "https://github.com/lenwood/cfbd-mcp-server",
    "packages": [
      {
        "registry": "pypi",
        "name": "cfbd-mcp-server",
        "version": "0.5.0",
        "command": "pip",
        "arguments": [
          "cfbd-mcp-server"
        ],
        "environment": [
          {
            "name": "CFB_API_KEY",
            "description": "xxx"
          },
          {
            "name": "PATH",
            "description": "/full/path/to/python"
          }
        ]
      }
    ]
  },
  {
    "name": "io.github.ai-ql/chat-mcp",
    "description": "A Desktop Chat App that leverages MCP(Model Context Protocol) to interface with other LLMs.",
    "repository": "https://github.com/AI-QL/chat-mcp"
  },
  {
    "name": "io.github.mcpso/mcp-server-chatsum",
    "description": "Query and Summarize your chat messages.",
    "repository": "https://github.com/chatmcp/mcp-server-chatsum"
  },
  {
    "name": "io.github.pab1it0/chess-mcp",
    "description": "A Model Context Protocol server for Chess.com's Published Data API.  This provides access to Chess.com player data, game records, and other public information through standardized MCP interfaces, allowing AI assistants to search and analyze chess information.",
    "repository": "https://github.com/pab1it0/chess-mcp",
    "packages": [
      {
        "registry": "pypi",
        "name": "chess_mcp",
        "version": "0.1.0",
        "command": "pip",
        "arguments": [
          "--directory <full path to chess-mcp directory>",
          "run src/chess_mcp/main.py"
        ]
      }
    ]
  },
  {
    "name": "io.github.privetin/chroma",
    "description": "MCP server for Chroma",
    "repository": "https://github.com/privetin/chroma",
    "packages": [
      {
        "registry": "pypi",
        "name": "chroma",
        "version": "0.1.0",
        "command": "pip",
        "arguments": [
          "--directory C:/MCP/server/community/chroma",
          "chroma"
        ]
      }
    ]
  },
  {
    "name": "io.github.zilongxue/claude-post",
    "description": "ClaudePost enables seamless email management through natural language conversations with Claude, offering secure features like email search, reading, and sending.",
    "repository": "https://github.com/ZilongXue/claude-post",
    "packages": [
      {
        "registry": "pypi",
        "name": "email_client",
        "version": "0.1.0",
        "command": "pip",
        "arguments": [
          "--directory /path/to/claude-post/src/email_client",
          "email-client"
        ]
      }
    ]
  },
  {
    "name": "io.github.taazkareem/clickup-mcp-server",
    "description": "ClickUp MCP Server - Integrate ClickUp task management with AI through Model Context Protocol",
    "repository": "https://github.com/taazkareem/clickup-mcp-server",
    "packages": [
      {
        "registry": "npm",
        "name": "@taazkareem/clickup-mcp-server",
        "version": "0.7.2",
        "command": "npx",
        "arguments": [
          {
            "name": "-y",
            "description": "Install dependencies"
          },
          {
            "name": "@taazkareem/clickup-mcp-server@0.7.2",
            "description": "Package name"
          }
        ],
        "environment": [
          {
            "name": "CLICKUP_API_KEY",
            "description": "your-api-key"
          },
          {
            "name": "CLICKUP_TEAM_ID",
            "description": "your-team-id"
          },
          {
            "name": "ENABLE_SSE",
            "description": "true"
          },
          {
            "name": "PORT",
            "description": "8000"
          }
        ]
      }
    ]
  },
  {
    "name": "io.github.felores/cloudinary-mcp-server",
    "description": "MCP (Model Context Protocol) server for uploading media to Cloudinary using Claude Desktop",
    "repository": "https://github.com/felores/cloudinary-mcp-server"
  },
  {
    "name": "io.github.stippi/code-assistant",
    "description": "An LLM-powered, autonomous coding assistant. Also offers an MCP mode.",
    "repository": "https://github.com/stippi/code-assistant"
  },
  {
    "name": "io.github.bazinga012/mcp_code_executor",
    "description": "The MCP Code Executor is an MCP server that allows LLMs to execute Python code within a specified Conda environment.",
    "repository": "https://github.com/bazinga012/mcp_code_executor"
  },
  {
    "name": "io.github.automata-labs-team/code-sandbox-mcp",
    "description": "An MCP server to create secure code sandbox environment for executing code within Docker containers. This MCP server provides AI applications with a safe and isolated environment for running code while maintaining security through containerization.",
    "repository": "https://github.com/Automata-Labs-team/code-sandbox-mcp"
  },
  {
    "name": "io.github.kocierik/consul-mcp-server",
    "description": "A consul MCP Server (modelcontextprotocol) ",
    "repository": "https://github.com/kocierik/consul-mcp-server"
  },
  {
    "name": "io.github.topoteretes/cognee",
    "description": "Memory for AI Agents in 5 lines of code",
    "repository": "https://github.com/topoteretes/cognee"
  },
  {
    "name": "io.github.longmans/coin_api_mcp",
    "description": "A Model Context Protocol server that provides access to CoinMarketCap's cryptocurrency data. This server enables AI-powered applications to retrieve cryptocurrency listings, quotes, and detailed information about various coins.",
    "repository": "https://github.com/longmans/coin_api_mcp"
  },
  {
    "name": "io.github.shinzo-labs/coinmarketcap-mcp",
    "description": "MCP Implementation for CoinMarketCap",
    "repository": "https://github.com/shinzo-labs/coinmarketcap-mcp"
  },
  {
    "name": "io.github.baryhuang/mcp-remote-macos-use",
    "description": "The only general AI agent that does NOT requires extra API key, giving you full control on your local and remote MacOs from Claude Desktop App",
    "repository": "https://github.com/baryhuang/mcp-remote-macos-use",
    "packages": [
      {
        "registry": "docker",
        "name": "mcp_remote_macos_use",
        "version": "0.1.0",
        "command": "docker",
        "arguments": [
          "-e MACOS_USERNAME=your_macos_username",
          "-e MACOS_PASSWORD=your_macos_password",
          "-e MACOS_HOST=your_macos_hostname_or_ip",
          "--rm",
          "buryhuang/mcp-remote-macos-use:latest"
        ]
      }
    ]
  },
  {
    "name": "io.github.ivo-toby/contentful-mcp",
    "description": "MCP (Model Context Protocol) server for the Contentful Management API",
    "repository": "https://github.com/ivo-toby/contentful-mcp",
    "packages": [
      {
        "registry": "npm",
        "name": "@ivotoby/contentful-management-mcp-server",
        "version": "1.14.0",
        "command": "npx",
        "arguments": [
          "--management-token <your token>",
          "--host http://api.contentful.com"
        ]
      }
    ]
  },
  {
    "name": "io.github.spgoodman/createveai-nexus-server",
    "description": "Createve.AI Nexus Server: MCP and API bridge for ComfyUI-node compatible LLM and agent use",
    "repository": "https://github.com/spgoodman/createveai-nexus-server"
  },
  {
    "name": "io.github.kukapay/crypto-feargreed-mcp",
    "description": "Providing real-time and historical Crypto Fear & Greed Index data",
    "repository": "https://github.com/kukapay/crypto-feargreed-mcp"
  },
  {
    "name": "io.github.kukapay/crypto-indicators-mcp",
    "description": "An MCP server providing a range of cryptocurrency technical analysis indicators and strategies.",
    "repository": "https://github.com/kukapay/crypto-indicators-mcp"
  },
  {
    "name": "io.github.kukapay/crypto-sentiment-mcp",
    "description": "An MCP server that delivers cryptocurrency sentiment analysis to AI agents.",
    "repository": "https://github.com/kukapay/crypto-sentiment-mcp",
    "packages": [
      {
        "registry": "npm",
        "name": "crypto-sentiment-mcp",
        "version": "0.1.0",
        "command": "npx",
        "arguments": [
          {
            "name": "-y",
            "description": "Install dependencies"
          },
          {
            "name": "crypto-sentiment-mcp@0.1.0",
            "description": "Package name"
          }
        ],
        "environment": [
          {
            "name": "API_KEY",
            "description": "${input:apiKey}"
          }
        ]
      }
    ]
  },
  {
    "name": "io.github.kukapay/cryptopanic-mcp-server",
    "description": "Provide latest cryptocurrency news to AI agents.",
    "repository": "https://github.com/kukapay/cryptopanic-mcp-server"
  },
  {
    "name": "io.github.dappierai/dappier-mcp",
    "description": "Enable fast, free real-time web search and access premium data from trusted media brands—news, financial markets, sports, entertainment, weather, and more. Build powerful AI agents with Dappier.",
    "repository": "https://github.com/DappierAI/dappier-mcp"
  },
  {
    "name": "io.github.jordineil/mcp-databricks-server",
    "description": "MCP Server for Databricks",
    "repository": "https://github.com/JordiNeil/mcp-databricks-server"
  },
  {
    "name": "io.github.geli2001/datadog-mcp-server",
    "description": "MCP server interacts with the official Datadog API",
    "repository": "https://github.com/GeLi2001/datadog-mcp-server",
    "packages": [
      {
        "registry": "npm",
        "name": "datadog-mcp-server",
        "version": "1.0.8",
        "command": "npx",
        "arguments": [
          "--apiKey <YOUR_API_KEY>",
          "--appKey <YOUR_APP_KEY>",
          "--site <YOUR_DD_SITE>",
          "--logsSite <YOUR_LOGS_SITE>",
          "--metricsSite <YOUR_METRICS_SITE>"
        ]
      }
    ]
  },
  {
    "name": "io.github.reading-plus-ai/mcp-server-data-exploration",
    "description": "io.github.reading-plus-ai/mcp-server-data-exploration",
    "repository": "https://github.com/reading-plus-ai/mcp-server-data-exploration"
  },
  {
    "name": "io.github.samuelgursky/davinci-resolve-mcp",
    "description": "MCP server integration for DaVinci Resolve",
    "repository": "https://github.com/samuelgursky/davinci-resolve-mcp",
    "packages": [
      {
        "registry": "pypi",
        "name": "samuelgursky/davinci-resolve-mcp",
        "command": "pip"
      }
    ]
  },
  {
    "name": "io.github.privetin/dataset-viewer",
    "description": "MCP server for Hugging Face dataset viewer",
    "repository": "https://github.com/privetin/dataset-viewer",
    "packages": [
      {
        "registry": "pypi",
        "name": "dataset-viewer",
        "version": "0.1.0",
        "command": "pip",
        "arguments": [
          "dataset-viewer"
        ]
      }
    ]
  },
  {},
  {
    "name": "io.github.snagasuri/deebo-prototype",
    "description": "Autonomous debugging agent MCP server",
    "repository": "https://github.com/snagasuri/deebo-prototype"
  },
  {
    "name": "io.github.reading-plus-ai/mcp-server-deep-research",
    "description": "io.github.reading-plus-ai/mcp-server-deep-research",
    "repository": "https://github.com/reading-plus-ai/mcp-server-deep-research"
  },
  {
    "name": "io.github.dmontgomery40/deepseek-mcp-server",
    "description": "Model Context Protocol server for DeepSeek's advanced language models",
    "repository": "https://github.com/DMontgomery40/deepseek-mcp-server",
    "packages": [
      {
        "registry": "npm",
        "name": "deepseek-mcp-server",
        "version": "0.2.1",
        "command": "npx",
        "arguments": [
          {
            "name": "-y",
            "description": "Install dependencies"
          },
          {
            "name": "deepseek-mcp-server@0.2.1",
            "description": "Package name"
          }
        ],
        "environment": [
          {
            "name": "DEEPSEEK_API_KEY",
            "description": "your-api-key"
          }
        ]
      }
    ]
  },
  {
    "name": "io.github.66julienmartin/mcp-server-deepseek_r1",
    "description": "A Model Context Protocol (MCP) server implementation connecting Claude Desktop with DeepSeek's language models (R1/V3)",
    "repository": "https://github.com/66julienmartin/MCP-server-Deepseek_R1"
  },
  {
    "name": "io.github.ruixingshi/deepseek-thinker-mcp",
    "description": "A MCP provider Deepseek reasoning content to MCP-enabled AI Clients, like Claude Desktop. Supports access to Deepseek's CoT from the Deepseek API service or a local Ollama server.",
    "repository": "https://github.com/ruixingshi/deepseek-thinker-mcp"
  },
  {
    "name": "io.github.descope-sample-apps/descope-mcp-server",
    "description": "io.github.descope-sample-apps/descope-mcp-server",
    "repository": "https://github.com/descope-sample-apps/descope-mcp-server-stdio"
  },
  {
    "name": "io.github.kpsunil97/devrev-mcp-server",
    "description": "io.github.kpsunil97/devrev-mcp-server",
    "repository": "https://github.com/kpsunil97/devrev-mcp-server"
  },
  {
    "name": "io.github.christianhinge/dicom-mcp",
    "description": "Model Context Protocol (MCP) for interacting with dicom servers (PACS etc.)",
    "repository": "https://github.com/ChristianHinge/dicom-mcp",
    "packages": [
      {
        "registry": "pypi",
        "name": "dicom-mcp",
        "version": "0.1.1",
        "command": "pip",
        "arguments": [
          "--directory path/to/cloned/dicom-mcp",
          "dicom-mcp",
          "/path/to/your_config.yaml"
        ]
      }
    ]
  },
  {
    "name": "io.github.yanxingliu/dify-mcp-server",
    "description": "Model Context Protocol (MCP) Server for dify workflows",
    "repository": "https://github.com/YanxingLiu/dify-mcp-server",
    "packages": [
      {
        "registry": "pypi",
        "name": "dify-mcp-server",
        "version": "0.1.1",
        "command": "pip",
        "arguments": [
          "--directory /Users/lyx/Downloads/dify-mcp-server",
          "dify_mcp_server"
        ],
        "environment": [
          {
            "name": "DIFY_BASE_URL",
            "description": "https://cloud.dify.ai/v1"
          },
          {
            "name": "DIFY_APP_SKS",
            "description": "app-sk1,app-sk2"
          }
        ]
      }
    ]
  },
  {
    "name": "io.github.v-3/discordmcp",
    "description": "Discord MCP Server for Claude Integration",
    "repository": "https://github.com/v-3/discordmcp"
  },
  {
    "name": "io.github.saseq/discord-mcp",
    "description": "A MCP server for the Discord integration. Enable your AI assistants to seamlessly interact with Discord. Enhance your Discord experience with powerful automation capabilities.",
    "repository": "https://github.com/SaseQ/discord-mcp",
    "packages": [
      {
        "registry": "npm",
        "name": "SaseQ/discord-mcp",
        "command": "npx",
        "arguments": [
          "https://gitmcp.io/SaseQ/discord-mcp"
        ],
        "environment": [
          {
            "name": "DISCORD_TOKEN",
            "description": "YOUR_DISCORD_BOT_TOKEN"
          }
        ]
      }
    ]
  },
  {
    "name": "io.github.ashdevfr/discourse-mcp-server",
    "description": "io.github.ashdevfr/discourse-mcp-server",
    "repository": "https://github.com/AshDevFr/discourse-mcp-server",
    "packages": [
      {
        "registry": "npm",
        "name": "@ashdev/discourse-mcp-server",
        "version": "1.0.2",
        "command": "npx",
        "arguments": [
          {
            "name": "-y",
            "description": "Install dependencies"
          },
          {
            "name": "@ashdev/discourse-mcp-server@1.0.2",
            "description": "Package name"
          }
        ],
        "environment": [
          {
            "name": "DISCOURSE_API_URL",
            "description": "https://try.discourse.org"
          },
          {
            "name": "DISCOURSE_API_KEY",
            "description": "1234"
          },
          {
            "name": "DISCOURSE_API_USERNAME",
            "description": "ash"
          }
        ]
      }
    ]
  },
  {
    "name": "io.github.ckreiling/mcp-server-docker",
    "description": "MCP server for Docker",
    "repository": "https://github.com/ckreiling/mcp-server-docker"
  },
  {
    "name": "io.github.szeider/mcp-dblp",
    "description": "A Model Context Protocol (MCP) server that provides access to the DBLP computer science bibliography database for Large Language Models.",
    "repository": "https://github.com/szeider/mcp-dblp"
  },
  {
    "name": "io.github.omedia/mcp-server-drupal",
    "description": "TS based companion MCP server for the Drupal MCP module that works with the STDIO transport.",
    "repository": "https://github.com/Omedia/mcp-server-drupal",
    "packages": [
      {
        "registry": "docker",
        "name": "Omedia/mcp-server-drupal",
        "command": "docker"
      }
    ]
  },
  {
    "name": "io.github.kukapay/dune-analytics-mcp",
    "description": "A mcp server that bridges Dune Analytics data to AI agents.",
    "repository": "https://github.com/kukapay/dune-analytics-mcp"
  },
  {
    "name": "io.github.tencentedgeone/edgeone-pages-mcp",
    "description": "An MCP service designed for deploying HTML content to EdgeOne Pages and obtaining an accessible public URL.",
    "repository": "https://github.com/TencentEdgeOne/edgeone-pages-mcp"
  },
  {
    "name": "io.github.edwin-finance/edwin",
    "description": "Empowering AI agents to dominate DeFAI",
    "repository": "https://github.com/edwin-finance/edwin"
  },
  {},
  {
    "name": "io.github.mamertofabian/elevenlabs-mcp-server",
    "description": "io.github.mamertofabian/elevenlabs-mcp-server",
    "repository": "https://github.com/mamertofabian/elevenlabs-mcp-server",
    "packages": [
      {
        "registry": "pypi",
        "name": "elevenlabs-mcp-server",
        "version": "0.1.1",
        "command": "pip",
        "arguments": [
          "--directory path/to/elevenlabs-mcp-server",
          "elevenlabs-mcp-server"
        ],
        "environment": [
          {
            "name": "ELEVENLABS_API_KEY",
            "description": "your-api-key"
          },
          {
            "name": "ELEVENLABS_VOICE_ID",
            "description": "your-voice-id"
          },
          {
            "name": "ELEVENLABS_MODEL_ID",
            "description": "eleven_flash_v2"
          },
          {
            "name": "ELEVENLABS_STABILITY",
            "description": "0.5"
          },
          {
            "name": "ELEVENLABS_SIMILARITY_BOOST",
            "description": "0.75"
          },
          {
            "name": "ELEVENLABS_STYLE",
            "description": "0.1"
          },
          {
            "name": "ELEVENLABS_OUTPUT_DIR",
            "description": "output"
          }
        ]
      }
    ]
  },
  {
    "name": "io.github.shy2593666979/mcp-server-email",
    "description": "io.github.shy2593666979/mcp-server-email",
    "repository": "https://github.com/Shy2593666979/mcp-server-email"
  },
  {
    "name": "io.github.whataboutyou-ai/eunomia-mcp-server",
    "description": "io.github.whataboutyou-ai/eunomia-mcp-server",
    "repository": "https://github.com/whataboutyou-ai/eunomia-mcp-server"
  },
  {
    "name": "io.github.mcpdotdirect/evm-mcp-server",
    "description": "MCP server that provides LLM with tools for interacting with EVM networks",
    "repository": "https://github.com/mcpdotdirect/evm-mcp-server"
  },
  {
    "name": "io.github.mamertofabian/mcp-everything-search",
    "description": "io.github.mamertofabian/mcp-everything-search",
    "repository": "https://github.com/mamertofabian/mcp-everything-search",
    "packages": [
      {
        "registry": "pypi",
        "name": "mcp-server-everything-search",
        "version": "0.2.1",
        "command": "pip",
        "arguments": [
          "--directory /path/to/mcp-everything-search/src/mcp_server_everything_search",
          "mcp-server-everything-search"
        ],
        "environment": [
          {
            "name": "EVERYTHING_SDK_PATH",
            "description": "path/to/Everything-SDK/dll/Everything64.dll"
          }
        ]
      }
    ]
  },
  {
    "name": "io.github.haris-musa/excel-mcp-server",
    "description": "A Model Context Protocol server for Excel file manipulation",
    "repository": "https://github.com/haris-musa/excel-mcp-server"
  },
  {
    "name": "io.github.rishijatia/fantasy-pl-mcp",
    "description": "Fantasy Premier League MCP Server",
    "repository": "https://github.com/rishijatia/fantasy-pl-mcp"
  },
  {
    "name": "io.github.fastnai/mcp-fastn",
    "description": "io.github.fastnai/mcp-fastn",
    "repository": "https://github.com/fastnai/mcp-fastn"
  },
  {
    "name": "io.github.stefanoamorelli/fred-mcp-server",
    "description": "Open-source MCP Server for the Federal Reserve Economic Data",
    "repository": "https://github.com/stefanoamorelli/fred-mcp-server"
  },
  {
    "name": "io.github.clafollett/fdic-bank-find-mcp-server",
    "description": "MCP Server to wrap the FDIC Bank Find API",
    "repository": "https://github.com/clafollett/fdic-bank-find-mcp-server"
  },
  {
    "name": "io.github.zcaceres/fetch-mcp",
    "description": "A flexible HTTP fetching Model Context Protocol server.",
    "repository": "https://github.com/zcaceres/fetch-mcp"
  },
  {
    "name": "io.github.glips/figma-context-mcp",
    "description": "MCP server to provide Figma layout information to AI coding agents like Cursor",
    "repository": "https://github.com/GLips/Figma-Context-MCP"
  },
  {
    "name": "io.github.gannonh/firebase-mcp",
    "description": "🔥 Model Context Protocol (MCP) server for Firebase.",
    "repository": "https://github.com/gannonh/firebase-mcp"
  },
  {
    "name": "io.github.vrknetha/mcp-server-firecrawl",
    "description": "Official Firecrawl MCP Server - Adds powerful web scraping to Cursor, Claude and any other LLM clients.",
    "repository": "https://github.com/mendableai/firecrawl-mcp-server"
  },
  {
    "name": "io.github.sunsetcoder/flightradar24-mcp-server",
    "description": "Model Context Protocol server for Flight Tracking",
    "repository": "https://github.com/sunsetcoder/flightradar24-mcp-server"
  },
  {
    "name": "io.github.kukapay/freqtrade-mcp",
    "description": "An MCP server that integrates with the Freqtrade cryptocurrency trading bot.",
    "repository": "https://github.com/kukapay/freqtrade-mcp"
  },
  {
    "name": "io.github.mfydev/ghost-mcp",
    "description": "A Model Context Protocol (MCP) server for interacting with Ghost CMS through LLM interfaces like Claude. Allow you to control your Ghost blog by simply asking Claude etc.",
    "repository": "https://github.com/MFYDev/ghost-mcp",
    "packages": [
      {
        "registry": "npm",
        "name": "@fanyangmeng/ghost-mcp",
        "version": "0.1.0",
        "command": "npx",
        "arguments": [
          {
            "name": "-y",
            "description": "Install dependencies"
          },
          {
            "name": "@fanyangmeng/ghost-mcp@0.1.0",
            "description": "Package name"
          }
        ],
        "environment": [
          {
            "name": "GHOST_API_URL",
            "description": "https://yourblog.com"
          },
          {
            "name": "GHOST_ADMIN_API_KEY",
            "description": "your_admin_api_key"
          },
          {
            "name": "GHOST_API_VERSION",
            "description": "v5.0"
          }
        ]
      }
    ]
  },
  {
    "name": "io.github.geropl/git-mcp-go",
    "description": "Git MCP based on mcp-go",
    "repository": "https://github.com/geropl/git-mcp-go"
  },
  {
    "name": "io.github.ko1ynnky/github-actions-mcp-server",
    "description": "GitHub Actions Model Context Protocol Server",
    "repository": "https://github.com/ko1ynnky/github-actions-mcp-server"
  },
  {
    "name": "io.github.ddukbg/github-enterprise-mcp",
    "description": "github-enterprise-mcp",
    "repository": "https://github.com/containerelic/github-enterprise-mcp",
    "packages": [
      {
        "registry": "npm",
        "name": "@ddukbg/github-enterprise-mcp",
        "version": "1.3.0",
        "command": "npx",
        "arguments": [
          {
            "name": "-y",
            "description": "Install dependencies"
          },
          {
            "name": "@ddukbg/github-enterprise-mcp@1.3.0",
            "description": "Package name"
          }
        ],
        "environment": [
          {
            "name": "GITHUB_ENTERPRISE_URL",
            "description": "https://github.your-company.com/api/v3"
          },
          {
            "name": "GITHUB_TOKEN",
            "description": "your_github_token"
          }
        ]
      }
    ]
  },
  {
    "name": "io.github.longyi1207/glean-mcp-server",
    "description": "io.github.longyi1207/glean-mcp-server",
    "repository": "https://github.com/longyi1207/glean-mcp-server"
  },
  {
    "name": "io.github.gongrzhe/gmail-mcp-server",
    "description": "A Model Context Protocol (MCP) server for Gmail integration in Claude Desktop with auto authentication support. This server enables AI assistants to manage Gmail through natural language interactions.",
    "repository": "https://github.com/GongRzhe/Gmail-MCP-Server"
  },
  {
    "name": "io.github.baryhuang/mcp-headless-gmail",
    "description": "A MCP (Model Context Protocol) server that provides get, send Gmails without local credential or token setup.",
    "repository": "https://github.com/baryhuang/mcp-headless-gmail"
  },
  {
    "name": "io.github.hichana/goalstory-mcp",
    "description": "io.github.hichana/goalstory-mcp",
    "repository": "https://github.com/hichana/goalstory-mcp"
  },
  {
    "name": "io.github.goat-sdk/goat",
    "description": "The leading agentic finance toolkit for AI agents",
    "repository": "https://github.com/goat-sdk/goat"
  },
  {
    "name": "io.github.coding-solo/godot-mcp",
    "description": "MCP server for interfacing with Godot game engine. Provides tools for launching the editor, running projects, and capturing debug output.",
    "repository": "https://github.com/Coding-Solo/godot-mcp"
  },
  {
    "name": "io.github.mark3labs/mcp-filesystem-server",
    "description": "Go server implementing Model Context Protocol (MCP) for filesystem operations.",
    "repository": "https://github.com/mark3labs/mcp-filesystem-server",
    "packages": [
      {
        "registry": "docker",
        "name": "mark3labs/mcp-filesystem-server",
        "command": "docker",
        "arguments": [
          "ghcr.io/mark3labs/mcp-filesystem-server:latest",
          "/path/to/allowed/directory"
        ]
      }
    ]
  },
  {
    "name": "io.github.vectorinstitute/mcp-goodnews",
    "description": "A simple MCP application that delivers curated positive and uplifting news stories.",
    "repository": "https://github.com/VectorInstitute/mcp-goodnews"
  },
  {
    "name": "io.github.v-3/google-calendar",
    "description": "io.github.v-3/google-calendar",
    "repository": "https://github.com/v-3/google-calendar"
  },
  {
    "name": "io.github.nspady/google-calendar-mcp",
    "description": "MCP integration for Google Calendar to manage events.",
    "repository": "https://github.com/nspady/google-calendar-mcp"
  },
  {
    "name": "io.github.adenot/mcp-google-search",
    "description": "io.github.adenot/mcp-google-search",
    "repository": "https://github.com/adenot/mcp-google-search"
  },
  {
    "name": "io.github.xing5/mcp-google-sheets",
    "description": "This MCP server integrates with your Google Drive and Google Sheets, to enable creating and modifying spreadsheets.",
    "repository": "https://github.com/xing5/mcp-google-sheets",
    "packages": [
      {
        "registry": "pypi",
        "name": "mcp-google-sheets",
        "command": "pip",
        "arguments": [
          "mcp-google-sheets"
        ],
        "environment": [
          {
            "name": "SERVICE_ACCOUNT_PATH",
            "description": "/full/path/to/cloned/mcp-google-sheets/service-account-key.json"
          },
          {
            "name": "DRIVE_FOLDER_ID",
            "description": "your_shared_folder_id_here"
          }
        ]
      }
    ]
  },
  {
    "name": "io.github.rohans2/mcp-google-sheets",
    "description": "io.github.rohans2/mcp-google-sheets",
    "repository": "https://github.com/rohans2/mcp-google-sheets"
  },
  {
    "name": "io.github.zcaceres/gtasks-mcp",
    "description": "A Google Tasks Model Context Protocol Server for Claude",
    "repository": "https://github.com/zcaceres/gtasks-mcp"
  },
  {
    "name": "io.github.ubie-oss/mcp-vertexai-search",
    "description": "A MCP server for Vertex AI Search",
    "repository": "https://github.com/ubie-oss/mcp-vertexai-search"
  },
  {
    "name": "io.github.hannesj/mcp-graphql-schema",
    "description": "GraphQL Schema Model Context Protocol Server",
    "repository": "https://github.com/hannesj/mcp-graphql-schema",
    "packages": [
      {
        "registry": "npm",
        "name": "mcp-graphql-schema",
        "version": "0.0.1",
        "command": "npx",
        "arguments": [
          "/ABSOLUTE/PATH/TO/schema.graphqls"
        ]
      }
    ]
  },
  {
    "name": "io.github.horizondatawave/hdw-mcp-server",
    "description": "A Model Context Protocol (MCP) server that provides comprehensive access to LinkedIn data and functionalities using the HorizonDataWave API, enabling not only data retrieval but also robust management of user accounts.",
    "repository": "https://github.com/horizondatawave/hdw-mcp-server",
    "packages": [
      {
        "registry": "npm",
        "name": "@horizondatawave/mcp",
        "version": "0.1.3",
        "command": "npx",
        "arguments": [
          {
            "name": "-y",
            "description": "Install dependencies"
          },
          {
            "name": "@horizondatawave/mcp@0.1.3",
            "description": "Package name"
          }
        ],
        "environment": [
          {
            "name": "HDW_ACCESS_TOKEN",
            "description": "YOUR_HD_W_ACCESS_TOKEN"
          },
          {
            "name": "HDW_ACCOUNT_ID",
            "description": "YOUR_HD_W_ACCOUNT_ID"
          }
        ]
      }
    ]
  },
  {
    "name": "io.github.heurist-network/heurist-mesh-mcp-server",
    "description": "io.github.heurist-network/heurist-mesh-mcp-server",
    "repository": "https://github.com/heurist-network/heurist-mesh-mcp-server"
  },
  {
    "name": "io.github.heurist-network/heurist-agent-framework",
    "description": "A flexible multi-interface AI agent framework for building agents with reasoning, tool use, memory, deep research, blockchain interaction, MCP, and agents-as-a-service.",
    "repository": "https://github.com/heurist-network/heurist-agent-framework",
    "packages": [
      {
        "registry": "npm",
        "name": "heurist-agent-framework",
        "version": "0.1.0",
        "command": "npx",
        "arguments": [
          {
            "name": "-y",
            "description": "Install dependencies"
          },
          {
            "name": "heurist-agent-framework@0.1.0",
            "description": "Package name"
          }
        ],
        "environment": [
          {
            "name": "API_KEY",
            "description": "${input:apiKey}"
          }
        ]
      }
    ]
  },
  {
    "name": "io.github.syucream/holaspirit-mcp-server",
    "description": "A MCP server that accesses to Holaspirit",
    "repository": "https://github.com/syucream/holaspirit-mcp-server",
    "packages": [
      {
        "registry": "npm",
        "name": "holaspirit-mcp-server",
        "version": "0.2.0",
        "command": "npx",
        "arguments": [
          {
            "name": "-y",
            "description": "Install dependencies"
          },
          {
            "name": "holaspirit-mcp-server@0.2.0",
            "description": "Package name"
          }
        ],
        "environment": [
          {
            "name": "HOLASPIRIT_API_TOKEN",
            "description": "<your token>"
          },
          {
            "name": "HOLASPIRIT_ORGANIZATION_ID",
            "description": "<your org id>"
          }
        ]
      }
    ]
  },
  {
    "name": "io.github.tevonsb/homeassistant-mcp",
    "description": "A MCP server for Home Assistant",
    "repository": "https://github.com/tevonsb/homeassistant-mcp"
  },
  {
    "name": "io.github.voska/hass-mcp",
    "description": "Home Assistant MCP Server",
    "repository": "https://github.com/voska/hass-mcp",
    "packages": [
      {
        "registry": "docker",
        "name": "hass-mcp",
        "version": "0.1.0",
        "command": "docker",
        "arguments": [
          "-i",
          "--rm",
          "-e HA_URL",
          "-e HA_TOKEN",
          "voska/hass-mcp"
        ],
        "environment": [
          {
            "name": "HA_URL",
            "description": "http://homeassistant.local:8123"
          },
          {
            "name": "HA_TOKEN",
            "description": "YOUR_LONG_LIVED_TOKEN"
          }
        ]
      }
    ]
  },
  {
    "name": "io.github.buryhuang/mcp-hubspot",
    "description": "A Model Context Protocol (MCP) server that enables AI assistants to interact with HubSpot CRM data, providing built-in vector storage and caching mechanisms help overcome HubSpot API limitations while improving response times.",
    "repository": "https://github.com/peakmojo/mcp-hubspot",
    "packages": [
      {
        "registry": "docker",
        "name": "mcp-server-hubspot",
        "version": "0.2.0",
        "command": "docker",
        "arguments": [
          "-i",
          "--rm",
          "-e HUBSPOT_ACCESS_TOKEN=your_token",
          "-v /path/to/storage:/storage",
          "buryhuang/mcp-hubspot:latest"
        ]
      }
    ]
  },
  {
    "name": "io.github.evalstate/mcp-hfspace",
    "description": "MCP Server to Use HuggingFace spaces, easy configuration and Claude Desktop mode. ",
    "repository": "https://github.com/evalstate/mcp-hfspace",
    "packages": [
      {
        "registry": "npm",
        "name": "@llmindset/mcp-hfspace",
        "version": "0.5.4",
        "command": "npx",
        "arguments": [
          "--work-dir=~/mcp-files/ or x:/temp/mcp-files/",
          "--HF_TOKEN=HF_{optional token}",
          "Qwen/Qwen2-72B-Instruct",
          "black-forest-labs/FLUX.1-schnell",
          "space/example/specific-endpint"
        ]
      }
    ]
  },
  {
    "name": "io.github.mektigboy/server-hyperliquid",
    "description": "MCP Hyperliquid (https://app.hyperliquid.xyz) server",
    "repository": "https://github.com/mektigboy/server-hyperliquid",
    "packages": [
      {
        "registry": "npm",
        "name": "@mektigboy/server-hyperliquid",
        "version": "0.0.1",
        "command": "npx",
        "arguments": [
          {
            "name": "-y",
            "description": "Install dependencies"
          },
          {
            "name": "@mektigboy/server-hyperliquid@0.0.1",
            "description": "Package name"
          }
        ]
      }
    ]
  },
  {
    "name": "io.github.stefanoamorelli/hyprmcp",
    "description": "Community MCP server for hyprctl",
    "repository": "https://github.com/stefanoamorelli/hyprmcp",
    "packages": [
      {
        "registry": "pypi",
        "name": "stefanoamorelli/hyprmcp",
        "command": "pip",
        "arguments": [
          "--with mcp[cli]",
          "--with subprocess",
          "mcp",
          "<global path of the repo>/hyprmcp/hyprmcp/server.py"
        ],
        "environment": [
          {
            "name": "PYTHONPATH",
            "description": "<global path of the repo>/hyprmcp"
          },
          {
            "name": "HYPRLAND_INSTANCE_SIGNATURE",
            "description": "<your-hyprland-instance-signature>"
          }
        ]
      }
    ]
  },
  {
    "name": "io.github.iflytek/ifly-workflow-mcp-server",
    "description": "This a simple implementation of an MCP server using iFlytek. It enables calling iFlytek workflows through MCP tools.",
    "repository": "https://github.com/iflytek/ifly-workflow-mcp-server"
  },
  {
    "name": "io.github.gongrzhe/image-generation-mcp-server",
    "description": "This MCP server provides image generation capabilities using the Replicate Flux model.",
    "repository": "https://github.com/GongRzhe/Image-Generation-MCP-Server"
  },
  {
    "name": "io.github.idoru/influxdb-mcp-server",
    "description": "An MCP Server for querying InfluxDB",
    "repository": "https://github.com/idoru/influxdb-mcp-server"
  },
  {
    "name": "io.github.sergehuber/inoyu-mcp-unomi-server",
    "description": "An implementation of Anthropic's Model Context Protocol for the Apache Unomi CDP",
    "repository": "https://github.com/sergehuber/inoyu-mcp-unomi-server"
  },
  {
    "name": "io.github.raoulbia-ai/mcp-server-for-intercom",
    "description": "io.github.raoulbia-ai/mcp-server-for-intercom",
    "repository": "https://github.com/raoulbia-ai/mcp-server-for-intercom"
  },
  {
    "name": "io.github.inditextech/mcp-server-simulator-ios-idb",
    "description": "A Model Context Protocol (MCP) server that enables LLMs to interact with iOS simulators through natural language commands.",
    "repository": "https://github.com/InditexTech/mcp-server-simulator-ios-idb"
  },
  {
    "name": "io.github.ferrislucas/iterm-mcp",
    "description": "A Model Context Protocol server that executes commands in the current iTerm session - useful for REPL and CLI assistance",
    "repository": "https://github.com/ferrislucas/iterm-mcp",
    "packages": [
      {
        "registry": "npm",
        "name": "iterm-mcp",
        "version": "1.2.5",
        "command": "npx",
        "arguments": [
          {
            "name": "-y",
            "description": "Install dependencies"
          },
          {
            "name": "iterm-mcp@1.2.5",
            "description": "Package name"
          }
        ]
      }
    ]
  },
  {
    "name": "io.github.rishabkoul/iterm-mcp-server",
    "description": "io.github.rishabkoul/iterm-mcp-server",
    "repository": "https://github.com/rishabkoul/iTerm-MCP-Server",
    "packages": [
      {
        "registry": "npm",
        "name": "iterm_mcp_server",
        "version": "1.0.4",
        "command": "npx",
        "arguments": [
          {
            "name": "-y",
            "description": "Install dependencies"
          },
          {
            "name": "iterm_mcp_server@1.0.4",
            "description": "Package name"
          }
        ]
      }
    ]
  },
  {
    "name": "io.github.quarkiverse/quarkus-mcp-servers",
    "description": "Model Context Protocol Servers in Quarkus",
    "repository": "https://github.com/quarkiverse/quarkus-mcp-servers"
  },
  {
    "name": "io.github.qainsights/jmeter-mcp-server",
    "description": "✨ JMeter Meets AI Workflows: Introducing the JMeter MCP Server! 🤯 ",
    "repository": "https://github.com/QAInsights/jmeter-mcp-server"
  },
  {
    "name": "io.github.gongrzhe/json-mcp-server",
    "description": "JSON handling and processing mcp server",
    "repository": "https://github.com/GongRzhe/JSON-MCP-Server"
  },
  {
    "name": "io.github.kukapay/jupiter-mcp",
    "description": "An MCP server for executing token swaps on the Solana blockchain using Jupiter's new Ultra API.",
    "repository": "https://github.com/kukapay/jupiter-mcp"
  },
  {
    "name": "io.github.razvanmacovei/k8s-multicluster-mcp",
    "description": "An MCP (Model Context Protocol) server application for Kubernetes operations, providing a standardized API to interact with multiple Kubernetes clusters simultaneously using multiple kubeconfig files.",
    "repository": "https://github.com/razvanmacovei/k8s-multicluster-mcp"
  },
  {
    "name": "io.github.lamaalrajih/kicad-mcp",
    "description": "Model Context Protocol server for KiCad on Mac, Windows, and Linux",
    "repository": "https://github.com/lamaalrajih/kicad-mcp",
    "packages": [
      {
        "registry": "pypi",
        "name": "lamaalrajih/kicad-mcp",
        "command": "pip"
      }
    ]
  },
  {
    "name": "io.github.christophenglisch/keycloak-model-context-protocol",
    "description": "MCP server implementation for Keycloak user management. Enables AI-powered administration of Keycloak users and realms through the Model Context Protocol (MCP). Seamlessly integrates with Claude Desktop and other MCP clients for automated user operations.",
    "repository": "https://github.com/ChristophEnglisch/keycloak-model-context-protocol"
  },
  {
    "name": "io.github.kiwamizamurai/mcp-kibela-server",
    "description": "MCP server implementation for Kibela API integration",
    "repository": "https://github.com/kiwamizamurai/mcp-kibela-server",
    "packages": [
      {
        "registry": "docker",
        "name": "@kiwamizamurai/mcp-kibela-server",
        "version": "1.1.0",
        "command": "docker",
        "arguments": [
          "-i",
          "--rm",
          "-e KIBELA_TEAM",
          "-e KIBELA_TOKEN",
          "mcp-kibela-server"
        ],
        "environment": [
          {
            "name": "KIBELA_TEAM",
            "description": "YOUR_TEAM_NAME"
          },
          {
            "name": "KIBELA_TOKEN",
            "description": "YOUR_TOKEN"
          }
        ]
      }
    ]
  },
  {
    "name": "io.github.macrat/mcp-server-kintone",
    "description": "MCP server for kintone",
    "repository": "https://github.com/macrat/mcp-server-kintone"
  },
  {
    "name": "io.github.kong/mcp-konnect",
    "description": "A Model Context Protocol (MCP) server for interacting with Kong Konnect APIs, allowing AI assistants to query and analyze Kong Gateway configurations, traffic, and analytics.",
    "repository": "https://github.com/Kong/mcp-konnect"
  },
  {
    "name": "io.github.flux159/mcp-server-kubernetes",
    "description": "MCP Server for kubernetes management commands",
    "repository": "https://github.com/Flux159/mcp-server-kubernetes"
  },
  {
    "name": "io.github.manusa/kubernetes-mcp-server",
    "description": "Model Context Protocol (MCP) server for Kubernetes and OpenShift",
    "repository": "https://github.com/manusa/kubernetes-mcp-server"
  },
  {
    "name": "io.github.gongrzhe/langflow-doc-qa-server",
    "description": "A Model Context Protocol server for document Q&A powered by Langflow . It demonstrates core MCP concepts by providing a simple interface to query documents through a Langflow backend.",
    "repository": "https://github.com/GongRzhe/Langflow-DOC-QA-SERVER"
  },
  {
    "name": "io.github.kone-net/mcp_server_lark",
    "description": "A Model Context Protocol server for Lark(Feishu) sheet, message, doc and etc.",
    "repository": "https://github.com/kone-net/mcp_server_lark"
  },
  {
    "name": "io.github.syucream/lightdash-mcp-server",
    "description": "A MCP(Model Context Protocol) server that accesses to Lightdash",
    "repository": "https://github.com/syucream/lightdash-mcp-server",
    "packages": [
      {
        "registry": "npm",
        "name": "lightdash-mcp-server",
        "version": "0.0.11",
        "command": "npx",
        "arguments": [
          {
            "name": "-y",
            "description": "Install dependencies"
          },
          {
            "name": "lightdash-mcp-server@0.0.11",
            "description": "Package name"
          }
        ],
        "environment": [
          {
            "name": "LIGHTDASH_API_KEY",
            "description": "<your PAT>"
          },
          {
            "name": "LIGHTDASH_API_URL",
            "description": "https://<your base url>"
          }
        ]
      }
    ]
  },
  {
    "name": "io.github.tritlo/lsp-mcp",
    "description": "An MCP server that lets you interact with LSP servers",
    "repository": "https://github.com/Tritlo/lsp-mcp"
  },
  {
    "name": "io.github.tacticlaunch/mcp-linear",
    "description": "MCP server that enables AI assistants to interact with Linear project management system through natural language, allowing users to retrieve, create, and update issues, projects, and teams.",
    "repository": "https://github.com/tacticlaunch/mcp-linear",
    "packages": [
      {
        "registry": "npm",
        "name": "@tacticlaunch/mcp-linear",
        "version": "1.0.9",
        "command": "npx",
        "arguments": [
          {
            "name": "-y",
            "description": "Install dependencies"
          },
          {
            "name": "@tacticlaunch/mcp-linear@1.0.9",
            "description": "Package name"
          }
        ],
        "environment": [
          {
            "name": "LINEAR_API_TOKEN",
            "description": "<YOUR_TOKEN>"
          }
        ]
      }
    ]
  },
  {
    "name": "io.github.jerhadf/linear-mcp-server",
    "description": "A server that integrates Linear's project management system with the Model Context Protocol (MCP) to allow LLMs to interact with Linear.",
    "repository": "https://github.com/jerhadf/linear-mcp-server",
    "packages": [
      {
        "registry": "npm",
        "name": "linear-mcp-server",
        "version": "0.1.0",
        "command": "npx",
        "arguments": [
          {
            "name": "-y",
            "description": "Install dependencies"
          },
          {
            "name": "linear-mcp-server@0.1.0",
            "description": "Package name"
          }
        ],
        "environment": [
          {
            "name": "LINEAR_API_KEY",
            "description": "your_linear_api_key_here"
          }
        ]
      }
    ]
  },
  {
    "name": "io.github.geropl/linear-mcp-go",
    "description": "linear MCP server based on mcp-go",
    "repository": "https://github.com/geropl/linear-mcp-go"
  },
  {
    "name": "io.github.amornpan/py-mcp-line",
    "description": "python mcp LINE",
    "repository": "https://github.com/amornpan/py-mcp-line"
  },
  {
    "name": "io.github.run-llama/mcp-server-llamacloud",
    "description": "A MCP server connecting to managed indexes on LlamaCloud",
    "repository": "https://github.com/run-llama/mcp-server-llamacloud",
    "packages": [
      {
        "registry": "npm",
        "name": "@llamaindex/mcp-server-llamacloud",
        "version": "0.1.2",
        "command": "npx",
        "arguments": [
          "--index 10k-SEC-Tesla",
          "--description 10k SEC documents from 2023 for Tesla",
          "--index 10k-SEC-Apple",
          "--description 10k SEC documents from 2023 for Apple"
        ],
        "environment": [
          {
            "name": "LLAMA_CLOUD_PROJECT_NAME",
            "description": "<YOUR_PROJECT_NAME>"
          },
          {
            "name": "LLAMA_CLOUD_API_KEY",
            "description": "<YOUR_API_KEY>"
          }
        ]
      }
    ]
  },
  {
    "name": "io.github.stass/lldb-mcp",
    "description": "LLDB MCP server",
    "repository": "https://github.com/stass/lldb-mcp"
  },
  {
    "name": "io.github.cyberchitta/llm-context.py",
    "description": "Share code with LLMs via Model Context Protocol or clipboard. Rule-based customization enables easy switching between different tasks (like code review and documentation). Includes smart code outlining.",
    "repository": "https://github.com/cyberchitta/llm-context.py"
  },
  {
    "name": "io.github.vivekkumarneu/mcp-lucene-server",
    "description": "MCP Lucene Server",
    "repository": "https://github.com/VivekKumarNeu/MCP-Lucene-Server"
  },
  {
    "name": "io.github.carterlasalle/mac_messages_mcp",
    "description": "An MCP server that securely interfaces with your iMessage database via the Model Context Protocol (MCP), allowing LLMs to query and analyze iMessage conversations. It includes robust phone number validation, attachment processing, contact management, group chat handling, and full support for sending and receiving messages.",
    "repository": "https://github.com/carterlasalle/mac_messages_mcp"
  },
  {
    "name": "io.github.mytechnotalent/malwarebazaar_mcp",
    "description": "An AI-driven MCP server that autonomously interfaces with Malware Bazaar, delivering real-time threat intel and sample metadata for authorized cybersecurity research workflows.",
    "repository": "https://github.com/mytechnotalent/MalwareBazaar_MCP"
  },
  {
    "name": "io.github.abel9851/mcp-server-mariadb",
    "description": "An mcp server that provides read-only access to MariaDB.",
    "repository": "https://github.com/abel9851/mcp-server-mariadb"
  },
  {
    "name": "io.github.maton-ai/agent-toolkit",
    "description": "io.github.maton-ai/agent-toolkit",
    "repository": "https://github.com/maton-ai/agent-toolkit"
  },
  {
    "name": "io.github.liuyoshio/mcp-compass",
    "description": "MCP Discovery & Recommendation Service - Find the right MCP server for your needs",
    "repository": "https://github.com/liuyoshio/mcp-compass"
  },
  {
    "name": "io.github.tesla0225/mcp-create",
    "description": "io.github.tesla0225/mcp-create",
    "repository": "https://github.com/tesla0225/mcp-create"
  },
  {
    "name": "io.github.anaisbetts/mcp-installer",
    "description": "An MCP server that installs other MCP servers for you",
    "repository": "https://github.com/anaisbetts/mcp-installer",
    "packages": [
      {
        "registry": "npm",
        "name": "@anaisbetts/mcp-installer",
        "version": "0.5.0",
        "command": "npx",
        "arguments": [
          {
            "name": "-y",
            "description": "Install dependencies"
          },
          {
            "name": "@anaisbetts/mcp-installer@0.5.0",
            "description": "Package name"
          }
        ]
      }
    ]
  },
  {
    "name": "io.github.strowk/mcp-k8s-go",
    "description": "MCP server connecting to Kubernetes",
    "repository": "https://github.com/strowk/mcp-k8s-go",
    "packages": [
      {
        "registry": "docker",
        "name": "strowk/mcp-k8s-go",
        "command": "docker",
        "arguments": [
          "-v ~/.kube/config:/home/nonroot/.kube/config",
          "--rm",
          "mcpk8s/server:latest"
        ]
      }
    ]
  },
  {
    "name": "io.github.nkapila6/mcp-local-rag",
    "description": "\"primitive\" RAG-like web search model context protocol (MCP) server that runs locally. ✨ no APIs ✨",
    "repository": "https://github.com/nkapila6/mcp-local-rag",
    "packages": [
      {
        "registry": "pypi",
        "name": "mcp-local-rag",
        "version": "0.1.0",
        "command": "pip",
        "arguments": [
          "--directory <path where this folder is located>/mcp-local-rag/",
          "src/mcp_local_rag/main.py"
        ]
      }
    ]
  },
  {
    "name": "io.github.sparfenyuk/mcp-proxy",
    "description": "A bridge between Streamable HTTP and stdio MCP transports",
    "repository": "https://github.com/sparfenyuk/mcp-proxy"
  },
  {
    "name": "io.github.tbxark/mcp-proxy",
    "description": "An MCP proxy server that aggregates and serves multiple MCP resource servers through a single HTTP server.",
    "repository": "https://github.com/TBXark/mcp-proxy",
    "packages": [
      {
        "registry": "npm",
        "name": "TBXark/mcp-proxy",
        "command": "npx",
        "arguments": [
          {
            "name": "-y",
            "description": "Install dependencies"
          },
          {
            "name": "TBXark/mcp-proxy@latest",
            "description": "Package name"
          }
        ],
        "environment": [
          {
            "name": "GITHUB_PERSONAL_ACCESS_TOKEN",
            "description": "<YOUR_TOKEN>"
          }
        ]
      }
    ]
  },
  {
    "name": "io.github.lciesielski/mcp-salesforce-example",
    "description": "io.github.lciesielski/mcp-salesforce-example",
    "repository": "https://github.com/lciesielski/mcp-salesforce-example"
  },
  {
    "name": "io.github.mem0ai/mem0-mcp",
    "description": "io.github.mem0ai/mem0-mcp",
    "repository": "https://github.com/mem0ai/mem0-mcp"
  },
  {
    "name": "io.github.unibaseio/membase-mcp",
    "description": "A lightweight, decentralized memory server for AI agents to store and retrieve conversations via the Unibase memory layer.",
    "repository": "https://github.com/unibaseio/membase-mcp",
    "packages": [
      {
        "registry": "pypi",
        "name": "membase-mcp",
        "version": "0.1.0",
        "command": "pip",
        "arguments": [
          "--directory path/to/membase-mcp",
          "src/membase_mcp/server.py"
        ],
        "environment": [
          {
            "name": "MEMBASE_ACCOUNT",
            "description": "your account, 0x..."
          },
          {
            "name": "MEMBASE_CONVERSATION_ID",
            "description": "your conversation id, should be unique"
          },
          {
            "name": "MEMBASE_ID",
            "description": "your sub account, any string"
          }
        ]
      }
    ]
  },
  {
    "name": "io.github.ariadng/metatrader-mcp-server",
    "description": "Model Context Protocol (MCP) to enable AI LLMs to trade using MetaTrader platform",
    "repository": "https://github.com/ariadng/metatrader-mcp-server"
  },
  {
    "name": "io.github.metricool/mcp-metricool",
    "description": "This is a Multi-Agent Collaboration Protocol (MCP) server for interacting with the Metricool API. It allows AI agents to access and analyze social media metrics and campaign data from your Metricool account.",
    "repository": "https://github.com/metricool/mcp-metricool"
  },
  {
    "name": "io.github.jexinsam/mssql_mcp_server",
    "description": "A Model Context Protocol (MCP) server facilitating secure interactions with MSSQL databases.",
    "repository": "https://github.com/JexinSam/mssql_mcp_server",
    "packages": [
      {
        "registry": "pypi",
        "name": "mssql_mcp_server",
        "version": "0.1.2",
        "command": "pip",
        "arguments": [
          "--directory path/to/mssql_mcp_server",
          "mssql_mcp_server"
        ],
        "environment": [
          {
            "name": "MSSQL_DRIVER",
            "description": "mssql_driver"
          },
          {
            "name": "MSSQL_HOST",
            "description": "localhost"
          },
          {
            "name": "MSSQL_USER",
            "description": "your_username"
          },
          {
            "name": "MSSQL_PASSWORD",
            "description": "your_password"
          },
          {
            "name": "MSSQL_DATABASE",
            "description": "your_database"
          }
        ]
      }
    ]
  },
  {
    "name": "io.github.amornpan/py-mcp-mssql",
    "description": "py-mcp-mssql",
    "repository": "https://github.com/amornpan/py-mcp-mssql"
  },
  {
    "name": "io.github.daobataotie/mssql-mcp",
    "description": "mssql mcp server",
    "repository": "https://github.com/daobataotie/mssql-mcp"
  },
  {
    "name": "io.github.zcaceres/mcp-markdownify-server",
    "description": "A Model Context Protocol server for converting almost anything to Markdown",
    "repository": "https://github.com/zcaceres/markdownify-mcp"
  },
  {
    "name": "io.github.inditextech/mcp-teams-server",
    "description": "An MCP (Model Context Protocol) server implementation for Microsoft Teams integration, providing capabilities to read messages, create messages, reply to messages, mention members.",
    "repository": "https://github.com/InditexTech/mcp-teams-server",
    "packages": [
      {
        "registry": "npm",
        "name": "mcp-teams-server",
        "version": "1.0.4",
        "command": "npx",
        "arguments": [
          {
            "name": "-y",
            "description": "Install dependencies"
          },
          {
            "name": "mcp-teams-server@1.0.4",
            "description": "Package name"
          }
        ],
        "environment": [
          {
            "name": "API_KEY",
            "description": "${input:apiKey}"
          }
        ]
      }
    ]
  },
  {
    "name": "io.github.openmf/mcp-mifosx",
    "description": "Model Context Protocol - MCP for Mifos X",
    "repository": "https://github.com/openMF/mcp-mifosx"
  },
  {
    "name": "io.github.jeff-nasseri/mikrotik-mcp",
    "description": "MCP server for Mikrotik",
    "repository": "https://github.com/jeff-nasseri/mikrotik-mcp"
  },
  {
    "name": "io.github.yuchenssr/mindmap-mcp-server",
    "description": "mindmap, mcp server, artifact",
    "repository": "https://github.com/YuChenSSR/mindmap-mcp-server",
    "packages": [
      {
        "registry": "docker",
        "name": "mindmap-mcp-server",
        "version": "0.1.1",
        "command": "docker",
        "arguments": [
          "-i",
          "-v /path/to/output/folder:/output"
        ]
      }
    ]
  },
  {
    "name": "io.github.dmayboroda/minima",
    "description": "On-premises conversational RAG with configurable containers",
    "repository": "https://github.com/dmayboroda/minima"
  },
  {
    "name": "io.github.mobile-next/mobile-mcp",
    "description": "Model Context Protocol Server for Mobile Automation and Scraping (iOS, Android, Emulators, Simulators and Physical Devices)",
    "repository": "https://github.com/mobile-next/mobile-mcp",
    "packages": [
      {
        "registry": "npm",
        "name": "@mobilenext/mobile-mcp",
        "version": "0.0.17",
        "command": "npx",
        "arguments": [
          {
            "name": "-y",
            "description": "Install dependencies"
          },
          {
            "name": "@mobilenext/mobile-mcp@0.0.17",
            "description": "Package name"
          }
        ]
      }
    ]
  },
  {
    "name": "io.github.kiliczsh/mcp-mongo-server",
    "description": "A Model Context Protocol Server for MongoDB",
    "repository": "https://github.com/kiliczsh/mcp-mongo-server",
    "packages": [
      {
        "registry": "npm",
        "name": "mcp-mongo-server",
        "version": "1.3.0",
        "command": "npx",
        "arguments": [
          "mongodb://muhammed:kilic@localhost:27017/database"
        ]
      }
    ]
  },
  {
    "name": "io.github.furey/mongodb-lens",
    "description": "🍃🔎 MongoDB Lens: Full Featured MCP Server for MongoDB Databases",
    "repository": "https://github.com/furey/mongodb-lens"
  },
  {
    "name": "io.github.sakce/mcp-server-monday",
    "description": "MCP Server to interact with Monday.com boards and items",
    "repository": "https://github.com/sakce/mcp-server-monday"
  },
  {
    "name": "io.github.morningstar/morningstar-mcp-server",
    "description": "io.github.morningstar/morningstar-mcp-server",
    "repository": "https://github.com/Morningstar/morningstar-mcp-server"
  },
  {
    "name": "io.github.yanmxa/multicluster-mcp-server",
    "description": "The gateway for GenAI systems to interact with multiple Kubernetes clusters through the MCP",
    "repository": "https://github.com/yanmxa/multicluster-mcp-server"
  },
  {
    "name": "io.github.yuchenssr/multi-ai-advisor-mcp",
    "description": "council of models for decision",
    "repository": "https://github.com/YuChenSSR/multi-ai-advisor-mcp"
  },
  {
    "name": "io.github.benborla/mcp-server-mysql",
    "description": "A Model Context Protocol server that provides read-only access to MySQL databases. This server enables LLMs to inspect database schemas and execute read-only queries.",
    "repository": "https://github.com/benborla/mcp-server-mysql"
  },
  {
    "name": "io.github.designcomputer/mysql_mcp_server",
    "description": "A Model Context Protocol (MCP) server that enables secure interaction with MySQL databases",
    "repository": "https://github.com/designcomputer/mysql_mcp_server"
  },
  {
    "name": "io.github.leonardsellem/n8n-mcp-server",
    "description": "MCP server that provides tools and resources for interacting with n8n API",
    "repository": "https://github.com/leonardsellem/n8n-mcp-server"
  },
  {
    "name": "io.github.programcomputer/nasa-mcp-server",
    "description": "A Model Context Protocol (MCP) server for NASA APIs, providing a standardized interface for AI models to interact with NASA's vast array of data sources.",
    "repository": "https://github.com/ProgramComputer/NASA-MCP-server"
  },
  {
    "name": "io.github.stefanoamorelli/nasdaq-data-link-mcp",
    "description": "A Nasdaq Data Link MCP (Model Context Protocol) Server",
    "repository": "https://github.com/stefanoamorelli/nasdaq-data-link-mcp"
  },
  {
    "name": "io.github.kyrietangsheng/mcp-server-nationalparks",
    "description": "io.github.kyrietangsheng/mcp-server-nationalparks",
    "repository": "https://github.com/KyrieTangSheng/mcp-server-nationalparks",
    "packages": [
      {
        "registry": "npm",
        "name": "mcp-server-nationalparks",
        "version": "1.0.0",
        "command": "npx",
        "arguments": [
          {
            "name": "-y",
            "description": "Install dependencies"
          },
          {
            "name": "mcp-server-nationalparks@1.0.0",
            "description": "Package name"
          }
        ],
        "environment": [
          {
            "name": "NPS_API_KEY",
            "description": "YOUR_NPS_API_KEY"
          }
        ]
      }
    ]
  },
  {
    "name": "io.github.pfldy2850/py-mcp-naver",
    "description": "python MCP NAVER",
    "repository": "https://github.com/pfldy2850/py-mcp-naver"
  },
  {
    "name": "io.github.taidgh-robinson/nba-mcp-server",
    "description": "io.github.taidgh-robinson/nba-mcp-server",
    "repository": "https://github.com/Taidgh-Robinson/nba-mcp-server"
  },
  {
    "name": "io.github.r-huijts/ns-mcp-server",
    "description": "A Model Context Protocol (MCP) server that provides access to NS (Dutch Railways) travel information through Claude AI. This server enables Claude to fetch real-time train travel information and disruptions using the official Dutch NS API.",
    "repository": "https://github.com/r-huijts/ns-mcp-server"
  },
  {
    "name": "io.github.da-okazaki/mcp-neo4j-server",
    "description": "mcp-neo4j-server",
    "repository": "https://github.com/da-okazaki/mcp-neo4j-server",
    "packages": [
      {
        "registry": "npm",
        "name": "@alanse/mcp-neo4j-server",
        "version": "0.1.1",
        "command": "npx",
        "arguments": [
          {
            "name": "-y",
            "description": "Install dependencies"
          },
          {
            "name": "@alanse/mcp-neo4j-server@0.1.1",
            "description": "Package name"
          }
        ],
        "environment": [
          {
            "name": "NEO4J_URI",
            "description": "bolt://localhost:7687"
          },
          {
            "name": "NEO4J_USERNAME",
            "description": "neo4j"
          },
          {
            "name": "NEO4J_PASSWORD",
            "description": "your-password"
          }
        ]
      }
    ]
  },
  {
    "name": "io.github.bigcodegen/mcp-neovim-server",
    "description": "Control Neovim using Model Context Protocol (MCP) and the official neovim/node-client JavaScript library",
    "repository": "https://github.com/bigcodegen/mcp-neovim-server",
    "packages": [
      {
        "registry": "npm",
        "name": "mcp-neovim-server",
        "version": "0.4.2",
        "command": "npx",
        "arguments": [
          {
            "name": "-y",
            "description": "Install dependencies"
          },
          {
            "name": "mcp-neovim-server@0.4.2",
            "description": "Package name"
          }
        ],
        "environment": [
          {
            "name": "ALLOW_SHELL_COMMANDS",
            "description": "true"
          },
          {
            "name": "NVIM_SOCKET_PATH",
            "description": "/tmp/nvim"
          }
        ]
      }
    ]
  },
  {
    "name": "io.github.kocierik/mcp-nomad",
    "description": " A nomad MCP Server (modelcontextprotocol) ",
    "repository": "https://github.com/kocierik/mcp-nomad",
    "packages": [
      {
        "registry": "docker",
        "name": "kocierik/mcp-nomad",
        "command": "docker",
        "arguments": [
          "-i",
          "--rm",
          "-e NOMAD_ADDR=http://172.17.0.1:4646",
          "-e NOMAD_TOKEN=secret-token-acl-optional",
          "kocierik/mcpnomad-server:latest"
        ]
      }
    ]
  },
  {
    "name": "io.github.suekou/mcp-notion-server",
    "description": "io.github.suekou/mcp-notion-server",
    "repository": "https://github.com/suekou/mcp-notion-server"
  },
  {
    "name": "io.github.v-3/notion-server",
    "description": "io.github.v-3/notion-server",
    "repository": "https://github.com/v-3/notion-server"
  },
  {
    "name": "io.github.teddyzxcv/ntfy-mcp",
    "description": "io.github.teddyzxcv/ntfy-mcp",
    "repository": "https://github.com/teddyzxcv/ntfy-mcp"
  },
  {
    "name": "io.github.gitmotion/ntfy-me-mcp",
    "description": "An ntfy MCP server for sending/fetching ntfy notifications to any/self-hosted ntfy.sh server from AI Agents 📤 (supports secure token auth & more - use with npx or docker!)",
    "repository": "https://github.com/gitmotion/ntfy-me-mcp"
  },
  {
    "name": "io.github.oatpp/oatpp-mcp",
    "description": "Anthropic’s Model Context Protocol implementation for Oat++",
    "repository": "https://github.com/oatpp/oatpp-mcp"
  },
  {
    "name": "io.github.calclavia/mcp-obsidian",
    "description": "A connector for Claude Desktop to read and search an Obsidian vault.",
    "repository": "https://github.com/smithery-ai/mcp-obsidian",
    "packages": [
      {
        "registry": "npm",
        "name": "mcp-obsidian",
        "version": "1.0.0",
        "command": "npx",
        "arguments": [
          "${input:vaultPath}"
        ]
      }
    ]
  },
  {
    "name": "io.github.stevenstavrakis/obsidian-mcp",
    "description": "A simple MCP server for Obsidian",
    "repository": "https://github.com/StevenStavrakis/obsidian-mcp"
  },
  {
    "name": "io.github.yuanooo/oceanbase_mcp_server",
    "description": "A Model Context Protocol (MCP) server that enables secure interaction with OceanBase databases. This server allows AI assistants to list tables, read data, and execute SQL queries through a controlled interface, making database exploration and analysis safer and more structured.",
    "repository": "https://github.com/yuanoOo/oceanbase_mcp_server",
    "packages": [
      {
        "registry": "pypi",
        "name": "oceanbase_mcp_server",
        "version": "0.1.0",
        "command": "pip",
        "arguments": [
          "oceanbase_mcp_server"
        ],
        "environment": [
          {
            "name": "OB_HOST",
            "description": "localhost"
          },
          {
            "name": "OB_PORT",
            "description": "2881"
          },
          {
            "name": "OB_USER",
            "description": "your_username"
          },
          {
            "name": "OB_PASSWORD",
            "description": "your_password"
          },
          {
            "name": "OB_DATABASE",
            "description": "your_database"
          }
        ]
      }
    ]
  },
  {
    "name": "io.github.gongrzhe/office-powerpoint-mcp-server",
    "description": "A MCP (Model Context Protocol) server for PowerPoint manipulation using python-pptx. This server provides tools for creating, editing, and manipulating PowerPoint presentations through the MCP protocol.",
    "repository": "https://github.com/GongRzhe/Office-PowerPoint-MCP-Server"
  },
  {
    "name": "io.github.gongrzhe/office-word-mcp-server",
    "description": "A Model Context Protocol (MCP) server for creating, reading, and manipulating Microsoft Word documents. This server enables AI assistants to work with Word documents through a standardized interface, providing rich document editing capabilities.",
    "repository": "https://github.com/GongRzhe/Office-Word-MCP-Server"
  },
  {
    "name": "io.github.kapilduraphe/okta-mcp-server",
    "description": "Okta MCP Server",
    "repository": "https://github.com/kapilduraphe/okta-mcp-server"
  },
  {
    "name": "io.github.rajvirtual/mcp-servers",
    "description": "A Model Context Protocol (MCP) server that provides AI assistants with access to Microsoft OneNote. This server enables AI models to read from and write to OneNote notebooks, sections, and pages.",
    "repository": "https://github.com/rajvirtual/MCP-Servers"
  },
  {
    "name": "io.github.conechoai/openai-websearch-mcp",
    "description": "openai websearch tool as mcp server",
    "repository": "https://github.com/ConechoAI/openai-websearch-mcp"
  },
  {
    "name": "io.github.snaggle-ai/openapi-mcp-server",
    "description": "Allow AI to wade through complex OpenAPIs using Simple Language",
    "repository": "https://github.com/janwilmake/openapi-mcp-server"
  },
  {
    "name": "io.github.baryhuang/mcp-server-any-openapi",
    "description": "A MCP server that enables Claude to discover and call any API endpoint through semantic search. Intelligently chunks OpenAPI specifications to handle large API documentation, with built-in request execution capabilities. Perfect for integrating private APIs with Claude Desktop.",
    "repository": "https://github.com/baryhuang/mcp-server-any-openapi",
    "packages": [
      {
        "registry": "docker",
        "name": "mcp-server-any-openapi",
        "version": "0.1.0",
        "command": "docker",
        "arguments": [
          "-i",
          "--rm",
          "-e OPENAPI_JSON_DOCS_URL=https://api.example.com/openapi.json",
          "-e MCP_API_PREFIX=finance",
          "-e GLOBAL_TOOL_PROMPT='Access to insights apis for ACME Financial Services abc.com .",
          "buryhuang/mcp-server-any-openapi:latest"
        ]
      }
    ]
  },
  {
    "name": "io.github.hannesj/mcp-openapi-schema",
    "description": "OpenAPI Schema Model Context Protocol Server",
    "repository": "https://github.com/hannesj/mcp-openapi-schema",
    "packages": [
      {
        "registry": "npm",
        "name": "mcp-openapi-schema",
        "version": "0.0.1",
        "command": "npx",
        "arguments": [
          "/ABSOLUTE/PATH/TO/openapi.yaml"
        ]
      }
    ]
  },
  {
    "name": "io.github.spathodea-network/opencti-mcp",
    "description": "io.github.spathodea-network/opencti-mcp",
    "repository": "https://github.com/Spathodea-Network/opencti-mcp"
  },
  {
    "name": "io.github.asusevski/opendota-mcp-server",
    "description": "io.github.asusevski/opendota-mcp-server",
    "repository": "https://github.com/asusevski/opendota-mcp-server"
  },
  {
    "name": "io.github.shanejonas/openrpc-mpc-server",
    "description": "A Model Context Protocol (MCP) server that provides JSON-RPC functionality through OpenRPC.",
    "repository": "https://github.com/shanejonas/openrpc-mpc-server",
    "packages": [
      {
        "registry": "npm",
        "name": "openrpc-mcp-server",
        "version": "0.1.2",
        "command": "npx",
        "arguments": [
          {
            "name": "-y",
            "description": "Install dependencies"
          },
          {
            "name": "openrpc-mcp-server@0.1.2",
            "description": "Package name"
          }
        ]
      }
    ]
  },
  {
    "name": "io.github.mschneider82/mcp-openweather",
    "description": "mcp server for openweather free api",
    "repository": "https://github.com/mschneider82/mcp-openweather"
  },
  {
    "name": "io.github.open-strategy-partners/osp_marketing_tools",
    "description": "A Model Context Protocol (MCP) server that empowers LLMs to use some of Open Srategy Partners' core writing and product marketing techniques.",
    "repository": "https://github.com/open-strategy-partners/osp_marketing_tools"
  },
  {
    "name": "io.github.vortiago/mcp-outline",
    "description": "A Model Context Protocol (MCP) server enabling AI assistants to interact with Outline documentation services.",
    "repository": "https://github.com/Vortiago/mcp-outline"
  },
  {
    "name": "io.github.kukapay/pancakeswap-poolspy-mcp",
    "description": "An MCP server that tracks newly created liquidity pools on Pancake Swap",
    "repository": "https://github.com/kukapay/pancakeswap-poolspy-mcp",
    "packages": [
      {
        "registry": "pypi",
        "name": "pancakeswap-poolspy-mcp",
        "version": "0.1.0",
        "command": "pip",
        "arguments": [
          "--directory path/to/pancakeswap-poolspy-mcp",
          "main.py"
        ],
        "environment": [
          {
            "name": "THEGRAPH_API_KEY",
            "description": "your api key from The Graph"
          }
        ]
      }
    ]
  },
  {
    "name": "io.github.vivekvells/mcp-pandoc",
    "description": "MCP server for document format conversion using pandoc.",
    "repository": "https://github.com/vivekVells/mcp-pandoc"
  },
  {
    "name": "io.github.sv/mcp-paradex-py",
    "description": "Connect AI agents to the Paradex trading platform. Retrieve market data, manage accounts, and execute trades seamlessly. Enhance your trading experience with automated tools and real-time insights.",
    "repository": "https://github.com/sv/mcp-paradex-py"
  },
  {
    "name": "io.github.hao-cyber/phone-mcp",
    "description": "A phone control plugin for MCP that allows you to control your Android phone through ADB commands to connect any human",
    "repository": "https://github.com/hao-cyber/phone-mcp"
  },
  {
    "name": "io.github.hungryrobot1/mcp-pif",
    "description": "A MCP implementation of the personal intelligence framework (PIF)",
    "repository": "https://github.com/hungryrobot1/MCP-PIF"
  },
  {
    "name": "io.github.sirmews/mcp-pinecone",
    "description": "Model Context Protocol server to allow for reading and writing from Pinecone. Rudimentary RAG",
    "repository": "https://github.com/sirmews/mcp-pinecone"
  },
  {
    "name": "io.github.felores/placid-mcp-server",
    "description": "Generate image and video creatives using Placid.app templates in MCP compatible hosts",
    "repository": "https://github.com/felores/placid-mcp-server"
  },
  {
    "name": "io.github.kelvin6365/plane-mcp-server",
    "description": "io.github.kelvin6365/plane-mcp-server",
    "repository": "https://github.com/kelvin6365/plane-mcp-server"
  },
  {
    "name": "io.github.executeautomation/mcp-playwright",
    "description": "Playwright Model Context Protocol Server - Tool to automate Browsers and APIs in Claude Desktop, Cline, Cursor IDE and More 🔌",
    "repository": "https://github.com/executeautomation/mcp-playwright",
    "packages": [
      {
        "registry": "npm",
        "name": "@executeautomation/playwright-mcp-server",
        "version": "1.0.5",
        "command": "npx",
        "arguments": [
          {
            "name": "-y",
            "description": "Install dependencies"
          },
          {
            "name": "@executeautomation/playwright-mcp-server@1.0.5",
            "description": "Package name"
          }
        ]
      }
    ]
  },
  {
    "name": "io.github.shannonlal/mcp-postman",
    "description": "MCP Server for running Postman Collections with Newman",
    "repository": "https://github.com/shannonlal/mcp-postman"
  },
  {
    "name": "io.github.allen-munsch/mcp-prefect",
    "description": "https://pypi.org/project/mcp-prefect/0.1.0/",
    "repository": "https://github.com/allen-munsch/mcp-prefect"
  },
  {
    "name": "io.github.kenjihikmatullah/productboard-mcp",
    "description": "Integrate the Productboard API into agentic workflows via MCP",
    "repository": "https://github.com/kenjihikmatullah/productboard-mcp",
    "packages": [
      {
        "registry": "npm",
        "name": "productboard-mcp",
        "version": "1.0.1",
        "command": "npx",
        "arguments": [
          {
            "name": "-y",
            "description": "Install dependencies"
          },
          {
            "name": "productboard-mcp@1.0.1",
            "description": "Package name"
          }
        ],
        "environment": [
          {
            "name": "PRODUCTBOARD_ACCESS_TOKEN",
            "description": "<YOUR_TOKEN>"
          }
        ]
      }
    ]
  },
  {
    "name": "io.github.pab1it0/prometheus-mcp-server",
    "description": "A Model Context Protocol (MCP) server that enables AI assistants to query and analyze Prometheus metrics through standardized interfaces.",
    "repository": "https://github.com/pab1it0/prometheus-mcp-server",
    "packages": [
      {
        "registry": "docker",
        "name": "prometheus_mcp_server",
        "version": "1.0.0",
        "command": "docker",
        "arguments": [
          "--rm",
          "-i",
          "-e PROMETHEUS_URL",
          "-e PROMETHEUS_USERNAME",
          "-e PROMETHEUS_PASSWORD"
        ],
        "environment": [
          {
            "name": "PROMETHEUS_URL",
            "description": "http://your-prometheus-server:9090"
          },
          {
            "name": "PROMETHEUS_USERNAME",
            "description": "your_username"
          },
          {
            "name": "PROMETHEUS_PASSWORD",
            "description": "your_password"
          }
        ]
      }
    ]
  },
  {
    "name": "io.github.sssjiang/pubchem_mcp_server",
    "description": "io.github.sssjiang/pubchem_mcp_server",
    "repository": "https://github.com/sssjiang/pubchem_mcp_server"
  },
  {
    "name": "io.github.dogukanakkaya/pulumi-mcp-server",
    "description": "io.github.dogukanakkaya/pulumi-mcp-server",
    "repository": "https://github.com/dogukanakkaya/pulumi-mcp-server",
    "packages": [
      {
        "registry": "docker",
        "name": "pulumi-mcp-server",
        "version": "1.0.0",
        "command": "docker",
        "arguments": [
          "-i",
          "--rm",
          "--name pulumi-mcp-server",
          "-e PULUMI_ACCESS_TOKEN",
          "dogukanakkaya/pulumi-mcp-server"
        ],
        "environment": [
          {
            "name": "PULUMI_ACCESS_TOKEN",
            "description": "${YOUR_TOKEN}"
          }
        ]
      }
    ]
  },
  {
    "name": "io.github.djannot/puppeteer-vision-mcp",
    "description": "io.github.djannot/puppeteer-vision-mcp",
    "repository": "https://github.com/djannot/puppeteer-vision-mcp"
  },
  {
    "name": "io.github.ashiknesin/pushover-mcp",
    "description": "A MCP implementation for sending notifications via Pushover",
    "repository": "https://github.com/AshikNesin/pushover-mcp",
    "packages": [
      {
        "registry": "npm",
        "name": "pushover-mcp",
        "version": "1.0.0",
        "command": "npx",
        "arguments": [
          "start",
          "--token YOUR_TOKEN",
          "--user YOUR_USER"
        ]
      }
    ]
  },
  {
    "name": "io.github.jjsantos01/qgis_mcp",
    "description": "Model Context Protocol (MCP) that allows LLMs to use QGIS Desktop",
    "repository": "https://github.com/jjsantos01/qgis_mcp",
    "packages": [
      {
        "registry": "pypi",
        "name": "qgis-mcp",
        "version": "0.1.0",
        "command": "pip",
        "arguments": [
          "--directory /ABSOLUTE/PATH/TO/PARENT/REPO/FOLDER/qgis_mcp/src/qgis_mcp",
          "qgis_mcp_server.py"
        ]
      }
    ]
  },
  {
    "name": "io.github.gongrzhe/quickchart-mcp-server",
    "description": "A Model Context Protocol server for generating charts using QuickChart.io  . It allows you to create various types of charts through MCP tools.",
    "repository": "https://github.com/GongRzhe/Quickchart-MCP-Server",
    "packages": [
      {
        "registry": "npm",
        "name": "@gongrzhe/quickchart-mcp-server",
        "version": "1.0.6",
        "command": "npx",
        "arguments": [
          {
            "name": "-y",
            "description": "Install dependencies"
          },
          {
            "name": "@gongrzhe/quickchart-mcp-server@1.0.6",
            "description": "Package name"
          }
        ]
      }
    ]
  },
  {
    "name": "io.github.66julienmartin/mcp-server-qwen_max",
    "description": "MCP server for Qwen Max model",
    "repository": "https://github.com/66julienmartin/MCP-server-Qwen_Max"
  },
  {
    "name": "io.github.kenliao94/mcp-server-rabbitmq",
    "description": "MCP server for interacting with RabbitMQ",
    "repository": "https://github.com/kenliao94/mcp-server-rabbitmq",
    "packages": [
      {
        "registry": "pypi",
        "name": "mcp-server-rabbitmq",
        "version": "2.0.0",
        "command": "pip",
        "arguments": [
          "--directory /path/to/repo/mcp-server-rabbitmq",
          "mcp-server-rabbitmq",
          "--rabbitmq-host <hostname ex. test.rabbit.com, localhost>",
          "--port <port number ex. 5672>",
          "--username <rabbitmq username>",
          "--password <rabbitmq password>",
          "--use-tls <true if uses amqps, false otherwise>"
        ]
      }
    ]
  },
  {
    "name": "io.github.apify/mcp-server-rag-web-browser",
    "description": "A MCP Server for the RAG Web Browser Actor",
    "repository": "https://github.com/apify/mcp-server-rag-web-browser"
  },
  {
    "name": "io.github.hiromitsusasaki/raindrop-io-mcp-server",
    "description": "An integration that allows LLMs to interact with Raindrop.io bookmarks using the Model Context Protocol (MCP).",
    "repository": "https://github.com/hiromitsusasaki/raindrop-io-mcp-server"
  },
  {
    "name": "io.github.dschuler36/reaper-mcp-server",
    "description": "An MCP Server for interacting with Reaper projects.",
    "repository": "https://github.com/dschuler36/reaper-mcp-server"
  },
  {
    "name": "io.github.gongrzhe/redis-mcp-server",
    "description": "A Redis MCP server (pushed to https://github.com/modelcontextprotocol/servers/tree/main/src/redis) implementation for interacting with Redis databases. This server enables LLMs to interact with Redis key-value stores through a set of standardized tools.",
    "repository": "https://github.com/GongRzhe/REDIS-MCP-Server",
    "packages": [
      {
        "registry": "docker",
        "name": "@gongrzhe/server-redis-mcp",
        "version": "1.0.0",
        "command": "docker",
        "arguments": [
          "mcp/redis",
          "redis://host.docker.internal:6379"
        ]
      }
    ]
  },
  {
    "name": "io.github.prajwalnayak7/mcp-server-redis",
    "description": "MCP server to interact with Redis Server, AWS Memory DB, etc for caching or other use-cases where in-memory and key-value based storage is appropriate",
    "repository": "https://github.com/prajwalnayak7/mcp-server-redis"
  },
  {
    "name": "io.github.skydeckai/mcp-server-rememberizer",
    "description": "An MCP Server to enable global access to Rememberizer",
    "repository": "https://github.com/skydeckai/mcp-server-rememberizer"
  },
  {
    "name": "io.github.deepfates/mcp-replicate",
    "description": "Model Context Protocol server for Replicate's API",
    "repository": "https://github.com/deepfates/mcp-replicate"
  },
  {
    "name": "io.github.xxxbrian/mcp-rquest",
    "description": "A MCP server providing realistic browser-like HTTP request capabilities with accurate TLS/JA3/JA4 fingerprints for bypassing anti-bot measures. It also supports converting PDF and HTML documents to Markdown for easier processing by LLMs.",
    "repository": "https://github.com/xxxbrian/mcp-rquest"
  },
  {
    "name": "io.github.r-huijts/rijksmuseum-mcp",
    "description": "Rijksmuseum MCP integration for artwork exploration and analysis",
    "repository": "https://github.com/r-huijts/rijksmuseum-mcp"
  },
  {
    "name": "io.github.jifrozen0110/mcp-riot",
    "description": "League of Legends MCP Server",
    "repository": "https://github.com/jifrozen0110/mcp-riot"
  },
  {
    "name": "io.github.salesforce-mcp/salesforce-mcp",
    "description": "Salesforce MCP",
    "repository": "https://github.com/salesforce-mcp/salesforce-mcp"
  },
  {
    "name": "io.github.rust-mcp-stack/rust-mcp-filesystem",
    "description": "Blazing-fast, asynchronous MCP server for seamless filesystem operations.",
    "repository": "https://github.com/rust-mcp-stack/rust-mcp-filesystem"
  },
  {
    "name": "io.github.smn2gnt/mcp-salesforce",
    "description": "MCP Salesforce connector",
    "repository": "https://github.com/smn2gnt/MCP-Salesforce"
  },
  {
    "name": "io.github.adityak74/mcp-scholarly",
    "description": "A MCP server to search for accurate academic articles.",
    "repository": "https://github.com/adityak74/mcp-scholarly"
  },
  {
    "name": "io.github.cyberchitta/scrapling-fetch-mcp",
    "description": "Helps AI assistants access text content from bot-protected websites. MCP server that fetches HTML/markdown from sites with anti-automation measures using Scrapling.",
    "repository": "https://github.com/cyberchitta/scrapling-fetch-mcp"
  },
  {
    "name": "io.github.ihor-sokoliuk/mcp-searxng",
    "description": "MCP Server for SearXNG",
    "repository": "https://github.com/ihor-sokoliuk/mcp-searxng",
    "packages": [
      {
        "registry": "docker",
        "name": "mcp-searxng",
        "version": "0.4.6",
        "command": "docker",
        "arguments": [
          "-i",
          "--rm",
          "-e SEARXNG_URL"
        ],
        "environment": [
          {
            "name": "SEARXNG_URL",
            "description": "YOUR_SEARXNG_INSTANCE_URL"
          }
        ]
      }
    ]
  },
  {
    "name": "io.github.stefanoamorelli/sec-edgar-mcp",
    "description": "A Model Context Protocol (MCP) Server for SEC EDGAR",
    "repository": "https://github.com/stefanoamorelli/sec-edgar-mcp"
  },
  {
    "name": "io.github.osomai/servicenow-mcp",
    "description": "MCP Server for ServiceNow",
    "repository": "https://github.com/osomai/servicenow-mcp",
    "packages": [
      {
        "registry": "pypi",
        "name": "servicenow-mcp",
        "version": "0.1.0",
        "command": "pip",
        "arguments": [
          "-m servicenow_mcp.cli"
        ],
        "environment": [
          {
            "name": "SERVICENOW_INSTANCE_URL",
            "description": "https://your-instance.service-now.com"
          },
          {
            "name": "SERVICENOW_USERNAME",
            "description": "your-username"
          },
          {
            "name": "SERVICENOW_PASSWORD",
            "description": "your-password"
          },
          {
            "name": "SERVICENOW_AUTH_TYPE",
            "description": "basic"
          }
        ]
      }
    ]
  },
  {
    "name": "io.github.geli2001/shopify-mcp",
    "description": "MCP server for Shopify api, usable on mcp clients such as Anthropic's Claude and Cursor IDE",
    "repository": "https://github.com/GeLi2001/shopify-mcp",
    "packages": [
      {
        "registry": "npm",
        "name": "shopify-mcp",
        "version": "1.0.5",
        "command": "npx",
        "arguments": [
          "--accessToken <YOUR_ACCESS_TOKEN>",
          "--domain <YOUR_SHOP>.myshopify.com"
        ]
      }
    ]
  },
  {
    "name": "io.github.dvcrn/mcp-server-siri-shortcuts",
    "description": "MCP for calling Siri Shorcuts from LLMs",
    "repository": "https://github.com/dvcrn/mcp-server-siri-shortcuts",
    "packages": [
      {
        "registry": "npm",
        "name": "mcp-server-siri-shortcuts",
        "version": "1.0.0",
        "command": "npx",
        "arguments": [
          {
            "name": "-y",
            "description": "Install dependencies"
          },
          {
            "name": "mcp-server-siri-shortcuts@1.0.0",
            "description": "Package name"
          }
        ]
      }
    ]
  },
  {
    "name": "io.github.korotovsky/slack-mcp-server",
    "description": "The most powerful MCP Slack Server with Stdio and SSE transports, Proxy support and no permission requirements on Slack Workspace! ",
    "repository": "https://github.com/korotovsky/slack-mcp-server"
  },
  {
    "name": "io.github.isaacwasserman/mcp-snowflake-server",
    "description": "io.github.isaacwasserman/mcp-snowflake-server",
    "repository": "https://github.com/isaacwasserman/mcp-snowflake-server"
  },
  {
    "name": "io.github.szeider/mcp-solver",
    "description": "Model Context Protocol (MCP) server for constraint optimization and solving\"",
    "repository": "https://github.com/szeider/mcp-solver"
  },
  {
    "name": "io.github.yeonupark/mcp-soccer-data",
    "description": "An MCP server that provides real-time football data based on the SoccerDataAPI.",
    "repository": "https://github.com/yeonupark/mcp-soccer-data"
  },
  {
    "name": "io.github.sendaifun/solana-agent-kit",
    "description": "connect any ai agents to solana protocols",
    "repository": "https://github.com/sendaifun/solana-agent-kit"
  },
  {
    "name": "io.github.varunneal/spotify-mcp",
    "description": "MCP to connect your LLM with Spotify.",
    "repository": "https://github.com/varunneal/spotify-mcp",
    "packages": [
      {
        "registry": "pypi",
        "name": "spotify-mcp",
        "version": "0.2.0",
        "command": "pip",
        "arguments": [
          "--directory /path/to/spotify_mcp",
          "spotify-mcp"
        ],
        "environment": [
          {
            "name": "SPOTIFY_CLIENT_ID",
            "description": "YOUR_CLIENT_ID"
          },
          {
            "name": "SPOTIFY_CLIENT_SECRET",
            "description": "YOUR_CLIENT_SECRET"
          },
          {
            "name": "SPOTIFY_REDIRECT_URI",
            "description": "http://127.0.0.1:8080/callback"
          }
        ]
      }
    ]
  },
  {
    "name": "io.github.boston343/starwind-ui-mcp",
    "description": "Local MCP server implementation for Starwind UI that you can use with Cursor, Windsurf, and other AI tools",
    "repository": "https://github.com/starwind-ui/starwind-ui-mcp"
  },
  {
    "name": "io.github.r-huijts/strava-mcp",
    "description": "A Model Context Protocol (MCP) server that connects to Strava API, providing tools to access Strava data through LLMs",
    "repository": "https://github.com/r-huijts/strava-mcp"
  },
  {
    "name": "io.github.atharvagupta2003/mcp-stripe",
    "description": "io.github.atharvagupta2003/mcp-stripe",
    "repository": "https://github.com/atharvagupta2003/mcp-stripe"
  },
  {
    "name": "io.github.wilsonchenghy/shadertoy-mcp",
    "description": "io.github.wilsonchenghy/shadertoy-mcp",
    "repository": "https://github.com/wilsonchenghy/ShaderToy-MCP",
    "packages": [
      {
        "registry": "pypi",
        "name": "wilsonchenghy/ShaderToy-MCP",
        "command": "pip",
        "arguments": [
          "--with mcp[cli]",
          "mcp",
          "<path_to_project>/ShaderToy-MCP/src/ShaderToy-MCP/server.py"
        ],
        "environment": [
          {
            "name": "SHADERTOY_APP_KEY",
            "description": "your_actual_api_key"
          }
        ]
      }
    ]
  },
  {
    "name": "io.github.sonnylazuardi/cursor-talk-to-figma-mcp",
    "description": "Cursor Talk To Figma MCP",
    "repository": "https://github.com/sonnylazuardi/cursor-talk-to-figma-mcp"
  },
  {
    "name": "io.github.laksh-star/mcp-server-tmdb",
    "description": "MCP Server with TMDB",
    "repository": "https://github.com/Laksh-star/mcp-server-tmdb"
  },
  {
    "name": "io.github.ramxx/mcp-tavily",
    "description": "An MCP server for Tavily's search API",
    "repository": "https://github.com/RamXX/mcp-tavily"
  },
  {},
  {
    "name": "io.github.chaindead/telegram-mcp",
    "description": "Telegram MCP for managing dialogs, messages, drafts, read statuses, and more.",
    "repository": "https://github.com/chaindead/telegram-mcp"
  },
  {
    "name": "io.github.arturborycki/mcp-teradata",
    "description": "MCP Server for Teradata database",
    "repository": "https://github.com/arturborycki/mcp-teradata"
  },
  {
    "name": "io.github.gongrzhe/terminal-controller-mcp",
    "description": "A Model Context Protocol (MCP) server that enables secure terminal command execution, directory navigation, and file system operations through a standardized interface.",
    "repository": "https://github.com/GongRzhe/terminal-controller-mcp"
  },
  {
    "name": "io.github.geli2001/tft-mcp-server",
    "description": "io.github.geli2001/tft-mcp-server",
    "repository": "https://github.com/GeLi2001/tft-mcp-server",
    "packages": [
      {
        "registry": "npm",
        "name": "mcp-server-tft",
        "version": "0.1.3",
        "command": "npx",
        "arguments": [
          "--apiKey <YOUR_RIOT_API_KEY>",
          "--gameName <YOUR_GAME_NAME>",
          "--tagLine <YOUR_TAG_LINE>"
        ]
      }
    ]
  },
  {
    "name": "io.github.kukapay/thegraph-mcp",
    "description": "An MCP server that powers AI agents with indexed blockchain data from The Graph.",
    "repository": "https://github.com/kukapay/thegraph-mcp",
    "packages": [
      {
        "registry": "pypi",
        "name": "thegraph-mcp",
        "version": "0.1.0",
        "command": "pip",
        "arguments": [
          "--directory path/to/thegraph-mcp",
          "main.py"
        ],
        "environment": [
          {
            "name": "THEGRAPH_API_KEY",
            "description": "your_api_key_here"
          }
        ]
      }
    ]
  },
  {
    "name": "io.github.delorenj/mcp-server-ticketmaster",
    "description": "A Ticketmaster MCP server that provides query capabilites from the Discovery API",
    "repository": "https://github.com/delorenj/mcp-server-ticketmaster",
    "packages": [
      {
        "registry": "npm",
        "name": "@delorenj/mcp-server-ticketmaster",
        "version": "0.2.5",
        "command": "npx",
        "arguments": [
          {
            "name": "-y",
            "description": "Install dependencies"
          },
          {
            "name": "@delorenj/mcp-server-ticketmaster@0.2.5",
            "description": "Package name"
          }
        ],
        "environment": [
          {
            "name": "TICKETMASTER_API_KEY",
            "description": "your-api-key-here"
          }
        ]
      }
    ]
  },
  {
    "name": "io.github.alexarevalo9/ticktick-mcp-server",
    "description": "A Model Context Protocol (MCP) server designed to integrate with the TickTick task management platform, enabling intelligent context-aware task operations and automation.",
    "repository": "https://github.com/alexarevalo9/ticktick-mcp-server",
    "packages": [
      {
        "registry": "docker",
        "name": "@alexarevalo.ai/mcp-server-ticktick",
        "version": "1.1.9",
        "command": "docker",
        "arguments": [
          "-i",
          "--rm",
          "-e TICKTICK_CLIENT_ID",
          "-e TICKTICK_CLIENT_SECRET",
          "-e TICKTICK_ACCESS_TOKEN",
          "mcp/ticktick"
        ],
        "environment": [
          {
            "name": "TICKTICK_CLIENT_ID",
            "description": "<YOUR_CLIENT_ID>"
          },
          {
            "name": "TICKTICK_CLIENT_SECRET",
            "description": "<YOUR_CLIENT_SECRET>"
          },
          {
            "name": "TICKTICK_ACCESS_TOKEN",
            "description": "<YOUR_ACCESS_TOKEN>"
          }
        ]
      }
    ]
  },
  {
    "name": "io.github.abhiz123/todoist-mcp-server",
    "description": "MCP server for Todoist integration enabling natural language task management with Claude",
    "repository": "https://github.com/abhiz123/todoist-mcp-server",
    "packages": [
      {
        "registry": "npm",
        "name": "@abhiz123/todoist-mcp-server",
        "version": "0.1.0",
        "command": "npx",
        "arguments": [
          {
            "name": "-y",
            "description": "Install dependencies"
          },
          {
            "name": "@abhiz123/todoist-mcp-server@0.1.0",
            "description": "Package name"
          }
        ],
        "environment": [
          {
            "name": "TODOIST_API_TOKEN",
            "description": "your_api_token_here"
          }
        ]
      }
    ]
  },
  {
    "name": "io.github.kukapay/token-minter-mcp",
    "description": "An MCP server providing tools for AI agents to mint ERC-20 tokens across multiple blockchains.",
    "repository": "https://github.com/kukapay/token-minter-mcp"
  },
  {
    "name": "io.github.kukapay/token-revoke-mcp",
    "description": "An MCP server for checking and revoking ERC-20 token allowances across multiple blockchains.",
    "repository": "https://github.com/kukapay/token-revoke-mcp"
  },
  {
    "name": "io.github.suhail-ak-s/mcp-typesense-server",
    "description": "io.github.suhail-ak-s/mcp-typesense-server",
    "repository": "https://github.com/suhail-ak-s/mcp-typesense-server",
    "packages": [
      {
        "registry": "npm",
        "name": "typesense-mcp-server",
        "version": "1.0.0",
        "command": "npx",
        "arguments": [
          "--host your-typesense-host",
          "--port 8108",
          "--protocol http",
          "--api-key your-api-key"
        ]
      }
    ]
  },
  {
    "name": "io.github.gongrzhe/travel-planner-mcp-server",
    "description": "io.github.gongrzhe/travel-planner-mcp-server",
    "repository": "https://github.com/GongRzhe/TRAVEL-PLANNER-MCP-Server"
  },
  {
    "name": "io.github.kukapay/uniswap-poolspy-mcp",
    "description": "An MCP server that tracks newly created liquidity pools on Uniswap across nine blockchain networks.",
    "repository": "https://github.com/kukapay/uniswap-poolspy-mcp",
    "packages": [
      {
        "registry": "pypi",
        "name": "uniswap-poolspy-mcp",
        "version": "0.1.0",
        "command": "pip",
        "arguments": [
          "run main.py"
        ],
        "environment": [
          {
            "name": "THEGRAPH_API_KEY",
            "description": "your api key from The Graph"
          }
        ]
      }
    ]
  },
  {
    "name": "io.github.kukapay/uniswap-trader-mcp",
    "description": "An MCP server for AI agents to automate token swaps on Uniswap DEX across multiple blockchains.",
    "repository": "https://github.com/kukapay/uniswap-trader-mcp"
  },
  {
    "name": "io.github.ognis1205/mcp-server-unitycatalog",
    "description": "Unity Catalog AI Model Context Protocol Server",
    "repository": "https://github.com/ognis1205/mcp-server-unitycatalog",
    "packages": [
      {
        "registry": "docker",
        "name": "mcp-server-unitycatalog",
        "version": "0.1.0",
        "command": "docker",
        "arguments": [
          "--rm",
          "-i",
          "--uc_server <your unity catalog url>",
          "--uc_catalog <your catalog name>",
          "--uc_schema <your schema name>"
        ]
      }
    ]
  },
  {
    "name": "io.github.codergamester/mcp-unity",
    "description": "MCP Server to integrate Unity Editor game engine with different AI Model clients (e.g. Claude Desktop, Windsurf, Cursor)",
    "repository": "https://github.com/CoderGamester/mcp-unity"
  },
  {
    "name": "io.github.quazaai/unitymcpintegration",
    "description": "Enable AI Agents to Control Unity",
    "repository": "https://github.com/quazaai/UnityMCPIntegration"
  },
  {
    "name": "io.github.isaacwasserman/mcp-vegalite-server",
    "description": "io.github.isaacwasserman/mcp-vegalite-server",
    "repository": "https://github.com/isaacwasserman/mcp-vegalite-server"
  },
  {
    "name": "io.github.burningion/video-editing-mcp",
    "description": "MCP Interface for Video Jungle",
    "repository": "https://github.com/burningion/video-editing-mcp",
    "packages": [
      {
        "registry": "pypi",
        "name": "video-editor-mcp",
        "version": "0.1.25",
        "command": "pip",
        "arguments": [
          "--directory /Users/<PATH_TO>/video-jungle-mcp",
          "video-editor-mcp",
          "<YOURAPIKEY>"
        ],
        "environment": [
          {
            "name": "LOAD_PHOTOS_DB",
            "description": "1"
          }
        ]
      }
    ]
  },
  {
    "name": "io.github.13rac1/videocapture-mcp",
    "description": "Model Context Protocol (MCP) server to capture images from an OpenCV-compatible webcam or video source",
    "repository": "https://github.com/13rac1/videocapture-mcp",
    "packages": [
      {
        "registry": "pypi",
        "name": "videocapture-mcp",
        "version": "0.1.0",
        "command": "pip",
        "arguments": [
          "--with mcp[cli]",
          "--with numpy",
          "--with opencv-python",
          "mcp",
          "C:\\ABSOLUTE_PATH\\videocapture-mcp\\videocapture_mcp.py"
        ]
      }
    ]
  },
  {
    "name": "io.github.mfukushim/map-traveler-mcp",
    "description": "Virtual traveler library for MCP",
    "repository": "https://github.com/mfukushim/map-traveler-mcp"
  },
  {
    "name": "io.github.dinghuazhou/sample-mcp-server-tos",
    "description": "io.github.dinghuazhou/sample-mcp-server-tos",
    "repository": "https://github.com/dinghuazhou/sample-mcp-server-tos"
  },
  {
    "name": "io.github.wanaku-ai/wanaku",
    "description": "Wanaku MCP Router",
    "repository": "https://github.com/wanaku-ai/wanaku",
    "packages": [
      {
        "registry": "npm",
        "name": "wanaku-ai/wanaku",
        "command": "npx",
        "arguments": [
          {
            "name": "-y",
            "description": "Install dependencies"
          },
          {
            "name": "wanaku-ai/wanaku@latest",
            "description": "Package name"
          }
        ],
        "environment": [
          {
            "name": "API_KEY",
            "description": "${input:apiKey}"
          }
        ]
      }
    ]
  },
  {
    "name": "io.github.kapilduraphe/webflow-mcp-server",
    "description": "Webflow MCP server",
    "repository": "https://github.com/kapilduraphe/webflow-mcp-server"
  },
  {
    "name": "io.github.kukapay/whale-tracker-mcp",
    "description": "A mcp server for tracking cryptocurrency whale transactions.",
    "repository": "https://github.com/kukapay/whale-tracker-mcp",
    "packages": [
      {
        "registry": "npm",
        "name": "whale-tracker-mcp",
        "version": "0.1.0",
        "command": "npx",
        "arguments": [
          {
            "name": "-y",
            "description": "Install dependencies"
          },
          {
            "name": "whale-tracker-mcp@0.1.0",
            "description": "Package name"
          }
        ],
        "environment": [
          {
            "name": "API_KEY",
            "description": "${input:apiKey}"
          }
        ]
      }
    ]
  },
  {
    "name": "io.github.lharries/whatsapp-mcp",
    "description": "WhatsApp MCP server",
    "repository": "https://github.com/lharries/whatsapp-mcp"
  },
  {
    "name": "io.github.bharathvaj-ganesan/whois-mcp",
    "description": "MCP Server for whois lookups.",
    "repository": "https://github.com/bharathvaj-ganesan/whois-mcp",
    "packages": [
      {
        "registry": "npm",
        "name": "@bharathvaj/whois-mcp",
        "version": "1.0.1",
        "command": "npx",
        "arguments": [
          {
            "name": "-y",
            "description": "Install dependencies"
          },
          {
            "name": "@bharathvaj/whois-mcp@1.0.1",
            "description": "Package name"
          }
        ]
      }
    ]
  },
  {
    "name": "io.github.zzaebok/mcp-wikidata",
    "description": "A server implementation for Wikidata API using the Model Context Protocol (MCP).",
    "repository": "https://github.com/zzaebok/mcp-wikidata"
  },
  {
    "name": "io.github.wildfly-extras/wildfly-mcp",
    "description": "WildFly MCP server and other tooling to integrate WildFly in AI space",
    "repository": "https://github.com/wildfly-extras/wildfly-mcp"
  },
  {
    "name": "io.github.simonb97/win-cli-mcp-server",
    "description": "Model Context Protocol server for secure command-line interactions on Windows systems",
    "repository": "https://github.com/SimonB97/win-cli-mcp-server"
  },
  {
    "name": "io.github.anshumax/world_bank_mcp_server",
    "description": "An implementation of the Model Context Protocol for the World Bank open data API",
    "repository": "https://github.com/anshumax/world_bank_mcp_server",
    "packages": [
      {
        "registry": "pypi",
        "name": "world_bank_mcp_server",
        "version": "0.1.0",
        "command": "pip",
        "arguments": [
          "--directory path/to/world_bank_mcp_server",
          "world_bank_mcp_server"
        ]
      }
    ]
  },
  {
    "name": "io.github.enescinr/twitter-mcp",
    "description": "A Model Context Protocol server allows to interact with Twitter, enabling posting tweets and searching Twitter.",
    "repository": "https://github.com/EnesCinr/twitter-mcp",
    "packages": [
      {
        "registry": "npm",
        "name": "@enescinar/twitter-mcp",
        "version": "0.1.0",
        "command": "npx",
        "arguments": [
          {
            "name": "-y",
            "description": "Install dependencies"
          },
          {
            "name": "@enescinar/twitter-mcp@0.1.0",
            "description": "Package name"
          }
        ],
        "environment": [
          {
            "name": "API_KEY",
            "description": "your_api_key_here"
          },
          {
            "name": "API_SECRET_KEY",
            "description": "your_api_secret_key_here"
          },
          {
            "name": "ACCESS_TOKEN",
            "description": "your_access_token_here"
          },
          {
            "name": "ACCESS_TOKEN_SECRET",
            "description": "your_access_token_secret_here"
          }
        ]
      }
    ]
  },
  {
    "name": "io.github.vidhupv/x-mcp",
    "description": "io.github.vidhupv/x-mcp",
    "repository": "https://github.com/vidhupv/x-mcp",
    "packages": [
      {
        "registry": "pypi",
        "name": "x-mcp",
        "version": "0.1.0",
        "command": "pip",
        "arguments": [
          "x-mcp"
        ],
        "environment": [
          {
            "name": "TWITTER_API_KEY",
            "description": "your_api_key"
          },
          {
            "name": "TWITTER_API_SECRET",
            "description": "your_api_secret"
          },
          {
            "name": "TWITTER_ACCESS_TOKEN",
            "description": "your_access_token"
          },
          {
            "name": "TWITTER_ACCESS_TOKEN_SECRET",
            "description": "your_access_token_secret"
          }
        ]
      }
    ]
  },
  {
    "name": "io.github.shenghaiwang/xcodebuild",
    "description": "MCP tool for building Xcode iOS workspace/project and feeding back error to LLMs.",
    "repository": "https://github.com/ShenghaiWang/xcodebuild"
  },
  {
    "name": "io.github.john-zhang-dev/xero-mcp",
    "description": "A Model Context Protocol server allows Clients to interact with Xero",
    "repository": "https://github.com/john-zhang-dev/xero-mcp",
    "packages": [
      {
        "registry": "npm",
        "name": "xero-mcp",
        "version": "1.3.0",
        "command": "npx",
        "arguments": [
          {
            "name": "-y",
            "description": "Install dependencies"
          },
          {
            "name": "xero-mcp@1.3.0",
            "description": "Package name"
          }
        ],
        "environment": [
          {
            "name": "XERO_CLIENT_ID",
            "description": "YOUR_CLIENT_ID"
          },
          {
            "name": "XERO_CLIENT_SECRET",
            "description": "YOUR_CLIENT_SECRET"
          },
          {
            "name": "XERO_REDIRECT_URI",
            "description": "http://localhost:5000/callback"
          }
        ]
      }
    ]
  },
  {
    "name": "io.github.xgenerationlab/xiyan_mcp_server",
    "description": "A Model Context Protocol (MCP) server that enables natural language queries to databases",
    "repository": "https://github.com/XGenerationLab/xiyan_mcp_server"
  },
  {
    "name": "io.github.apeyroux/mcp-xmind",
    "description": "io.github.apeyroux/mcp-xmind",
    "repository": "https://github.com/apeyroux/mcp-xmind",
    "packages": [
      {
        "registry": "npm",
        "name": "@41px/mcp-xmind",
        "version": "1.1.1",
        "command": "npx",
        "arguments": [
          "/Users/alex/XMind"
        ]
      }
    ]
  },
  {
    "name": "io.github.chuckbryan/ynabmcpserver",
    "description": "io.github.chuckbryan/ynabmcpserver",
    "repository": "https://github.com/ChuckBryan/ynabmcpserver"
  },
  {
    "name": "io.github.zubeidhendricks/youtube-mcp-server",
    "description": "MCP Server for YouTube API, enabling video management, Shorts creation, and advanced analytics",
    "repository": "https://github.com/ZubeidHendricks/youtube-mcp-server",
    "packages": [
      {
        "registry": "npm",
        "name": "zubeid-youtube-mcp-server",
        "version": "1.0.0",
        "command": "npx",
        "arguments": [
          {
            "name": "-y",
            "description": "Install dependencies"
          },
          {
            "name": "zubeid-youtube-mcp-server@1.0.0",
            "description": "Package name"
          }
        ],
        "environment": [
          {
            "name": "YOUTUBE_API_KEY",
            "description": "${input:apiKey}"
          }
        ]
      }
    ]
  },
  {
    "name": "io.github.prathamesh0901/zoom-mcp-server",
    "description": "io.github.prathamesh0901/zoom-mcp-server",
    "repository": "https://github.com/Prathamesh0901/zoom-mcp-server",
    "packages": [
      {
        "registry": "npm",
        "name": "@prathamesh0901/zoom-mcp-server",
        "version": "1.0.1",
        "command": "npx",
        "arguments": [
          {
            "name": "-y",
            "description": "Install dependencies"
          },
          {
            "name": "@prathamesh0901/zoom-mcp-server@1.0.1",
            "description": "Package name"
          }
        ],
        "environment": [
          {
            "name": "ZOOM_ACCOUNT_ID",
            "description": "Your Zoom Account ID"
          },
          {
            "name": "ZOOM_CLIENT_ID",
            "description": "Your Zoom Client ID"
          },
          {
            "name": "ZOOM_CLIENT_SECRET",
            "description": "Your Zoom Client Secret"
          }
        ]
      }
    ]
  },
  {
    "name": "io.github.isdaniel/mcp_weather_server",
    "description": "io.github.isdaniel/mcp_weather_server",
    "repository": "https://github.com/isdaniel/mcp_weather_server"
  },
  {
    "name": "io.github.zcaceres/easy-mcp",
    "description": "Absurdly easy Model Context Protocol Servers in Typescript",
    "repository": "https://github.com/zcaceres/easy-mcp"
  },
  {
    "name": "io.github.tadata-org/fastapi_mcp",
    "description": "Expose your FastAPI endpoints as Model Context Protocol (MCP) tools, with Auth!",
    "repository": "https://github.com/tadata-org/fastapi_mcp"
  },
  {
    "name": "io.github.punkpeye/fastmcp",
    "description": "A TypeScript framework for building MCP servers.",
    "repository": "https://github.com/punkpeye/fastmcp",
    "packages": [
      {
        "registry": "npm",
        "name": "fastmcp",
        "version": "1.0.0",
        "command": "npx",
        "arguments": [
          "/PATH/TO/YOUR_PROJECT/src/index.ts"
        ],
        "environment": [
          {
            "name": "YOUR_ENV_VAR",
            "description": "value"
          }
        ]
      }
    ]
  },
  {
    "name": "io.github.strowk/foxy-contexts",
    "description": "Foxy contexts is a library for building context servers supporting Model Context Protocol",
    "repository": "https://github.com/strowk/foxy-contexts"
  },
  {
    "name": "io.github.alibaba/higress",
    "description": "🤖 AI Gateway | AI Native API Gateway",
    "repository": "https://github.com/alibaba/higress"
  },
  {
    "name": "io.github.quarkiverse/quarkus-mcp-server",
    "description": "This extension enables developers to implement the MCP server features easily.",
    "repository": "https://github.com/quarkiverse/quarkus-mcp-server"
  },
  {
    "name": "io.github.mcpdotdirect/template-mcp-server",
    "description": "Template to quickly set up your own MCP server ",
    "repository": "https://github.com/mcpdotdirect/template-mcp-server"
  },
  {
    "name": "io.github.marimo-team/codemirror-mcp",
    "description": "CodeMirror extension to hook up a Model Context Provider (MCP)",
    "repository": "https://github.com/marimo-team/codemirror-mcp",
    "packages": [
      {
        "registry": "npm",
        "name": "@marimo-team/codemirror-mcp",
        "version": "0.1.2",
        "command": "npx",
        "arguments": [
          {
            "name": "-y",
            "description": "Install dependencies"
          },
          {
            "name": "@marimo-team/codemirror-mcp@0.1.2",
            "description": "Package name"
          }
        ],
        "environment": [
          {
            "name": "API_KEY",
            "description": "${input:apiKey}"
          }
        ]
      }
    ]
  },
  {
    "name": "io.github.badkk/awesome-crypto-mcp-servers",
    "description": "A collection of crypto MCP servers.",
    "repository": "https://github.com/badkk/awesome-crypto-mcp-servers"
  },
  {
    "name": "io.github.appcypher/awesome-mcp-servers",
    "description": "Awesome MCP Servers - A curated list of Model Context Protocol servers",
    "repository": "https://github.com/appcypher/awesome-mcp-servers"
  },
  {
    "name": "io.github.punkpeye/awesome-mcp-servers",
    "description": "A collection of MCP servers.",
    "repository": "https://github.com/punkpeye/awesome-mcp-servers"
  },
  {
    "name": "io.github.wong2/awesome-mcp-servers",
    "description": "A curated list of Model Context Protocol (MCP) servers",
    "repository": "https://github.com/wong2/awesome-mcp-servers"
  },
  {
    "name": "io.github.jaw9c/awesome-remote-mcp-servers",
    "description": "A curated, opinionated list of high-quality remote Model Context Protocol (MCP) servers. ",
    "repository": "https://github.com/jaw9c/awesome-remote-mcp-servers",
    "packages": [
      {
        "registry": "npm",
        "name": "jaw9c/awesome-remote-mcp-servers",
        "command": "npx",
        "arguments": [
          "<REMOTE_MCP_SERVER_URL>"
        ]
      }
    ]
  },
  {
    "name": "io.github.ai-agent-hub/mcp-marketplace",
    "description": "OpenSource MCP Marketplace and Html Plugin to Integrate with your AI Application",
    "repository": "https://github.com/AI-Agent-Hub/mcp-marketplace"
  },
  {
    "name": "io.github.mcp-router/mcp-router",
    "description": "MCP Router enables easily manage your MCP (Model Context Protocol) servers with enhanced security",
    "repository": "https://github.com/mcp-router/mcp-router",
    "packages": [
      {
        "registry": "npm",
        "name": "my-docs-site",
        "version": "0.0.0",
        "command": "npx",
        "arguments": [
          "connect"
        ],
        "environment": [
          {
            "name": "MCPR_TOKEN",
            "description": "Issued Token"
          }
        ]
      }
    ]
  },
  {
    "name": "io.github.mcpx-dev/mcp-badges",
    "description": "Get your projects MCP (Model Context Protocol)  badges",
    "repository": "https://github.com/mcpx-dev/mcp-badges"
  },
  {
    "name": "io.github.apappascs/mcp-servers-hub",
    "description": "Discover the most comprehensive and up-to-date collection of MCP servers in the market. This repository serves as a centralized hub, offering an extensive catalog of open-source and proprietary MCP servers, complete with features, documentation links, and contributors.",
    "repository": "https://github.com/apappascs/mcp-servers-hub"
  },
  {
    "name": "io.github.wong2/mcp-cli",
    "description": "A CLI inspector for the Model Context Protocol",
    "repository": "https://github.com/wong2/mcp-cli"
  },
  {
    "name": "io.github.eqtylab/mcp-guardian",
    "description": "Manage / Proxy / Secure your MCP Servers",
    "repository": "https://github.com/eqtylab/mcp-guardian"
  },
  {
    "name": "io.github.pathintegral-institute/mcpm.sh",
    "description": "CLI MCP package manager & registry for all platforms and all clients. Search & configure MCP servers. Advanced Router & Profile features.",
    "repository": "https://github.com/pathintegral-institute/mcpm.sh"
  },
  {
    "name": "io.github.zueai/mcp-manager",
    "description": "simple web ui to manage mcp (model context protocol) servers in the claude app",
    "repository": "https://github.com/zueai/mcp-manager"
  },
  {
    "name": "io.github.jeamee/mcphub-desktop",
    "description": "Desktop APP for Discover and Install MCP Servers",
    "repository": "https://github.com/Jeamee/MCPHub-Desktop"
  },
  {
    "name": "io.github.chatmcp/mcp-directory",
    "description": "directory for Awesome MCP Servers",
    "repository": "https://github.com/chatmcp/mcpso"
  }
]